/*
 * Outgoing file RESTful service
 *
 * The methods are restricted to portal user that have the permission for sending documents. Different API versions work differently - be sure  you know what you're doing, before you set an API version. The portal may define a minimum API version that can't be overridden.  Before you can use the REST API for your portal, you need to accept the DSGVO AVV once. Also, the REST API is currently restricted to customers  that bought a PDFMAILER (non-Pure) license from gotomaxx directly, or are coming from XRechnung.new or ZUGFeRD.new.  If you don't know how to get your personal Bearer token (which is required to call any API method), please contact our technical support.  In case your REST client doesn't support OAuth2 or Bearer token, there are other possibilities for authentication:  - Use basic http authentication with your user credentials - Send a valid session ID as value in the parameter (GET or POST) `__sid` with every request  Please ask our technical staff for instructions how to create a valid session ID that can be used with this REST API.  __NOTE__: Boolean parameter values should be given as `1` (`true`) or `0` (`false`).  __NOTE__: The XRechnung API functionality requires a separate license and user permission.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// JSON document item object template for documentation purposes and XML transformation
    /// </summary>
    [DataContract]
    public partial class GotomaxxJsonDocumentItem : IEquatable<GotomaxxJsonDocumentItem>
    {
        /// <summary>
        /// Position line ID (BT-126)  __NOTE__: Actually this value is required, but may be auto-completed from the index of the item in the item list.
        /// </summary>
        /// <value>Position line ID (BT-126)  __NOTE__: Actually this value is required, but may be auto-completed from the index of the item in the item list.</value>
        [MinLength(1)]
        [DataMember(Name="lineId", EmitDefaultValue=false)]
        public string LineId { get; set; }

        /// <summary>
        /// Reference line ID (BT-132)
        /// </summary>
        /// <value>Reference line ID (BT-132)</value>
        [MinLength(1)]
        [DataMember(Name="referenceLineId", EmitDefaultValue=false)]
        public string ReferenceLineId { get; set; }

        /// <summary>
        /// Seller item ID (BT-155)
        /// </summary>
        /// <value>Seller item ID (BT-155)</value>
        [MinLength(1)]
        [DataMember(Name="sellerId", EmitDefaultValue=false)]
        public string SellerId { get; set; }

        /// <summary>
        /// Buyer item ID (BT-156)
        /// </summary>
        /// <value>Buyer item ID (BT-156)</value>
        [MinLength(1)]
        [DataMember(Name="buyerId", EmitDefaultValue=false)]
        public string BuyerId { get; set; }

        /// <summary>
        /// Object ID (BT-128)
        /// </summary>
        /// <value>Object ID (BT-128)</value>
        [MinLength(1)]
        [DataMember(Name="object", EmitDefaultValue=false)]
        public string Object { get; set; }

        /// <summary>
        /// Name (BT-153)
        /// </summary>
        /// <value>Name (BT-153)</value>
        [Required]
        [MinLength(1)]
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Quantity (BT-129)
        /// </summary>
        /// <value>Quantity (BT-129)</value>
        [DataMember(Name="quantity", EmitDefaultValue=false)]
        public decimal Quantity { get; set; }

        /// <summary>
        /// Unit base quantity (BT-149)
        /// </summary>
        /// <value>Unit base quantity (BT-149)</value>
        [DataMember(Name="baseQuantity", EmitDefaultValue=false)]
        public decimal BaseQuantity { get; set; }


        /// <summary>
        /// Unit (BT-130)  - `11`: outfit - `13`: ration - `14`: shot - `15`: stick, military - `20`: twenty foot container - `21`: forty foot container - `22`: decilitre per gram - `23`: gram per cubic centimetre - `24`: theoretical pound - `25`: gram per square centimetre - `27`: theoretical ton - `28`: kilogram per square metre - `33`: kilopascal square metre per gram - `34`: kilopascal per millimetre - `35`: millilitre per square centimetre second - `37`: ounce per square foot - `38`: ounce per square foot per 0,01inch - `40`: millilitre per second - `41`: millilitre per minute - `56`: sitas - `57`: mesh - `58`: net kilogram - `59`: part per million - `60`: percent weight - `61`: part per billion (US) - `74`: millipascal - `77`: milli-inch - `80`: pound per square inch absolute - `81`: henry - `85`: foot pound-force - `87`: pound per cubic foot - `89`: poise - `91`: stokes - `1I`: Festpreis - `2A`: radian per second - `2B`: radian per second squared - `2C`: roentgen - `2G`: volt AC - `2H`: volt DC - `2I`: British thermal unit (international table) per hour - `2J`: cubic centimetre per second - `2K`: cubic foot per hour - `2L`: cubic foot per minute - `2M`: centimetre per second - `2N`: decibel - `2P`: kilobyte - `2Q`: kilobecquerel - `2R`: kilocurie - `2U`: megagram - `2X`: metre per minute - `2Y`: milliroentgen - `2Z`: millivolt - `3B`: megajoule - `3C`: manmonth - `4C`: centistokes - `4G`: microlitre - `4H`: micrometre (micron) - `4K`: milliampere - `4L`: megabyte - `4M`: milligram per hour - `4N`: megabecquerel - `4O`: microfarad - `4P`: newton per metre - `4Q`: ounce inch - `4R`: ounce foot - `4T`: picofarad - `4U`: pound per hour - `4W`: ton (US) per hour - `4X`: kilolitre per hour - `5A`: barrel (US) per minute - `5B`: batch - `5E`: MMSCF/day - `5J`: hydraulic horse power - `A10`: ampere square metre per joule second - `A11`: angstrom - `A12`: astronomical unit - `A13`: attojoule - `A14`: barn - `A15`: barn per electronvolt - `A16`: barn per steradian electronvolt - `A17`: barn per steradian - `A18`: becquerel per kilogram - `A19`: becquerel per cubic metre - `A2`: ampere per centimetre - `A20`: British thermal unit (international table) per second square foot degree Rankine - `A21`: British thermal unit (international table) per pound degree Rankine - `A22`: British thermal unit (international table) per second foot degree Rankine - `A23`: British thermal unit (international table) per hour square foot degree Rankine - `A24`: candela per square metre - `A26`: coulomb metre - `A27`: coulomb metre squared per volt - `A28`: coulomb per cubic centimetre - `A29`: coulomb per cubic metre - `A3`: ampere per millimetre - `A30`: coulomb per cubic millimetre - `A31`: coulomb per kilogram second - `A32`: coulomb per mole - `A33`: coulomb per square centimetre - `A34`: coulomb per square metre - `A35`: coulomb per square millimetre - `A36`: cubic centimetre per mole - `A37`: cubic decimetre per mole - `A38`: cubic metre per coulomb - `A39`: cubic metre per kilogram - `A4`: ampere per square centimetre - `A40`: cubic metre per mole - `A41`: ampere per square metre - `A42`: curie per kilogram - `A43`: deadweight tonnage - `A44`: decalitre - `A45`: decametre - `A47`: decitex - `A48`: degree Rankine - `A49`: denier - `A5`: ampere square metre - `A53`: electronvolt - `A54`: electronvolt per metre - `A55`: electronvolt square metre - `A56`: electronvolt square metre per kilogram - `A59`: 8-part cloud cover - `A6`: ampere per square metre kelvin squared - `A68`: exajoule - `A69`: farad per metre - `A7`: ampere per square millimetre - `A70`: femtojoule - `A71`: femtometre - `A73`: foot per second squared - `A74`: foot pound-force per second - `A75`: freight ton - `A76`: gal - `A8`: ampere second - `A84`: gigacoulomb per cubic metre - `A85`: gigaelectronvolt - `A86`: gigahertz - `A87`: gigaohm - `A88`: gigaohm metre - `A89`: gigapascal - `A9`: rate - `A90`: gigawatt - `A91`: gon - `A93`: gram per cubic metre - `A94`: gram per mole - `A95`: gray - `A96`: gray per second - `A97`: hectopascal - `A98`: henry per metre - `A99`: bit - `AA`: ball - `AB`: bulk pack - `ACR`: acre - `ACT`: activity - `AD`: byte - `AE`: ampere per metre - `AH`: additional minute - `AI`: average minute per call - `AK`: fathom - `AL`: access line - `AMH`: ampere hour - `AMP`: ampere - `ANN`: year - `APZ`: troy ounce or apothecary ounce - `AQ`: anti-hemophilic factor (AHF) unit - `AS`: assortment - `ASM`: alcoholic strength by mass - `ASU`: alcoholic strength by volume - `ATM`: standard atmosphere - `AWG`: american wire gauge - `AY`: assembly - `AZ`: British thermal unit (international table) per pound - `B1`: barrel (US) per day - `B10`: bit per second - `B11`: joule per kilogram kelvin - `B12`: joule per metre - `B13`: joule per square metre - `B14`: joule per metre to the fourth power - `B15`: joule per mole - `B16`: joule per mole kelvin - `B17`: credit - `B18`: joule second - `B19`: digit - `B20`: joule square metre per kilogram - `B21`: kelvin per watt - `B22`: kiloampere - `B23`: kiloampere per square metre - `B24`: kiloampere per metre - `B25`: kilobecquerel per kilogram - `B26`: kilocoulomb - `B27`: kilocoulomb per cubic metre - `B28`: kilocoulomb per square metre - `B29`: kiloelectronvolt - `B3`: batting pound - `B30`: gibibit - `B31`: kilogram metre per second - `B32`: kilogram metre squared - `B33`: kilogram metre squared per second - `B34`: kilogram per cubic decimetre - `B35`: kilogram per litre - `B4`: barrel, imperial - `B41`: kilojoule per kelvin - `B42`: kilojoule per kilogram - `B43`: kilojoule per kilogram kelvin - `B44`: kilojoule per mole - `B45`: kilomole - `B46`: kilomole per cubic metre - `B47`: kilonewton - `B48`: kilonewton metre - `B49`: kiloohm - `B50`: kiloohm metre - `B52`: kilosecond - `B53`: kilosiemens - `B54`: kilosiemens per metre - `B55`: kilovolt per metre - `B56`: kiloweber per metre - `B57`: light year - `B58`: litre per mole - `B59`: lumen hour - `B60`: lumen per square metre - `B61`: lumen per watt - `B62`: lumen second - `B63`: lux hour - `B64`: lux second - `B66`: megaampere per square metre - `B67`: megabecquerel per kilogram - `B68`: gigabit - `B69`: megacoulomb per cubic metre - `B7`: cycle - `B70`: megacoulomb per square metre - `B71`: megaelectronvolt - `B72`: megagram per cubic metre - `B73`: meganewton - `B74`: meganewton metre - `B75`: megaohm - `B76`: megaohm metre - `B77`: megasiemens per metre - `B78`: megavolt - `B79`: megavolt per metre - `B8`: joule per cubic metre - `B80`: gigabit per second - `B81`: reciprocal metre squared reciprocal second - `B82`: inch per linear foot - `B83`: metre to the fourth power - `B84`: microampere - `B85`: microbar - `B86`: microcoulomb - `B87`: microcoulomb per cubic metre - `B88`: microcoulomb per square metre - `B89`: microfarad per metre - `B90`: microhenry - `B91`: microhenry per metre - `B92`: micronewton - `B93`: micronewton metre - `B94`: microohm - `B95`: microohm metre - `B96`: micropascal - `B97`: microradian - `B98`: microsecond - `B99`: microsiemens - `BAR`: bar [unit of pressure] - `BB`: base box - `BFT`: board foot - `BHP`: brake horse power - `BIL`: billion (EUR) - `BLD`: dry barrel (US) - `BLL`: barrel (US) - `BP`: hundred board foot - `BPM`: beats per minute - `BQL`: becquerel - `BTU`: British thermal unit (international table) - `BUA`: bushel (US) - `BUI`: bushel (UK) - `C0`: call - `C10`: millifarad - `C11`: milligal - `C12`: milligram per metre - `C13`: milligray - `C14`: millihenry - `C15`: millijoule - `C16`: millimetre per second - `C17`: millimetre squared per second - `C18`: millimole - `C19`: mole per kilogram - `C20`: millinewton - `C21`: kibibit - `C22`: millinewton per metre - `C23`: milliohm metre - `C24`: millipascal second - `C25`: milliradian - `C26`: millisecond - `C27`: millisiemens - `C28`: millisievert - `C29`: millitesla - `C3`: microvolt per metre - `C30`: millivolt per metre - `C31`: milliwatt - `C32`: milliwatt per square metre - `C33`: milliweber - `C34`: mole - `C35`: mole per cubic decimetre - `C36`: mole per cubic metre - `C37`: kilobit - `C38`: mole per litre - `C39`: nanoampere - `C40`: nanocoulomb - `C41`: nanofarad - `C42`: nanofarad per metre - `C43`: nanohenry - `C44`: nanohenry per metre - `C45`: nanometre - `C46`: nanoohm metre - `C47`: nanosecond - `C48`: nanotesla - `C49`: nanowatt - `C50`: neper - `C51`: neper per second - `C52`: picometre - `C53`: newton metre second - `C54`: newton metre squared per kilogram squared - `C55`: newton per square metre - `C56`: newton per square millimetre - `C57`: newton second - `C58`: newton second per metre - `C59`: octave - `C60`: ohm centimetre - `C61`: ohm metre - `C62`: one - `C63`: parsec - `C64`: pascal per kelvin - `C65`: pascal second - `C66`: pascal second per cubic metre - `C67`: pascal second per metre - `C68`: petajoule - `C69`: phon - `C7`: centipoise - `C70`: picoampere - `C71`: picocoulomb - `C72`: picofarad per metre - `C73`: picohenry - `C74`: kilobit per second - `C75`: picowatt - `C76`: picowatt per square metre - `C78`: pound-force - `C79`: kilovolt ampere hour - `C8`: millicoulomb per kilogram - `C80`: rad - `C81`: radian - `C82`: radian square metre per mole - `C83`: radian square metre per kilogram - `C84`: radian per metre - `C85`: reciprocal angstrom - `C86`: reciprocal cubic metre - `C87`: reciprocal cubic metre per second - `C88`: reciprocal electron volt per cubic metre - `C89`: reciprocal henry - `C9`: coil group - `C90`: reciprocal joule per cubic metre - `C91`: reciprocal kelvin or kelvin to the power minus one - `C92`: reciprocal metre - `C93`: reciprocal square metre - `C94`: reciprocal minute - `C95`: reciprocal mole - `C96`: reciprocal pascal or pascal to the power minus one - `C97`: reciprocal second - `C99`: reciprocal second per metre squared - `CCT`: carrying capacity in metric ton - `CDL`: candela - `CEL`: degree Celsius - `CEN`: hundred - `CG`: card - `CGM`: centigram - `CKG`: coulomb per kilogram - `CLF`: hundred leave - `CLT`: centilitre - `CMK`: square centimetre - `CMQ`: Kubikzentimeter - `CMT`: Zentimeter - `CNP`: hundred pack - `CNT`: cental (UK) - `COU`: coulomb - `CTG`: content gram - `CTM`: metric carat - `CTN`: content ton (metric) - `CUR`: curie - `CWA`: hundred pound (cwt) / hundred weight (US) - `CWI`: hundred weight (UK) - `D03`: kilowatt hour per hour - `D04`: lot [unit of weight] - `D1`: reciprocal second per steradian - `D10`: siemens per metre - `D11`: mebibit - `D12`: siemens square metre per mole - `D13`: sievert - `D15`: sone - `D16`: square centimetre per erg - `D17`: square centimetre per steradian erg - `D18`: metre kelvin - `D19`: square metre kelvin per watt - `D2`: reciprocal second per steradian metre squared - `D20`: square metre per joule - `D21`: square metre per kilogram - `D22`: square metre per mole - `D23`: pen gram (protein) - `D24`: square metre per steradian - `D25`: square metre per steradian joule - `D26`: square metre per volt second - `D27`: steradian - `D29`: terahertz - `D30`: terajoule - `D31`: terawatt - `D32`: terawatt hour - `D33`: tesla - `D34`: tex - `D36`: megabit - `D41`: tonne per cubic metre - `D42`: tropical year - `D43`: unified atomic mass unit - `D44`: var - `D45`: volt squared per kelvin squared - `D46`: volt - ampere - `D47`: volt per centimetre - `D48`: volt per kelvin - `D49`: millivolt per kelvin - `D5`: kilogram per square centimetre - `D50`: volt per metre - `D51`: volt per millimetre - `D52`: watt per kelvin - `D53`: watt per metre kelvin - `D54`: watt per square metre - `D55`: watt per square metre kelvin - `D56`: watt per square metre kelvin to the fourth power - `D57`: watt per steradian - `D58`: watt per steradian square metre - `D59`: weber per metre - `D6`: roentgen per second - `D60`: weber per millimetre - `D61`: minute [unit of angle] - `D62`: second [unit of angle] - `D63`: book - `D65`: round - `D68`: number of words - `D69`: inch to the fourth power - `D73`: joule square metre - `D74`: kilogram per mole - `D77`: megacoulomb - `D78`: megajoule per second - `D80`: microwatt - `D81`: microtesla - `D82`: microvolt - `D83`: millinewton metre - `D85`: microwatt per square metre - `D86`: millicoulomb - `D87`: millimole per kilogram - `D88`: millicoulomb per cubic metre - `D89`: millicoulomb per square metre - `D91`: rem - `D93`: second per cubic metre - `D94`: second per cubic metre radian - `D95`: joule per gram - `DAA`: decare - `DAD`: ten day - `DAY`: Tag - `DB`: dry pound - `DD`: degree [unit of angle] - `DEC`: decade - `DG`: decigram - `DJ`: decagram - `DLT`: decilitre - `DMA`: cubic decametre - `DMK`: square decimetre - `DMO`: standard kilolitre - `DMQ`: cubic decimetre - `DMT`: decimetre - `DN`: decinewton metre - `DPC`: Dutzend St�ck - `DPR`: Dutzend Paar - `DPT`: displacement tonnage - `DRA`: dram (US) - `DRI`: dram (UK) - `DRL`: dozen roll - `DT`: dry ton - `DTN`: decitonne - `DWT`: pennyweight - `DZN`: dozen - `DZP`: dozen pack - `E01`: Newton pro Quadratzentimeter - `E07`: megawatt hour per hour - `E08`: megawatt per hertz - `E09`: milliampere hour - `E10`: degree day - `E12`: mille - `E14`: kilocalorie (international table) - `E15`: kilocalorie (thermochemical) per hour - `E16`: million Btu(IT) per hour - `E17`: cubic foot per second - `E18`: tonne per hour - `E19`: ping - `E20`: megabit per second - `E21`: shares - `E22`: TEU - `E23`: tyre - `E25`: active unit - `E27`: dose - `E28`: air dry ton - `E30`: strand - `E31`: Quadratmeter pro Liter - `E32`: litre per hour - `E33`: foot per thousand - `E34`: gigabyte - `E35`: terabyte - `E36`: petabyte - `E37`: pixel - `E38`: megapixel - `E39`: dots per inch - `E4`: gross kilogram - `E40`: part per hundred thousand - `E41`: kilogram-force per square millimetre - `E42`: kilogram-force per square centimetre - `E43`: joule per square centimetre - `E44`: kilogram-force metre per square centimetre - `E45`: milliohm - `E46`: kilowatt hour per cubic metre - `E47`: kilowatt hour per kelvin - `E48`: service unit - `E49`: working day - `E50`: accounting unit - `E51`: job - `E52`: run foot - `E53`: test - `E54`: trip - `E55`: use - `E56`: well - `E57`: zone - `E58`: exabit per second - `E59`: exbibyte - `E60`: pebibyte - `E61`: tebibyte - `E62`: gibibyte - `E63`: mebibyte - `E64`: kibibyte - `E65`: exbibit per metre - `E66`: exbibit per square metre - `E67`: exbibit per cubic metre - `E68`: gigabyte per second - `E69`: gibibit per metre - `E70`: gibibit per square metre - `E71`: gibibit per cubic metre - `E72`: kibibit per metre - `E73`: kibibit per square metre - `E74`: kibibit per cubic metre - `E75`: mebibit per metre - `E76`: mebibit per square metre - `E77`: mebibit per cubic metre - `E78`: petabit - `E79`: petabit per second - `E80`: pebibit per metre - `E81`: pebibit per square metre - `E82`: pebibit per cubic metre - `E83`: terabit - `E84`: terabit per second - `E85`: tebibit per metre - `E86`: tebibit per cubic metre - `E87`: tebibit per square metre - `E88`: bit per metre - `E89`: bit per square metre - `E90`: reciprocal centimetre - `E91`: reciprocal day - `E92`: cubic decimetre per hour - `E93`: kilogram per hour - `E94`: kilomole per second - `E95`: mole per second - `E96`: degree per second - `E97`: millimetre per degree Celcius metre - `E98`: degree Celsius per kelvin - `E99`: hectopascal per bar - `EA`: each - `EB`: electronic mail box - `EQ`: equivalent gallon - `F01`: bit per cubic metre - `F02`: kelvin per kelvin - `F03`: kilopascal per bar - `F04`: millibar per bar - `F05`: megapascal per bar - `F06`: poise per bar - `F07`: pascal per bar - `F08`: milliampere per inch - `F10`: kelvin per hour - `F11`: kelvin per minute - `F12`: kelvin per second - `F13`: slug - `F14`: gram per kelvin - `F15`: kilogram per kelvin - `F16`: milligram per kelvin - `F17`: pound-force per foot - `F18`: kilogram square centimetre - `F19`: kilogram square millimetre - `F20`: pound inch squared - `F21`: pound-force inch - `F22`: pound-force foot per ampere - `F23`: gram per cubic decimetre - `F24`: kilogram per kilomol - `F25`: gram per hertz - `F26`: gram per day - `F27`: gram per hour - `F28`: gram per minute - `F29`: gram per second - `F30`: kilogram per day - `F31`: kilogram per minute - `F32`: milligram per day - `F33`: milligram per minute - `F34`: milligram per second - `F35`: gram per day kelvin - `F36`: gram per hour kelvin - `F37`: gram per minute kelvin - `F38`: gram per second kelvin - `F39`: kilogram per day kelvin - `F40`: kilogram per hour kelvin - `F41`: kilogram per minute kelvin - `F42`: kilogram per second kelvin - `F43`: milligram per day kelvin - `F44`: milligram per hour kelvin - `F45`: milligram per minute kelvin - `F46`: milligram per second kelvin - `F47`: newton per millimetre - `F48`: pound-force per inch - `F49`: rod [unit of distance] - `F50`: micrometre per kelvin - `F51`: centimetre per kelvin - `F52`: metre per kelvin - `F53`: millimetre per kelvin - `F54`: milliohm per metre - `F55`: ohm per mile (statute mile) - `F56`: Ohm pro Kilometer - `F57`: milliampere per pound-force per square inch - `F58`: reciprocal bar - `F59`: milliampere per bar - `F60`: degree Celsius per bar - `F61`: kelvin per bar - `F62`: gram per day bar - `F63`: gram per hour bar - `F64`: gram per minute bar - `F65`: gram per second bar - `F66`: kilogram per day bar - `F67`: kilogram per hour bar - `F68`: kilogram per minute bar - `F69`: kilogram per second bar - `F70`: milligram per day bar - `F71`: milligram per hour bar - `F72`: milligram per minute bar - `F73`: milligram per second bar - `F74`: gram per bar - `F75`: milligram per bar - `F76`: milliampere per millimetre - `F77`: pascal second per kelvin - `F78`: inch of water - `F79`: inch of mercury - `F80`: water horse power - `F81`: bar per kelvin - `F82`: hectopascal per kelvin - `F83`: kilopascal per kelvin - `F84`: millibar per kelvin - `F85`: megapascal per kelvin - `F86`: poise per kelvin - `F87`: volt per litre minute - `F88`: newton centimetre - `F89`: newton metre per degree - `F90`: newton metre per ampere - `F91`: bar litre per second - `F92`: bar cubic metre per second - `F93`: hectopascal litre per second - `F94`: hectopascal cubic metre per second - `F95`: millibar litre per second - `F96`: millibar cubic metre per second - `F97`: megapascal litre per second - `F98`: megapascal cubic metre per second - `F99`: pascal litre per second - `FAH`: degree Fahrenheit - `FAR`: farad - `FBM`: fibre metre - `FC`: thousand cubic foot - `FF`: hundred cubic metre - `FH`: micromole - `FIT`: failures in time - `FL`: flake ton - `FOT`: foot - `FP`: pound per square foot - `FR`: foot per minute - `FS`: foot per second - `FTK`: square foot - `FTQ`: cubic foot - `G01`: pascal cubic metre per second - `G04`: centimetre per bar - `G05`: metre per bar - `G06`: millimetre per bar - `G08`: square inch per second - `G09`: Quadratmeter pro Sekunde Kelvin - `G10`: stokes per kelvin - `G11`: gram per cubic centimetre bar - `G12`: gram per cubic decimetre bar - `G13`: gram per litre bar - `G14`: gram per cubic metre bar - `G15`: gram per millilitre bar - `G16`: kilogram per cubic centimetre bar - `G17`: kilogram per litre bar - `G18`: kilogram per cubic metre bar - `G19`: newton metre per kilogram - `G2`: US gallon per minute - `G20`: pound-force foot per pound - `G21`: cup [unit of volume] - `G23`: peck - `G24`: tablespoon (US) - `G25`: teaspoon (US) - `G26`: stere - `G27`: cubic centimetre per kelvin - `G28`: litre per kelvin - `G29`: cubic metre per kelvin - `G3`: Imperial gallon per minute - `G30`: millilitre per kelvin - `G31`: kilogram per cubic centimetre - `G32`: ounce (avoirdupois) per cubic yard - `G33`: gram per cubic centimetre kelvin - `G34`: gram per cubic decimetre kelvin - `G35`: gram per litre kelvin - `G36`: gram per cubic metre kelvin - `G37`: gram per millilitre kelvin - `G38`: kilogram per cubic centimetre kelvin - `G39`: kilogram per litre kelvin - `G40`: kilogram per cubic metre kelvin - `G41`: square metre per second bar - `G42`: microsiemens per centimetre - `G43`: microsiemens per metre - `G44`: nanosiemens per centimetre - `G45`: nanosiemens per metre - `G46`: stokes per bar - `G47`: cubic centimetre per day - `G48`: cubic centimetre per hour - `G49`: cubic centimetre per minute - `G50`: gallon (US) per hour - `G51`: litre per second - `G52`: cubic metre per day - `G53`: cubic metre per minute - `G54`: millilitre per day - `G55`: millilitre per hour - `G56`: cubic inch per hour - `G57`: cubic inch per minute - `G58`: cubic inch per second - `G59`: milliampere per litre minute - `G60`: volt per bar - `G61`: cubic centimetre per day kelvin - `G62`: cubic centimetre per hour kelvin - `G63`: cubic centimetre per minute kelvin - `G64`: cubic centimetre per second kelvin - `G65`: litre per day kelvin - `G66`: litre per hour kelvin - `G67`: litre per minute kelvin - `G68`: litre per second kelvin - `G69`: cubic metre per day kelvin - `G70`: cubic metre per hour kelvin - `G71`: cubic metre per minute kelvin - `G72`: cubic metre per second kelvin - `G73`: millilitre per day kelvin - `G74`: millilitre per hour kelvin - `G75`: Milliliter pro Minute Kelvin - `G76`: millilitre per second kelvin - `G77`: millimetre to the fourth power - `G78`: cubic centimetre per day bar - `G79`: cubic centimetre per hour bar - `G80`: cubic centimetre per minute bar - `G81`: cubic centimetre per second bar - `G82`: litre per day bar - `G83`: litre per hour bar - `G84`: litre per minute bar - `G85`: litre per second bar - `G86`: cubic metre per day bar - `G87`: cubic metre per hour bar - `G88`: Kubikmeter pro Minute bar - `G89`: cubic metre per second bar - `G90`: Milliliter pro Tag bar - `G91`: millilitre per hour bar - `G92`: millilitre per minute bar - `G93`: millilitre per second bar - `G94`: cubic centimetre per bar - `G95`: litre per bar - `G96`: cubic metre per bar - `G97`: millilitre per bar - `G98`: microhenry per kiloohm - `G99`: microhenry per ohm - `GB`: gallon (US) per day - `GBQ`: gigabecquerel - `GDW`: Gramm, Trockengewicht - `GE`: pound per gallon (US) - `GF`: gram per metre (gram per 100 centimetres) - `GFI`: gram of fissile isotope - `GGR`: great gross - `GIA`: gill (US) - `GIC`: gram, including container - `GII`: gill (UK) - `GIP`: gram, including inner packaging - `GJ`: gram per millilitre - `GL`: gram per litre - `GLD`: dry gallon (US) - `GLI`: gallon (UK) - `GLL`: gallon (US) - `GM`: gram per square metre - `GO`: milligram per square metre - `GP`: milligram per cubic metre - `GQ`: microgram per cubic metre - `GRM`: Gramm - `GRN`: grain - `GRO`: gross - `GV`: gigajoule - `GWH`: gigawatt hour - `H03`: henry per kiloohm - `H04`: henry per ohm - `H05`: millihenry per kiloohm - `H06`: millihenry per ohm - `H07`: pascal second per bar - `H08`: microbecquerel - `H09`: reciprocal year - `H10`: reciprocal hour - `H11`: reciprocal month - `H12`: degree Celsius per hour - `H13`: degree Celsius per minute - `H14`: degree Celsius per second - `H15`: square centimetre per gram - `H16`: square decametre - `H18`: square hectometre - `H19`: cubic hectometre - `H20`: cubic kilometre - `H21`: blank - `H22`: volt square inch per pound-force - `H23`: volt per inch - `H24`: volt per microsecond - `H25`: percent per kelvin - `H26`: ohm per metre - `H27`: degree per metre - `H28`: microfarad per kilometre - `H29`: microgram per litre - `H30`: square micrometre (square micron) - `H31`: Ampere pro Kilogramm - `H32`: ampere squared second - `H33`: farad per kilometre - `H34`: hertz metre - `H35`: kelvin metre per watt - `H36`: megaohm per kilometre - `H37`: megaohm per metre - `H38`: megaampere - `H39`: megahertz kilometre - `H40`: newton per ampere - `H41`: newton metre watt to the power minus 0,5 - `H42`: pascal per metre - `H43`: siemens per centimetre - `H44`: teraohm - `H45`: volt second per metre - `H46`: volt per second - `H47`: watt per cubic metre - `H48`: attofarad - `H49`: centimetre per hour - `H50`: reciprocal cubic centimetre - `H51`: decibel per kilometre - `H52`: decibel per metre - `H53`: kilogram per bar - `H54`: kilogram per cubic decimetre kelvin - `H55`: kilogram per cubic decimetre bar - `H56`: kilogram per square metre second - `H57`: inch per two pi radiant - `H58`: metre per volt second - `H59`: square metre per newton - `H60`: cubic metre per cubic metre - `H61`: millisiemens per centimetre - `H62`: millivolt per minute - `H63`: milligram per square centimetre - `H64`: milligram per gram - `H65`: millilitre per cubic metre - `H66`: millimetre per year - `H67`: millimetre per hour - `H68`: millimole per gram - `H69`: picopascal per kilometre - `H70`: picosecond - `H71`: percent per month - `H72`: percent per hectobar - `H73`: percent per decakelvin - `H74`: watt per metre - `H75`: decapascal - `H76`: gram per millimetre - `H77`: module width - `H79`: French gauge - `H80`: rack unit - `H81`: millimetre per minute - `H82`: big point - `H83`: litre per kilogram - `H84`: gram millimetre - `H85`: wechselseitige Woche - `H87`: St�ck - `H88`: megaohm kilometre - `H89`: percent per ohm - `H90`: percent per degree - `H91`: percent per ten thousand - `H92`: percent per one hundred thousand - `H93`: percent per hundred - `H94`: percent per thousand - `H95`: percent per volt - `H96`: percent per bar - `H98`: percent per inch - `H99`: percent per metre - `HA`: hank - `HBA`: hectobar - `HBX`: hundred boxes - `HC`: hundred count - `HDW`: hundred kilogram, dry weight - `HEA`: head - `HGM`: hectogram - `HH`: hundred cubic foot - `HIU`: hundred international unit - `HKM`: hundred kilogram, net mass - `HLT`: hectolitre - `HM`: mile per hour (statute mile) - `HMQ`: million cubic metre - `HMT`: hectometre - `HPA`: hectolitre of pure alcohol - `HTZ`: hertz - `HUR`: Stunde - `IA`: inch pound (pound inch) - `IE`: person - `INH`: inch - `INK`: square inch - `INQ`: cubic inch - `ISD`: international sugar degree - `IU`: inch per second - `IUG`: international unit per gram - `IV`: inch per second squared - `J10`: percent per millimetre - `J12`: per mille per psi - `J13`: degree API - `J14`: degree Baume (origin scale) - `J15`: degree Baume (US heavy) - `J16`: degree Baume (US light) - `J17`: degree Balling - `J18`: degree Brix - `J19`: degree Fahrenheit hour square foot per British thermal unit (thermochemical) - `J2`: joule per kilogram - `J20`: degree Fahrenheit per kelvin - `J21`: degree Fahrenheit per bar - `J22`: degree Fahrenheit hour square foot per British thermal unit (international table) - `J23`: degree Fahrenheit per hour - `J24`: degree Fahrenheit per minute - `J25`: degree Fahrenheit per second - `J26`: reciprocal degree Fahrenheit - `J27`: degree Oechsle - `J28`: degree Rankine per hour - `J29`: degree Rankine per minute - `J30`: degree Rankine per second - `J31`: degree Twaddell - `J32`: micropoise - `J33`: microgram per kilogram - `J34`: microgram per cubic metre kelvin - `J35`: microgram per cubic metre bar - `J36`: microlitre per litre - `J38`: baud - `J39`: British thermal unit (mean) - `J40`: British thermal unit (international table) foot per hour square foot degree Fahrenheit - `J41`: British thermal unit (international table) inch per hour square foot degree Fahrenheit - `J42`: British thermal unit (international table) inch per second square foot degree Fahrenheit - `J43`: British thermal unit (international table) per pound degree Fahrenheit - `J44`: British thermal unit (international table) per minute - `J45`: British thermal unit (international table) per second - `J46`: British thermal unit (thermochemical) foot per hour square foot degree Fahrenheit - `J47`: British thermal unit (thermochemical) per hour - `J48`: British thermal unit (thermochemical) inch per hour square foot degree Fahrenheit - `J49`: British thermal unit (thermochemical) inch per second square foot degree Fahrenheit - `J50`: British thermal unit (thermochemical) per pound degree Fahrenheit - `J51`: British thermal unit (thermochemical) per minute - `J52`: British thermal unit (thermochemical) per second - `J53`: coulomb square metre per kilogram - `J54`: megabaud - `J55`: watt second - `J56`: bar per bar - `J57`: barrel (UK petroleum) - `J58`: barrel (UK petroleum) per minute - `J59`: barrel (UK petroleum) per day - `J60`: barrel (UK petroleum) per hour - `J61`: barrel (UK petroleum) per second - `J62`: barrel (US petroleum) per hour - `J63`: barrel (US petroleum) per second - `J64`: bushel (UK) per day - `J65`: bushel (UK) per hour - `J66`: bushel (UK) per minute - `J67`: bushel (UK) per second - `J68`: bushel (US dry) per day - `J69`: bushel (US dry) per hour - `J70`: bushel (US dry) per minute - `J71`: bushel (US dry) per second - `J72`: centinewton metre - `J73`: centipoise per kelvin - `J74`: centipoise per bar - `J75`: calorie (mean) - `J76`: calorie (international table) per gram degree Celsius - `J78`: calorie (thermochemical) per centimetre second degree Celsius - `J79`: calorie (thermochemical) per gram degree Celsius - `J81`: calorie (thermochemical) per minute - `J82`: calorie (thermochemical) per second - `J83`: clo - `J84`: centimetre per second kelvin - `J85`: centimetre per second bar - `J87`: cubic centimetre per cubic metre - `J90`: cubic decimetre per day - `J91`: cubic decimetre per cubic metre - `J92`: cubic decimetre per minute - `J93`: cubic decimetre per second - `J95`: ounce (UK fluid) per day - `J96`: ounce (UK fluid) per hour - `J97`: ounce (UK fluid) per minute - `J98`: ounce (UK fluid) per second - `J99`: ounce (US fluid) per day - `JE`: joule per kelvin - `JK`: megajoule per kilogram - `JM`: megajoule per cubic metre - `JNT`: pipeline joint - `JOU`: joule - `JPS`: hundred metre - `JWL`: number of jewels - `K1`: kilowatt demand - `K10`: ounce (US fluid) per hour - `K11`: ounce (US fluid) per minute - `K12`: ounce (US fluid) per second - `K13`: foot per degree Fahrenheit - `K14`: foot per hour - `K15`: foot pound-force per hour - `K16`: foot pound-force per minute - `K17`: foot per psi - `K18`: foot per second degree Fahrenheit - `K19`: foot per second psi - `K2`: kilovolt ampere reactive demand - `K20`: reciprocal cubic foot - `K21`: cubic foot per degree Fahrenheit - `K22`: cubic foot per day - `K23`: cubic foot per psi - `K26`: gallon (UK) per day - `K27`: gallon (UK) per hour - `K28`: gallon (UK) per second - `K3`: kilovolt ampere reactive hour - `K30`: gallon (US liquid) per second - `K31`: gram-force per square centimetre - `K32`: gill (UK) per day - `K33`: gill (UK) per hour - `K34`: gill (UK) per minute - `K35`: gill (UK) per second - `K36`: gill (US) per day - `K37`: gill (US) per hour - `K38`: gill (US) per minute - `K39`: gill (US) per second - `K40`: standard acceleration of free fall - `K41`: grain per gallon (US) - `K42`: horsepower (boiler) - `K43`: horsepower (electric) - `K45`: inch per degree Fahrenheit - `K46`: inch per psi - `K47`: inch per second degree Fahrenheit - `K48`: inch per second psi - `K49`: reciprocal cubic inch - `K50`: kilobaud - `K51`: kilocalorie (mean) - `K52`: kilocalorie (international table) per hour metre degree Celsius - `K53`: kilocalorie (thermochemical) - `K54`: kilocalorie (thermochemical) per minute - `K55`: kilocalorie (thermochemical) per second - `K58`: kilomole per hour - `K59`: kilomole per cubic metre kelvin - `K6`: kilolitre - `K60`: kilomole per cubic metre bar - `K61`: kilomole per minute - `K62`: litre per litre - `K63`: reciprocal litre - `K64`: pound (avoirdupois) per degree Fahrenheit - `K65`: pound (avoirdupois) square foot - `K66`: pound (avoirdupois) per day - `K67`: pound per foot hour - `K68`: pound per foot second - `K69`: pound (avoirdupois) per cubic foot degree Fahrenheit - `K70`: pound (avoirdupois) per cubic foot psi - `K71`: pound (avoirdupois) per gallon (UK) - `K73`: pound (avoirdupois) per hour degree Fahrenheit - `K74`: pound (avoirdupois) per hour psi - `K75`: pound (avoirdupois) per cubic inch degree Fahrenheit - `K76`: pound (avoirdupois) per cubic inch psi - `K77`: pound (avoirdupois) per psi - `K78`: pound (avoirdupois) per minute - `K79`: pound (avoirdupois) per minute degree Fahrenheit - `K80`: pound (avoirdupois) per minute psi - `K81`: pound (avoirdupois) per second - `K82`: pound (avoirdupois) per second degree Fahrenheit - `K83`: pound (avoirdupois) per second psi - `K84`: pound per cubic yard - `K85`: pound-force per square foot - `K86`: pound-force per square inch degree Fahrenheit - `K87`: psi cubic inch per second - `K88`: psi litre per second - `K89`: psi cubic metre per second - `K90`: psi cubic yard per second - `K91`: pound-force second per square foot - `K92`: pound-force second per square inch - `K93`: reciprocal psi - `K94`: quart (UK liquid) per day - `K95`: quart (UK liquid) per hour - `K96`: quart (UK liquid) per minute - `K97`: quart (UK liquid) per second - `K98`: quart (US liquid) per day - `K99`: quart (US liquid) per hour - `KA`: cake - `KAT`: katal - `KB`: kilocharacter - `KBA`: kilobar - `KCC`: kilogram of choline chloride - `KDW`: kilogram drained net weight - `KEL`: kelvin - `KGM`: Kilogramm - `KGS`: kilogram per second - `KHY`: kilogram of hydrogen peroxide - `KHZ`: kilohertz - `KI`: kilogram per millimetre width - `KIC`: kilogram, including container - `KIP`: kilogram, including inner packaging - `KJ`: kilosegment - `KJO`: kilojoule - `KL`: kilogram per metre - `KLK`: lactic dry material percentage - `KLX`: kilolux - `KMA`: kilogram of methylamine - `KMH`: kilometre per hour - `KMK`: square kilometre - `KMQ`: kilogram per cubic metre - `KMT`: Kilometer - `KNI`: kilogram of nitrogen - `KNM`: kilonewton per square metre - `KNS`: kilogram named substance - `KNT`: knot - `KO`: milliequivalence caustic potash per gram of product - `KPA`: kilopascal - `KPH`: kilogram of potassium hydroxide (caustic potash) - `KPO`: kilogram of potassium oxide - `KPP`: kilogram of phosphorus pentoxide (phosphoric anhydride) - `KR`: kiloroentgen - `KSD`: kilogram of substance 90 % dry - `KSH`: kilogram of sodium hydroxide (caustic soda) - `KT`: kit - `KTN`: Kilotonne - `KUR`: kilogram of uranium - `KVA`: kilovolt - ampere - `KVR`: kilovar - `KVT`: kilovolt - `KW`: kilogram per millimetre - `KWH`: kilowatt hour - `KWN`: Kilowatt hour per normalized cubic metre - `KWO`: kilogram of tungsten trioxide - `KWS`: Kilowattstunde pro Normkubikmeter - `KWT`: kilowatt - `KX`: millilitre per kilogram - `L10`: quart (US liquid) per minute - `L11`: quart (US liquid) per second - `L12`: metre per second kelvin - `L13`: metre per second bar - `L14`: square metre hour degree Celsius per kilocalorie (international table) - `L15`: millipascal second per kelvin - `L16`: millipascal second per bar - `L17`: milligram per cubic metre kelvin - `L18`: milligram per cubic metre bar - `L19`: millilitre per litre - `L2`: litre per minute - `L20`: reciprocal cubic millimetre - `L21`: cubic millimetre per cubic metre - `L23`: mole per hour - `L24`: mole per kilogram kelvin - `L25`: mole per kilogram bar - `L26`: mole per litre kelvin - `L27`: mole per litre bar - `L28`: mole per cubic metre kelvin - `L29`: mole per cubic metre bar - `L30`: mole per minute - `L31`: milliroentgen aequivalent men - `L32`: nanogram per kilogram - `L33`: Unze (avoirdupois) pro Tag - `L34`: ounce (avoirdupois) per hour - `L35`: ounce (avoirdupois) per minute - `L36`: ounce (avoirdupois) per second - `L37`: ounce (avoirdupois) per gallon (UK) - `L38`: ounce (avoirdupois) per gallon (US) - `L39`: ounce (avoirdupois) per cubic inch - `L40`: ounce (avoirdupois)-force - `L41`: ounce (avoirdupois)-force inch - `L42`: picosiemens per metre - `L43`: peck (UK) - `L44`: peck (UK) per day - `L45`: peck (UK) per hour - `L46`: peck (UK) per minute - `L47`: peck (UK) per second - `L48`: peck (US dry) per day - `L49`: peck (US dry) per hour - `L50`: peck (US dry) per minute - `L51`: peck (US dry) per second - `L52`: psi per psi - `L53`: pint (UK) per day - `L54`: pint (UK) per hour - `L55`: pint (UK) per minute - `L56`: pint (UK) per second - `L57`: pint (US liquid) per day - `L58`: pint (US liquid) per hour - `L59`: pint (US liquid) per minute - `L60`: pint (US liquid) per second - `L63`: slug per day - `L64`: slug per foot second - `L65`: slug per cubic foot - `L66`: slug per hour - `L67`: slug per minute - `L68`: slug per second - `L69`: tonne per kelvin - `L70`: tonne per bar - `L71`: tonne per day - `L72`: tonne per day kelvin - `L73`: tonne per day bar - `L74`: tonne per hour kelvin - `L75`: tonne per hour bar - `L76`: tonne per cubic metre kelvin - `L77`: tonne per cubic metre bar - `L78`: tonne per minute - `L79`: tonne per minute kelvin - `L80`: tonne per minute bar - `L81`: tonne per second - `L82`: tonne per second kelvin - `L83`: tonne per second bar - `L84`: ton (UK shipping) - `L85`: ton long per day - `L86`: ton (US shipping) - `L87`: ton short per degree Fahrenheit - `L88`: ton short per day - `L89`: ton short per hour degree Fahrenheit - `L90`: ton short per hour psi - `L91`: ton short per psi - `L92`: ton (UK long) per cubic yard - `L93`: ton (US short) per cubic yard - `L94`: ton-force (US short) - `L95`: common year - `L96`: sidereal year - `L98`: yard per degree Fahrenheit - `L99`: yard per psi - `LA`: pound per cubic inch - `LAC`: lactose excess percentage - `LBR`: pound - `LBT`: troy pound (US) - `LD`: litre per day - `LEF`: leaf - `LF`: linear foot - `LH`: labour hour - `LK`: link - `LM`: linear metre - `LN`: length - `LO`: lot [unit of procurement] - `LP`: liquid pound - `LPA`: litre of pure alcohol - `LR`: layer - `LS`: lump sum - `LTN`: ton (UK) or long ton (US) - `LTR`: Liter - `LUB`: metric ton, lubricating oil - `LUM`: lumen - `LUX`: lux - `LY`: linear yard - `M1`: milligram per litre - `M10`: reciprocal cubic yard - `M11`: cubic yard per degree Fahrenheit - `M12`: cubic yard per day - `M13`: cubic yard per hour - `M14`: cubic yard per psi - `M15`: cubic yard per minute - `M16`: cubic yard per second - `M17`: kilohertz metre - `M18`: gigahertz metre - `M19`: Beaufort - `M20`: reciprocal megakelvin or megakelvin to the power minus one - `M21`: reciprocal kilovolt - ampere reciprocal hour - `M22`: millilitre per square centimetre minute - `M23`: newton per centimetre - `M24`: ohm kilometre - `M25`: percent per degree Celsius - `M26`: gigaohm per metre - `M27`: megahertz metre - `M29`: kilogram per kilogram - `M30`: reciprocal volt - ampere reciprocal second - `M31`: kilogram per kilometre - `M32`: pascal second per litre - `M33`: millimole per litre - `M34`: newton metre per square metre - `M35`: millivolt - ampere - `M36`: 30-Tage-Monat - `M37`: actual/360 - `M38`: kilometre per second squared - `M39`: centimetre per second squared - `M4`: monetary value - `M40`: yard per second squared - `M41`: millimetre per second squared - `M42`: mile (statute mile) per second squared - `M43`: mil - `M44`: revolution - `M45`: degree [unit of angle] per second squared - `M46`: revolution per minute - `M47`: circular mil - `M48`: square mile (based on U.S. survey foot) - `M49`: chain (based on U.S. survey foot) - `M5`: microcurie - `M50`: furlong - `M51`: foot (U.S. survey) - `M52`: mile (based on U.S. survey foot) - `M53`: metre per pascal - `M55`: metre per radiant - `M56`: shake - `M57`: mile per minute - `M58`: mile per second - `M59`: metre per second pascal - `M60`: metre per hour - `M61`: inch per year - `M62`: kilometre per second - `M63`: inch per minute - `M64`: yard per second - `M65`: yard per minute - `M66`: yard per hour - `M67`: acre-foot (based on U.S. survey foot) - `M68`: cord (128 ft3) - `M69`: cubic mile (UK statute) - `M7`: micro-inch - `M70`: ton, register - `M71`: cubic metre per pascal - `M72`: bel - `M73`: kilogram per cubic metre pascal - `M74`: kilogram per pascal - `M75`: kilopound-force - `M76`: poundal - `M77`: kilogram metre per second squared - `M78`: pond - `M79`: square foot per hour - `M80`: stokes per pascal - `M81`: square centimetre per second - `M82`: square metre per second pascal - `M83`: denier - `M84`: pound per yard - `M85`: ton, assay - `M86`: pfund - `M87`: kilogram per second pascal - `M88`: tonne per month - `M89`: tonne per year - `M9`: million Btu per 1000 cubic foot - `M90`: kilopound per hour - `M91`: pound per pound - `M92`: pound-force foot - `M93`: newton metre per radian - `M94`: kilogram metre - `M95`: poundal foot - `M96`: poundal inch - `M97`: dyne metre - `M98`: kilogram centimetre per second - `M99`: gram centimetre per second - `MAH`: megavolt ampere reactive hour - `MAL`: megalitre - `MAM`: megametre - `MAR`: megavar - `MAW`: megawatt - `MBE`: thousand standard brick equivalent - `MBF`: thousand board foot - `MBR`: millibar - `MC`: microgram - `MCU`: millicurie - `MD`: air dry metric ton - `MGM`: milligram - `MHZ`: megahertz - `MIK`: square mile (statute mile) - `MIL`: thousand - `MIN`: minute [unit of time] - `MIO`: million - `MIU`: million international unit - `MLD`: milliard - `MLT`: millilitre - `MMK`: square millimetre - `MMQ`: cubic millimetre - `MMT`: millimetre - `MND`: kilogram, dry weight - `MON`: Monat - `MPA`: megapascal - `MQH`: cubic metre per hour - `MQS`: cubic metre per second - `MSK`: metre per second squared - `MTK`: Quadratmeter - `MTQ`: Kubikmeter - `MTR`: Meter - `MTS`: metre per second - `MVA`: megavolt - ampere - `MWH`: megawatt hour (1000 kW.h) - `N1`: pen calorie - `N10`: pound foot per second - `N11`: pound inch per second - `N12`: Pferdestaerke - `N13`: centimetre of mercury (0 �C) - `N14`: centimetre of water (4 �C) - `N15`: foot of water (39.2 �F) - `N16`: inch of mercury (32 �F) - `N17`: inch of mercury (60 �F) - `N18`: inch of water (39.2 �F) - `N19`: inch of water (60 �F) - `N20`: kip per square inch - `N21`: poundal per square foot - `N22`: ounce (avoirdupois) per square inch - `N23`: conventional metre of water - `N24`: gram per square millimetre - `N25`: pound per square yard - `N26`: poundal per square inch - `N27`: foot to the fourth power - `N28`: cubic decimetre per kilogram - `N29`: cubic foot per pound - `N3`: print point - `N30`: cubic inch per pound - `N31`: kilonewton per metre - `N32`: poundal per inch - `N33`: pound-force per yard - `N34`: poundal second per square foot - `N35`: poise per pascal - `N36`: newton second per square metre - `N37`: kilogram per metre second - `N38`: kilogram per metre minute - `N39`: kilogram per metre day - `N40`: kilogram per metre hour - `N41`: gram per centimetre second - `N42`: poundal second per square inch - `N43`: pound per foot minute - `N44`: pound per foot day - `N45`: cubic metre per second pascal - `N46`: foot poundal - `N47`: inch poundal - `N48`: watt per square centimetre - `N49`: watt per square inch - `N50`: British thermal unit (international table) per square foot hour - `N51`: British thermal unit (thermochemical) per square foot hour - `N52`: British thermal unit (thermochemical) per square foot minute - `N53`: British thermal unit (international table) per square foot second - `N54`: British thermal unit (thermochemical) per square foot second - `N55`: British thermal unit (international table) per square inch second - `N56`: calorie (thermochemical) per square centimetre minute - `N57`: calorie (thermochemical) per square centimetre second - `N58`: British thermal unit (international table) per cubic foot - `N59`: British thermal unit (thermochemical) per cubic foot - `N60`: British thermal unit (international table) per degree Fahrenheit - `N61`: British thermal unit (thermochemical) per degree Fahrenheit - `N62`: British thermal unit (international table) per degree Rankine - `N63`: British thermal unit (thermochemical) per degree Rankine - `N64`: British thermal unit (thermochemical) per pound degree Rankine - `N65`: kilocalorie (international table) per gram kelvin - `N66`: British thermal unit (39 �F) - `N67`: British thermal unit (59 �F) - `N68`: British thermal unit (60 �F) - `N69`: calorie (20 �C) - `N70`: quad (1015 BtuIT) - `N71`: therm (EC) - `N72`: therm (U.S.) - `N73`: British thermal unit (thermochemical) per pound - `N74`: British thermal unit (international table) per hour square foot degree Fahrenheit - `N75`: British thermal unit (thermochemical) per hour square foot degree Fahrenheit - `N76`: British thermal unit (international table) per second square foot degree Fahrenheit - `N77`: British thermal unit (thermochemical) per second square foot degree Fahrenheit - `N78`: kilowatt per square metre kelvin - `N79`: kelvin per pascal - `N80`: watt per metre degree Celsius - `N81`: kilowatt per metre kelvin - `N82`: kilowatt per metre degree Celsius - `N83`: metre per degree Celcius metre - `N84`: degree Fahrenheit hour per British thermal unit (international table) - `N85`: degree Fahrenheit hour per British thermal unit (thermochemical) - `N86`: degree Fahrenheit second per British thermal unit (international table) - `N87`: degree Fahrenheit second per British thermal unit (thermochemical) - `N88`: degree Fahrenheit hour square foot per British thermal unit (international table) inch - `N89`: degree Fahrenheit hour square foot per British thermal unit (thermochemical) inch - `N90`: kilofarad - `N91`: reciprocal joule - `N92`: picosiemens - `N93`: ampere per pascal - `N94`: franklin - `N95`: ampere minute - `N96`: biot - `N97`: gilbert - `N98`: volt per pascal - `N99`: picovolt - `NA`: milligram per kilogram - `NAR`: number of articles - `NCL`: number of cells - `NEW`: newton - `NF`: message - `NIL`: nil - `NIU`: number of international units - `NL`: load - `NM3`: Normalised cubic metre - `NMI`: nautical mile - `NMP`: number of packs - `NPT`: number of parts - `NT`: net ton - `NU`: newton metre - `NX`: part per thousand - `OA`: panel - `ODE`: ozone depletion equivalent - `ODG`: ODS Grams - `ODK`: ODS Kilograms - `ODM`: ODS Milligrams - `OHM`: ohm - `ON`: ounce per square yard - `ONZ`: ounce (avoirdupois) - `OPM`: oscillations per minute - `OT`: overtime hour - `OZA`: fluid ounce (US) - `OZI`: fluid ounce (UK) - `P1`: percent - `P10`: coulomb per metre - `P11`: kiloweber - `P12`: gamma - `P13`: kilotesla - `P14`: joule per second - `P15`: joule per minute - `P16`: joule per hour - `P17`: joule per day - `P18`: kilojoule per second - `P19`: kilojoule per minute - `P2`: pound per foot - `P20`: kilojoule per hour - `P21`: kilojoule per day - `P22`: nanoohm - `P23`: ohm circular-mil per foot - `P24`: kilohenry - `P25`: lumen per square foot - `P26`: phot - `P27`: footcandle - `P28`: candela per square inch - `P29`: footlambert - `P30`: lambert - `P31`: stilb - `P32`: candela per square foot - `P33`: kilocandela - `P34`: millicandela - `P35`: Hefner-Kerze - `P36`: international candle - `P37`: British thermal unit (international table) per square foot - `P38`: British thermal unit (thermochemical) per square foot - `P39`: calorie (thermochemical) per square centimetre - `P40`: langley - `P41`: decade (logarithmic) - `P42`: pascal squared second - `P43`: bel per metre - `P44`: pound mole - `P45`: pound mole per second - `P46`: pound mole per minute - `P47`: kilomole per kilogram - `P48`: pound mole per pound - `P49`: newton square metre per ampere - `P5`: five pack - `P50`: weber metre - `P51`: mol per kilogram pascal - `P52`: mol per cubic metre pascal - `P53`: unit pole - `P54`: milligray per second - `P55`: microgray per second - `P56`: nanogray per second - `P57`: gray per minute - `P58`: milligray per minute - `P59`: microgray per minute - `P60`: nanogray per minute - `P61`: gray per hour - `P62`: milligray per hour - `P63`: microgray per hour - `P64`: nanogray per hour - `P65`: sievert per second - `P66`: millisievert per second - `P67`: microsievert per second - `P68`: nanosievert per second - `P69`: rem per second - `P70`: sievert per hour - `P71`: millisievert per hour - `P72`: microsievert per hour - `P73`: nanosievert per hour - `P74`: sievert per minute - `P75`: millisievert per minute - `P76`: microsievert per minute - `P77`: nanosievert per minute - `P78`: reciprocal square inch - `P79`: pascal square metre per kilogram - `P80`: millipascal per metre - `P81`: kilopascal per metre - `P82`: hectopascal per metre - `P83`: standard atmosphere per metre - `P84`: technical atmosphere per metre - `P85`: torr per metre - `P86`: psi per inch - `P87`: cubic metre per second square metre - `P88`: rhe - `P89`: pound-force foot per inch - `P90`: pound-force inch per inch - `P91`: perm (0 �C) - `P92`: perm (23 �C) - `P93`: byte per second - `P94`: kilobyte per second - `P95`: megabyte per second - `P96`: reciprocal volt - `P97`: reciprocal radian - `P98`: pascal to the power sum of stoichiometric numbers - `P99`: mole per cubiv metre to the power sum of stoichiometric numbers - `PAL`: pascal - `PD`: pad - `PFL`: proof litre - `PGL`: proof gallon - `PI`: pitch - `PLA`: degree Plato - `PO`: pound per inch of length - `PQ`: page per inch - `PR`: Paar - `PS`: pound-force per square inch - `PTD`: dry pint (US) - `PTI`: pint (UK) - `PTL`: liquid pint (US) - `PTN`: portion - `Q10`: joule per tesla - `Q11`: erlang - `Q12`: octet - `Q13`: octet per second - `Q14`: shannon - `Q15`: hartley - `Q16`: natural unit of information - `Q17`: shannon per second - `Q18`: hartley per second - `Q19`: natural unit of information per second - `Q20`: second per kilogramm - `Q21`: watt square metre - `Q22`: second per radian cubic metre - `Q23`: weber to the power minus one - `Q24`: reciprocal inch - `Q25`: dioptre - `Q26`: one per one - `Q27`: newton metre per metre - `Q28`: kilogram per square metre pascal second - `Q29`: microgram per hectogram - `Q30`: pH (potential of Hydrogen) - `Q31`: kilojoule per gram - `Q32`: femtolitre - `Q33`: picolitre - `Q34`: nanolitre - `Q35`: megawatts per minute - `Q36`: square metre per cubic metre - `Q37`: Standard cubic metre per day - `Q38`: Standard cubic metre per hour - `Q39`: Normalized cubic metre per day - `Q40`: Normalized cubic metre per hour - `Q41`: Joule per normalised cubic metre - `Q42`: Joule per standard cubic metre - `Q3`: meal - `QA`: page - facsimile - `QAN`: quarter (of a year) - `QB`: page - hardcopy - `QR`: quire - `QTD`: dry quart (US) - `QTI`: quart (UK) - `QTL`: liquid quart (US) - `QTR`: quarter (UK) - `R1`: pica - `R9`: thousand cubic metre - `RH`: running or operating hour - `RM`: ream - `ROM`: room - `RP`: pound per ream - `RPM`: revolutions per minute - `RPS`: revolutions per second - `RT`: revenue ton mile - `S3`: square foot per second - `S4`: square metre per second - `SAN`: half year (6 months) - `SCO`: score - `SCR`: scruple - `SEC`: second [unit of time] - `SET`: set - `SG`: Segment - `SIE`: Siemens - `SM3`: Standard Kubikmeter - `SMI`: Meile (britische Meile) - `SQ`: Platz - `SQR`: quadratisch, �berdachung - `SR`: Streifen - `STC`: Stick - `STI`: Stein (UK) - `STK`: Stick, Zigarette - `STL`: Standardliter - `STN`: Tonne (US) oder kurze Tonne (UK/US) - `STW`: Stroh - `SW`: Strang - `SX`: Sendung - `SYR`: Spritze - `T0`: Telekommunikationsleitung in Betrieb - `T3`: Tausend St�ck - `TAH`: Kiloampere-Stunde (Tausend-Ampere-Stunde) - `TAN`: Gesamts�urezahl - `TI`: tausend Quadratzoll - `TIC`: metrische Tonne, einschlie�lich Container - `TIP`: metrische Tonne, einschlie�lich Innenverpackung - `TKM`: Tonnenkilometer - `TMS`: Kilogramm importiertes Fleisch, abz�glich Innereien - `TNE`: Tonne (metrische Tonne) - `TP`: Zehnerpack - `TPI`: Z�hne pro Zoll - `TPR`: zehn Paar - `TQD`: Tausend Kubikmeter pro Tag - `TRL`: Trillion (EUR) - `TST`: Zehnergruppe - `TTS`: zehntausend St�cke - `U1`: Behandlung - `U2`: Tablette - `UB`: Telekommunikationsleitung in Betrieb durchschnittlich - `UC`: Telekommunikationsanschluss - `VA`: Volt - Ampere pro Kilogram - `VLT`: Volt - `VP`: Prozent Volumen - `W2`: Kilogrammgesetz - `WA`: Watt pro Kilogramm - `WB`: nasses Pfund - `WCD`: Kabel - `WE`: Nasstonne - `WEB`: weber - `WEE`: Woche - `WG`: Weingallone - `WHR`: Arbeitsmonat - `WM`: Arbeitsmonat - `WSD`: Standard - `WTT`: Watt - `X1`: Gunter's Kette - `YDK`: Platz Yard - `YDQ`: kubisch Yard - `YRD`: Yard - `Z11`: H�ngebeh�lter - `ZP`: Seite - `ZZ`: gemeinsam definiert
        /// </summary>
        /// <value>Unit (BT-130)  - `11`: outfit - `13`: ration - `14`: shot - `15`: stick, military - `20`: twenty foot container - `21`: forty foot container - `22`: decilitre per gram - `23`: gram per cubic centimetre - `24`: theoretical pound - `25`: gram per square centimetre - `27`: theoretical ton - `28`: kilogram per square metre - `33`: kilopascal square metre per gram - `34`: kilopascal per millimetre - `35`: millilitre per square centimetre second - `37`: ounce per square foot - `38`: ounce per square foot per 0,01inch - `40`: millilitre per second - `41`: millilitre per minute - `56`: sitas - `57`: mesh - `58`: net kilogram - `59`: part per million - `60`: percent weight - `61`: part per billion (US) - `74`: millipascal - `77`: milli-inch - `80`: pound per square inch absolute - `81`: henry - `85`: foot pound-force - `87`: pound per cubic foot - `89`: poise - `91`: stokes - `1I`: Festpreis - `2A`: radian per second - `2B`: radian per second squared - `2C`: roentgen - `2G`: volt AC - `2H`: volt DC - `2I`: British thermal unit (international table) per hour - `2J`: cubic centimetre per second - `2K`: cubic foot per hour - `2L`: cubic foot per minute - `2M`: centimetre per second - `2N`: decibel - `2P`: kilobyte - `2Q`: kilobecquerel - `2R`: kilocurie - `2U`: megagram - `2X`: metre per minute - `2Y`: milliroentgen - `2Z`: millivolt - `3B`: megajoule - `3C`: manmonth - `4C`: centistokes - `4G`: microlitre - `4H`: micrometre (micron) - `4K`: milliampere - `4L`: megabyte - `4M`: milligram per hour - `4N`: megabecquerel - `4O`: microfarad - `4P`: newton per metre - `4Q`: ounce inch - `4R`: ounce foot - `4T`: picofarad - `4U`: pound per hour - `4W`: ton (US) per hour - `4X`: kilolitre per hour - `5A`: barrel (US) per minute - `5B`: batch - `5E`: MMSCF/day - `5J`: hydraulic horse power - `A10`: ampere square metre per joule second - `A11`: angstrom - `A12`: astronomical unit - `A13`: attojoule - `A14`: barn - `A15`: barn per electronvolt - `A16`: barn per steradian electronvolt - `A17`: barn per steradian - `A18`: becquerel per kilogram - `A19`: becquerel per cubic metre - `A2`: ampere per centimetre - `A20`: British thermal unit (international table) per second square foot degree Rankine - `A21`: British thermal unit (international table) per pound degree Rankine - `A22`: British thermal unit (international table) per second foot degree Rankine - `A23`: British thermal unit (international table) per hour square foot degree Rankine - `A24`: candela per square metre - `A26`: coulomb metre - `A27`: coulomb metre squared per volt - `A28`: coulomb per cubic centimetre - `A29`: coulomb per cubic metre - `A3`: ampere per millimetre - `A30`: coulomb per cubic millimetre - `A31`: coulomb per kilogram second - `A32`: coulomb per mole - `A33`: coulomb per square centimetre - `A34`: coulomb per square metre - `A35`: coulomb per square millimetre - `A36`: cubic centimetre per mole - `A37`: cubic decimetre per mole - `A38`: cubic metre per coulomb - `A39`: cubic metre per kilogram - `A4`: ampere per square centimetre - `A40`: cubic metre per mole - `A41`: ampere per square metre - `A42`: curie per kilogram - `A43`: deadweight tonnage - `A44`: decalitre - `A45`: decametre - `A47`: decitex - `A48`: degree Rankine - `A49`: denier - `A5`: ampere square metre - `A53`: electronvolt - `A54`: electronvolt per metre - `A55`: electronvolt square metre - `A56`: electronvolt square metre per kilogram - `A59`: 8-part cloud cover - `A6`: ampere per square metre kelvin squared - `A68`: exajoule - `A69`: farad per metre - `A7`: ampere per square millimetre - `A70`: femtojoule - `A71`: femtometre - `A73`: foot per second squared - `A74`: foot pound-force per second - `A75`: freight ton - `A76`: gal - `A8`: ampere second - `A84`: gigacoulomb per cubic metre - `A85`: gigaelectronvolt - `A86`: gigahertz - `A87`: gigaohm - `A88`: gigaohm metre - `A89`: gigapascal - `A9`: rate - `A90`: gigawatt - `A91`: gon - `A93`: gram per cubic metre - `A94`: gram per mole - `A95`: gray - `A96`: gray per second - `A97`: hectopascal - `A98`: henry per metre - `A99`: bit - `AA`: ball - `AB`: bulk pack - `ACR`: acre - `ACT`: activity - `AD`: byte - `AE`: ampere per metre - `AH`: additional minute - `AI`: average minute per call - `AK`: fathom - `AL`: access line - `AMH`: ampere hour - `AMP`: ampere - `ANN`: year - `APZ`: troy ounce or apothecary ounce - `AQ`: anti-hemophilic factor (AHF) unit - `AS`: assortment - `ASM`: alcoholic strength by mass - `ASU`: alcoholic strength by volume - `ATM`: standard atmosphere - `AWG`: american wire gauge - `AY`: assembly - `AZ`: British thermal unit (international table) per pound - `B1`: barrel (US) per day - `B10`: bit per second - `B11`: joule per kilogram kelvin - `B12`: joule per metre - `B13`: joule per square metre - `B14`: joule per metre to the fourth power - `B15`: joule per mole - `B16`: joule per mole kelvin - `B17`: credit - `B18`: joule second - `B19`: digit - `B20`: joule square metre per kilogram - `B21`: kelvin per watt - `B22`: kiloampere - `B23`: kiloampere per square metre - `B24`: kiloampere per metre - `B25`: kilobecquerel per kilogram - `B26`: kilocoulomb - `B27`: kilocoulomb per cubic metre - `B28`: kilocoulomb per square metre - `B29`: kiloelectronvolt - `B3`: batting pound - `B30`: gibibit - `B31`: kilogram metre per second - `B32`: kilogram metre squared - `B33`: kilogram metre squared per second - `B34`: kilogram per cubic decimetre - `B35`: kilogram per litre - `B4`: barrel, imperial - `B41`: kilojoule per kelvin - `B42`: kilojoule per kilogram - `B43`: kilojoule per kilogram kelvin - `B44`: kilojoule per mole - `B45`: kilomole - `B46`: kilomole per cubic metre - `B47`: kilonewton - `B48`: kilonewton metre - `B49`: kiloohm - `B50`: kiloohm metre - `B52`: kilosecond - `B53`: kilosiemens - `B54`: kilosiemens per metre - `B55`: kilovolt per metre - `B56`: kiloweber per metre - `B57`: light year - `B58`: litre per mole - `B59`: lumen hour - `B60`: lumen per square metre - `B61`: lumen per watt - `B62`: lumen second - `B63`: lux hour - `B64`: lux second - `B66`: megaampere per square metre - `B67`: megabecquerel per kilogram - `B68`: gigabit - `B69`: megacoulomb per cubic metre - `B7`: cycle - `B70`: megacoulomb per square metre - `B71`: megaelectronvolt - `B72`: megagram per cubic metre - `B73`: meganewton - `B74`: meganewton metre - `B75`: megaohm - `B76`: megaohm metre - `B77`: megasiemens per metre - `B78`: megavolt - `B79`: megavolt per metre - `B8`: joule per cubic metre - `B80`: gigabit per second - `B81`: reciprocal metre squared reciprocal second - `B82`: inch per linear foot - `B83`: metre to the fourth power - `B84`: microampere - `B85`: microbar - `B86`: microcoulomb - `B87`: microcoulomb per cubic metre - `B88`: microcoulomb per square metre - `B89`: microfarad per metre - `B90`: microhenry - `B91`: microhenry per metre - `B92`: micronewton - `B93`: micronewton metre - `B94`: microohm - `B95`: microohm metre - `B96`: micropascal - `B97`: microradian - `B98`: microsecond - `B99`: microsiemens - `BAR`: bar [unit of pressure] - `BB`: base box - `BFT`: board foot - `BHP`: brake horse power - `BIL`: billion (EUR) - `BLD`: dry barrel (US) - `BLL`: barrel (US) - `BP`: hundred board foot - `BPM`: beats per minute - `BQL`: becquerel - `BTU`: British thermal unit (international table) - `BUA`: bushel (US) - `BUI`: bushel (UK) - `C0`: call - `C10`: millifarad - `C11`: milligal - `C12`: milligram per metre - `C13`: milligray - `C14`: millihenry - `C15`: millijoule - `C16`: millimetre per second - `C17`: millimetre squared per second - `C18`: millimole - `C19`: mole per kilogram - `C20`: millinewton - `C21`: kibibit - `C22`: millinewton per metre - `C23`: milliohm metre - `C24`: millipascal second - `C25`: milliradian - `C26`: millisecond - `C27`: millisiemens - `C28`: millisievert - `C29`: millitesla - `C3`: microvolt per metre - `C30`: millivolt per metre - `C31`: milliwatt - `C32`: milliwatt per square metre - `C33`: milliweber - `C34`: mole - `C35`: mole per cubic decimetre - `C36`: mole per cubic metre - `C37`: kilobit - `C38`: mole per litre - `C39`: nanoampere - `C40`: nanocoulomb - `C41`: nanofarad - `C42`: nanofarad per metre - `C43`: nanohenry - `C44`: nanohenry per metre - `C45`: nanometre - `C46`: nanoohm metre - `C47`: nanosecond - `C48`: nanotesla - `C49`: nanowatt - `C50`: neper - `C51`: neper per second - `C52`: picometre - `C53`: newton metre second - `C54`: newton metre squared per kilogram squared - `C55`: newton per square metre - `C56`: newton per square millimetre - `C57`: newton second - `C58`: newton second per metre - `C59`: octave - `C60`: ohm centimetre - `C61`: ohm metre - `C62`: one - `C63`: parsec - `C64`: pascal per kelvin - `C65`: pascal second - `C66`: pascal second per cubic metre - `C67`: pascal second per metre - `C68`: petajoule - `C69`: phon - `C7`: centipoise - `C70`: picoampere - `C71`: picocoulomb - `C72`: picofarad per metre - `C73`: picohenry - `C74`: kilobit per second - `C75`: picowatt - `C76`: picowatt per square metre - `C78`: pound-force - `C79`: kilovolt ampere hour - `C8`: millicoulomb per kilogram - `C80`: rad - `C81`: radian - `C82`: radian square metre per mole - `C83`: radian square metre per kilogram - `C84`: radian per metre - `C85`: reciprocal angstrom - `C86`: reciprocal cubic metre - `C87`: reciprocal cubic metre per second - `C88`: reciprocal electron volt per cubic metre - `C89`: reciprocal henry - `C9`: coil group - `C90`: reciprocal joule per cubic metre - `C91`: reciprocal kelvin or kelvin to the power minus one - `C92`: reciprocal metre - `C93`: reciprocal square metre - `C94`: reciprocal minute - `C95`: reciprocal mole - `C96`: reciprocal pascal or pascal to the power minus one - `C97`: reciprocal second - `C99`: reciprocal second per metre squared - `CCT`: carrying capacity in metric ton - `CDL`: candela - `CEL`: degree Celsius - `CEN`: hundred - `CG`: card - `CGM`: centigram - `CKG`: coulomb per kilogram - `CLF`: hundred leave - `CLT`: centilitre - `CMK`: square centimetre - `CMQ`: Kubikzentimeter - `CMT`: Zentimeter - `CNP`: hundred pack - `CNT`: cental (UK) - `COU`: coulomb - `CTG`: content gram - `CTM`: metric carat - `CTN`: content ton (metric) - `CUR`: curie - `CWA`: hundred pound (cwt) / hundred weight (US) - `CWI`: hundred weight (UK) - `D03`: kilowatt hour per hour - `D04`: lot [unit of weight] - `D1`: reciprocal second per steradian - `D10`: siemens per metre - `D11`: mebibit - `D12`: siemens square metre per mole - `D13`: sievert - `D15`: sone - `D16`: square centimetre per erg - `D17`: square centimetre per steradian erg - `D18`: metre kelvin - `D19`: square metre kelvin per watt - `D2`: reciprocal second per steradian metre squared - `D20`: square metre per joule - `D21`: square metre per kilogram - `D22`: square metre per mole - `D23`: pen gram (protein) - `D24`: square metre per steradian - `D25`: square metre per steradian joule - `D26`: square metre per volt second - `D27`: steradian - `D29`: terahertz - `D30`: terajoule - `D31`: terawatt - `D32`: terawatt hour - `D33`: tesla - `D34`: tex - `D36`: megabit - `D41`: tonne per cubic metre - `D42`: tropical year - `D43`: unified atomic mass unit - `D44`: var - `D45`: volt squared per kelvin squared - `D46`: volt - ampere - `D47`: volt per centimetre - `D48`: volt per kelvin - `D49`: millivolt per kelvin - `D5`: kilogram per square centimetre - `D50`: volt per metre - `D51`: volt per millimetre - `D52`: watt per kelvin - `D53`: watt per metre kelvin - `D54`: watt per square metre - `D55`: watt per square metre kelvin - `D56`: watt per square metre kelvin to the fourth power - `D57`: watt per steradian - `D58`: watt per steradian square metre - `D59`: weber per metre - `D6`: roentgen per second - `D60`: weber per millimetre - `D61`: minute [unit of angle] - `D62`: second [unit of angle] - `D63`: book - `D65`: round - `D68`: number of words - `D69`: inch to the fourth power - `D73`: joule square metre - `D74`: kilogram per mole - `D77`: megacoulomb - `D78`: megajoule per second - `D80`: microwatt - `D81`: microtesla - `D82`: microvolt - `D83`: millinewton metre - `D85`: microwatt per square metre - `D86`: millicoulomb - `D87`: millimole per kilogram - `D88`: millicoulomb per cubic metre - `D89`: millicoulomb per square metre - `D91`: rem - `D93`: second per cubic metre - `D94`: second per cubic metre radian - `D95`: joule per gram - `DAA`: decare - `DAD`: ten day - `DAY`: Tag - `DB`: dry pound - `DD`: degree [unit of angle] - `DEC`: decade - `DG`: decigram - `DJ`: decagram - `DLT`: decilitre - `DMA`: cubic decametre - `DMK`: square decimetre - `DMO`: standard kilolitre - `DMQ`: cubic decimetre - `DMT`: decimetre - `DN`: decinewton metre - `DPC`: Dutzend St�ck - `DPR`: Dutzend Paar - `DPT`: displacement tonnage - `DRA`: dram (US) - `DRI`: dram (UK) - `DRL`: dozen roll - `DT`: dry ton - `DTN`: decitonne - `DWT`: pennyweight - `DZN`: dozen - `DZP`: dozen pack - `E01`: Newton pro Quadratzentimeter - `E07`: megawatt hour per hour - `E08`: megawatt per hertz - `E09`: milliampere hour - `E10`: degree day - `E12`: mille - `E14`: kilocalorie (international table) - `E15`: kilocalorie (thermochemical) per hour - `E16`: million Btu(IT) per hour - `E17`: cubic foot per second - `E18`: tonne per hour - `E19`: ping - `E20`: megabit per second - `E21`: shares - `E22`: TEU - `E23`: tyre - `E25`: active unit - `E27`: dose - `E28`: air dry ton - `E30`: strand - `E31`: Quadratmeter pro Liter - `E32`: litre per hour - `E33`: foot per thousand - `E34`: gigabyte - `E35`: terabyte - `E36`: petabyte - `E37`: pixel - `E38`: megapixel - `E39`: dots per inch - `E4`: gross kilogram - `E40`: part per hundred thousand - `E41`: kilogram-force per square millimetre - `E42`: kilogram-force per square centimetre - `E43`: joule per square centimetre - `E44`: kilogram-force metre per square centimetre - `E45`: milliohm - `E46`: kilowatt hour per cubic metre - `E47`: kilowatt hour per kelvin - `E48`: service unit - `E49`: working day - `E50`: accounting unit - `E51`: job - `E52`: run foot - `E53`: test - `E54`: trip - `E55`: use - `E56`: well - `E57`: zone - `E58`: exabit per second - `E59`: exbibyte - `E60`: pebibyte - `E61`: tebibyte - `E62`: gibibyte - `E63`: mebibyte - `E64`: kibibyte - `E65`: exbibit per metre - `E66`: exbibit per square metre - `E67`: exbibit per cubic metre - `E68`: gigabyte per second - `E69`: gibibit per metre - `E70`: gibibit per square metre - `E71`: gibibit per cubic metre - `E72`: kibibit per metre - `E73`: kibibit per square metre - `E74`: kibibit per cubic metre - `E75`: mebibit per metre - `E76`: mebibit per square metre - `E77`: mebibit per cubic metre - `E78`: petabit - `E79`: petabit per second - `E80`: pebibit per metre - `E81`: pebibit per square metre - `E82`: pebibit per cubic metre - `E83`: terabit - `E84`: terabit per second - `E85`: tebibit per metre - `E86`: tebibit per cubic metre - `E87`: tebibit per square metre - `E88`: bit per metre - `E89`: bit per square metre - `E90`: reciprocal centimetre - `E91`: reciprocal day - `E92`: cubic decimetre per hour - `E93`: kilogram per hour - `E94`: kilomole per second - `E95`: mole per second - `E96`: degree per second - `E97`: millimetre per degree Celcius metre - `E98`: degree Celsius per kelvin - `E99`: hectopascal per bar - `EA`: each - `EB`: electronic mail box - `EQ`: equivalent gallon - `F01`: bit per cubic metre - `F02`: kelvin per kelvin - `F03`: kilopascal per bar - `F04`: millibar per bar - `F05`: megapascal per bar - `F06`: poise per bar - `F07`: pascal per bar - `F08`: milliampere per inch - `F10`: kelvin per hour - `F11`: kelvin per minute - `F12`: kelvin per second - `F13`: slug - `F14`: gram per kelvin - `F15`: kilogram per kelvin - `F16`: milligram per kelvin - `F17`: pound-force per foot - `F18`: kilogram square centimetre - `F19`: kilogram square millimetre - `F20`: pound inch squared - `F21`: pound-force inch - `F22`: pound-force foot per ampere - `F23`: gram per cubic decimetre - `F24`: kilogram per kilomol - `F25`: gram per hertz - `F26`: gram per day - `F27`: gram per hour - `F28`: gram per minute - `F29`: gram per second - `F30`: kilogram per day - `F31`: kilogram per minute - `F32`: milligram per day - `F33`: milligram per minute - `F34`: milligram per second - `F35`: gram per day kelvin - `F36`: gram per hour kelvin - `F37`: gram per minute kelvin - `F38`: gram per second kelvin - `F39`: kilogram per day kelvin - `F40`: kilogram per hour kelvin - `F41`: kilogram per minute kelvin - `F42`: kilogram per second kelvin - `F43`: milligram per day kelvin - `F44`: milligram per hour kelvin - `F45`: milligram per minute kelvin - `F46`: milligram per second kelvin - `F47`: newton per millimetre - `F48`: pound-force per inch - `F49`: rod [unit of distance] - `F50`: micrometre per kelvin - `F51`: centimetre per kelvin - `F52`: metre per kelvin - `F53`: millimetre per kelvin - `F54`: milliohm per metre - `F55`: ohm per mile (statute mile) - `F56`: Ohm pro Kilometer - `F57`: milliampere per pound-force per square inch - `F58`: reciprocal bar - `F59`: milliampere per bar - `F60`: degree Celsius per bar - `F61`: kelvin per bar - `F62`: gram per day bar - `F63`: gram per hour bar - `F64`: gram per minute bar - `F65`: gram per second bar - `F66`: kilogram per day bar - `F67`: kilogram per hour bar - `F68`: kilogram per minute bar - `F69`: kilogram per second bar - `F70`: milligram per day bar - `F71`: milligram per hour bar - `F72`: milligram per minute bar - `F73`: milligram per second bar - `F74`: gram per bar - `F75`: milligram per bar - `F76`: milliampere per millimetre - `F77`: pascal second per kelvin - `F78`: inch of water - `F79`: inch of mercury - `F80`: water horse power - `F81`: bar per kelvin - `F82`: hectopascal per kelvin - `F83`: kilopascal per kelvin - `F84`: millibar per kelvin - `F85`: megapascal per kelvin - `F86`: poise per kelvin - `F87`: volt per litre minute - `F88`: newton centimetre - `F89`: newton metre per degree - `F90`: newton metre per ampere - `F91`: bar litre per second - `F92`: bar cubic metre per second - `F93`: hectopascal litre per second - `F94`: hectopascal cubic metre per second - `F95`: millibar litre per second - `F96`: millibar cubic metre per second - `F97`: megapascal litre per second - `F98`: megapascal cubic metre per second - `F99`: pascal litre per second - `FAH`: degree Fahrenheit - `FAR`: farad - `FBM`: fibre metre - `FC`: thousand cubic foot - `FF`: hundred cubic metre - `FH`: micromole - `FIT`: failures in time - `FL`: flake ton - `FOT`: foot - `FP`: pound per square foot - `FR`: foot per minute - `FS`: foot per second - `FTK`: square foot - `FTQ`: cubic foot - `G01`: pascal cubic metre per second - `G04`: centimetre per bar - `G05`: metre per bar - `G06`: millimetre per bar - `G08`: square inch per second - `G09`: Quadratmeter pro Sekunde Kelvin - `G10`: stokes per kelvin - `G11`: gram per cubic centimetre bar - `G12`: gram per cubic decimetre bar - `G13`: gram per litre bar - `G14`: gram per cubic metre bar - `G15`: gram per millilitre bar - `G16`: kilogram per cubic centimetre bar - `G17`: kilogram per litre bar - `G18`: kilogram per cubic metre bar - `G19`: newton metre per kilogram - `G2`: US gallon per minute - `G20`: pound-force foot per pound - `G21`: cup [unit of volume] - `G23`: peck - `G24`: tablespoon (US) - `G25`: teaspoon (US) - `G26`: stere - `G27`: cubic centimetre per kelvin - `G28`: litre per kelvin - `G29`: cubic metre per kelvin - `G3`: Imperial gallon per minute - `G30`: millilitre per kelvin - `G31`: kilogram per cubic centimetre - `G32`: ounce (avoirdupois) per cubic yard - `G33`: gram per cubic centimetre kelvin - `G34`: gram per cubic decimetre kelvin - `G35`: gram per litre kelvin - `G36`: gram per cubic metre kelvin - `G37`: gram per millilitre kelvin - `G38`: kilogram per cubic centimetre kelvin - `G39`: kilogram per litre kelvin - `G40`: kilogram per cubic metre kelvin - `G41`: square metre per second bar - `G42`: microsiemens per centimetre - `G43`: microsiemens per metre - `G44`: nanosiemens per centimetre - `G45`: nanosiemens per metre - `G46`: stokes per bar - `G47`: cubic centimetre per day - `G48`: cubic centimetre per hour - `G49`: cubic centimetre per minute - `G50`: gallon (US) per hour - `G51`: litre per second - `G52`: cubic metre per day - `G53`: cubic metre per minute - `G54`: millilitre per day - `G55`: millilitre per hour - `G56`: cubic inch per hour - `G57`: cubic inch per minute - `G58`: cubic inch per second - `G59`: milliampere per litre minute - `G60`: volt per bar - `G61`: cubic centimetre per day kelvin - `G62`: cubic centimetre per hour kelvin - `G63`: cubic centimetre per minute kelvin - `G64`: cubic centimetre per second kelvin - `G65`: litre per day kelvin - `G66`: litre per hour kelvin - `G67`: litre per minute kelvin - `G68`: litre per second kelvin - `G69`: cubic metre per day kelvin - `G70`: cubic metre per hour kelvin - `G71`: cubic metre per minute kelvin - `G72`: cubic metre per second kelvin - `G73`: millilitre per day kelvin - `G74`: millilitre per hour kelvin - `G75`: Milliliter pro Minute Kelvin - `G76`: millilitre per second kelvin - `G77`: millimetre to the fourth power - `G78`: cubic centimetre per day bar - `G79`: cubic centimetre per hour bar - `G80`: cubic centimetre per minute bar - `G81`: cubic centimetre per second bar - `G82`: litre per day bar - `G83`: litre per hour bar - `G84`: litre per minute bar - `G85`: litre per second bar - `G86`: cubic metre per day bar - `G87`: cubic metre per hour bar - `G88`: Kubikmeter pro Minute bar - `G89`: cubic metre per second bar - `G90`: Milliliter pro Tag bar - `G91`: millilitre per hour bar - `G92`: millilitre per minute bar - `G93`: millilitre per second bar - `G94`: cubic centimetre per bar - `G95`: litre per bar - `G96`: cubic metre per bar - `G97`: millilitre per bar - `G98`: microhenry per kiloohm - `G99`: microhenry per ohm - `GB`: gallon (US) per day - `GBQ`: gigabecquerel - `GDW`: Gramm, Trockengewicht - `GE`: pound per gallon (US) - `GF`: gram per metre (gram per 100 centimetres) - `GFI`: gram of fissile isotope - `GGR`: great gross - `GIA`: gill (US) - `GIC`: gram, including container - `GII`: gill (UK) - `GIP`: gram, including inner packaging - `GJ`: gram per millilitre - `GL`: gram per litre - `GLD`: dry gallon (US) - `GLI`: gallon (UK) - `GLL`: gallon (US) - `GM`: gram per square metre - `GO`: milligram per square metre - `GP`: milligram per cubic metre - `GQ`: microgram per cubic metre - `GRM`: Gramm - `GRN`: grain - `GRO`: gross - `GV`: gigajoule - `GWH`: gigawatt hour - `H03`: henry per kiloohm - `H04`: henry per ohm - `H05`: millihenry per kiloohm - `H06`: millihenry per ohm - `H07`: pascal second per bar - `H08`: microbecquerel - `H09`: reciprocal year - `H10`: reciprocal hour - `H11`: reciprocal month - `H12`: degree Celsius per hour - `H13`: degree Celsius per minute - `H14`: degree Celsius per second - `H15`: square centimetre per gram - `H16`: square decametre - `H18`: square hectometre - `H19`: cubic hectometre - `H20`: cubic kilometre - `H21`: blank - `H22`: volt square inch per pound-force - `H23`: volt per inch - `H24`: volt per microsecond - `H25`: percent per kelvin - `H26`: ohm per metre - `H27`: degree per metre - `H28`: microfarad per kilometre - `H29`: microgram per litre - `H30`: square micrometre (square micron) - `H31`: Ampere pro Kilogramm - `H32`: ampere squared second - `H33`: farad per kilometre - `H34`: hertz metre - `H35`: kelvin metre per watt - `H36`: megaohm per kilometre - `H37`: megaohm per metre - `H38`: megaampere - `H39`: megahertz kilometre - `H40`: newton per ampere - `H41`: newton metre watt to the power minus 0,5 - `H42`: pascal per metre - `H43`: siemens per centimetre - `H44`: teraohm - `H45`: volt second per metre - `H46`: volt per second - `H47`: watt per cubic metre - `H48`: attofarad - `H49`: centimetre per hour - `H50`: reciprocal cubic centimetre - `H51`: decibel per kilometre - `H52`: decibel per metre - `H53`: kilogram per bar - `H54`: kilogram per cubic decimetre kelvin - `H55`: kilogram per cubic decimetre bar - `H56`: kilogram per square metre second - `H57`: inch per two pi radiant - `H58`: metre per volt second - `H59`: square metre per newton - `H60`: cubic metre per cubic metre - `H61`: millisiemens per centimetre - `H62`: millivolt per minute - `H63`: milligram per square centimetre - `H64`: milligram per gram - `H65`: millilitre per cubic metre - `H66`: millimetre per year - `H67`: millimetre per hour - `H68`: millimole per gram - `H69`: picopascal per kilometre - `H70`: picosecond - `H71`: percent per month - `H72`: percent per hectobar - `H73`: percent per decakelvin - `H74`: watt per metre - `H75`: decapascal - `H76`: gram per millimetre - `H77`: module width - `H79`: French gauge - `H80`: rack unit - `H81`: millimetre per minute - `H82`: big point - `H83`: litre per kilogram - `H84`: gram millimetre - `H85`: wechselseitige Woche - `H87`: St�ck - `H88`: megaohm kilometre - `H89`: percent per ohm - `H90`: percent per degree - `H91`: percent per ten thousand - `H92`: percent per one hundred thousand - `H93`: percent per hundred - `H94`: percent per thousand - `H95`: percent per volt - `H96`: percent per bar - `H98`: percent per inch - `H99`: percent per metre - `HA`: hank - `HBA`: hectobar - `HBX`: hundred boxes - `HC`: hundred count - `HDW`: hundred kilogram, dry weight - `HEA`: head - `HGM`: hectogram - `HH`: hundred cubic foot - `HIU`: hundred international unit - `HKM`: hundred kilogram, net mass - `HLT`: hectolitre - `HM`: mile per hour (statute mile) - `HMQ`: million cubic metre - `HMT`: hectometre - `HPA`: hectolitre of pure alcohol - `HTZ`: hertz - `HUR`: Stunde - `IA`: inch pound (pound inch) - `IE`: person - `INH`: inch - `INK`: square inch - `INQ`: cubic inch - `ISD`: international sugar degree - `IU`: inch per second - `IUG`: international unit per gram - `IV`: inch per second squared - `J10`: percent per millimetre - `J12`: per mille per psi - `J13`: degree API - `J14`: degree Baume (origin scale) - `J15`: degree Baume (US heavy) - `J16`: degree Baume (US light) - `J17`: degree Balling - `J18`: degree Brix - `J19`: degree Fahrenheit hour square foot per British thermal unit (thermochemical) - `J2`: joule per kilogram - `J20`: degree Fahrenheit per kelvin - `J21`: degree Fahrenheit per bar - `J22`: degree Fahrenheit hour square foot per British thermal unit (international table) - `J23`: degree Fahrenheit per hour - `J24`: degree Fahrenheit per minute - `J25`: degree Fahrenheit per second - `J26`: reciprocal degree Fahrenheit - `J27`: degree Oechsle - `J28`: degree Rankine per hour - `J29`: degree Rankine per minute - `J30`: degree Rankine per second - `J31`: degree Twaddell - `J32`: micropoise - `J33`: microgram per kilogram - `J34`: microgram per cubic metre kelvin - `J35`: microgram per cubic metre bar - `J36`: microlitre per litre - `J38`: baud - `J39`: British thermal unit (mean) - `J40`: British thermal unit (international table) foot per hour square foot degree Fahrenheit - `J41`: British thermal unit (international table) inch per hour square foot degree Fahrenheit - `J42`: British thermal unit (international table) inch per second square foot degree Fahrenheit - `J43`: British thermal unit (international table) per pound degree Fahrenheit - `J44`: British thermal unit (international table) per minute - `J45`: British thermal unit (international table) per second - `J46`: British thermal unit (thermochemical) foot per hour square foot degree Fahrenheit - `J47`: British thermal unit (thermochemical) per hour - `J48`: British thermal unit (thermochemical) inch per hour square foot degree Fahrenheit - `J49`: British thermal unit (thermochemical) inch per second square foot degree Fahrenheit - `J50`: British thermal unit (thermochemical) per pound degree Fahrenheit - `J51`: British thermal unit (thermochemical) per minute - `J52`: British thermal unit (thermochemical) per second - `J53`: coulomb square metre per kilogram - `J54`: megabaud - `J55`: watt second - `J56`: bar per bar - `J57`: barrel (UK petroleum) - `J58`: barrel (UK petroleum) per minute - `J59`: barrel (UK petroleum) per day - `J60`: barrel (UK petroleum) per hour - `J61`: barrel (UK petroleum) per second - `J62`: barrel (US petroleum) per hour - `J63`: barrel (US petroleum) per second - `J64`: bushel (UK) per day - `J65`: bushel (UK) per hour - `J66`: bushel (UK) per minute - `J67`: bushel (UK) per second - `J68`: bushel (US dry) per day - `J69`: bushel (US dry) per hour - `J70`: bushel (US dry) per minute - `J71`: bushel (US dry) per second - `J72`: centinewton metre - `J73`: centipoise per kelvin - `J74`: centipoise per bar - `J75`: calorie (mean) - `J76`: calorie (international table) per gram degree Celsius - `J78`: calorie (thermochemical) per centimetre second degree Celsius - `J79`: calorie (thermochemical) per gram degree Celsius - `J81`: calorie (thermochemical) per minute - `J82`: calorie (thermochemical) per second - `J83`: clo - `J84`: centimetre per second kelvin - `J85`: centimetre per second bar - `J87`: cubic centimetre per cubic metre - `J90`: cubic decimetre per day - `J91`: cubic decimetre per cubic metre - `J92`: cubic decimetre per minute - `J93`: cubic decimetre per second - `J95`: ounce (UK fluid) per day - `J96`: ounce (UK fluid) per hour - `J97`: ounce (UK fluid) per minute - `J98`: ounce (UK fluid) per second - `J99`: ounce (US fluid) per day - `JE`: joule per kelvin - `JK`: megajoule per kilogram - `JM`: megajoule per cubic metre - `JNT`: pipeline joint - `JOU`: joule - `JPS`: hundred metre - `JWL`: number of jewels - `K1`: kilowatt demand - `K10`: ounce (US fluid) per hour - `K11`: ounce (US fluid) per minute - `K12`: ounce (US fluid) per second - `K13`: foot per degree Fahrenheit - `K14`: foot per hour - `K15`: foot pound-force per hour - `K16`: foot pound-force per minute - `K17`: foot per psi - `K18`: foot per second degree Fahrenheit - `K19`: foot per second psi - `K2`: kilovolt ampere reactive demand - `K20`: reciprocal cubic foot - `K21`: cubic foot per degree Fahrenheit - `K22`: cubic foot per day - `K23`: cubic foot per psi - `K26`: gallon (UK) per day - `K27`: gallon (UK) per hour - `K28`: gallon (UK) per second - `K3`: kilovolt ampere reactive hour - `K30`: gallon (US liquid) per second - `K31`: gram-force per square centimetre - `K32`: gill (UK) per day - `K33`: gill (UK) per hour - `K34`: gill (UK) per minute - `K35`: gill (UK) per second - `K36`: gill (US) per day - `K37`: gill (US) per hour - `K38`: gill (US) per minute - `K39`: gill (US) per second - `K40`: standard acceleration of free fall - `K41`: grain per gallon (US) - `K42`: horsepower (boiler) - `K43`: horsepower (electric) - `K45`: inch per degree Fahrenheit - `K46`: inch per psi - `K47`: inch per second degree Fahrenheit - `K48`: inch per second psi - `K49`: reciprocal cubic inch - `K50`: kilobaud - `K51`: kilocalorie (mean) - `K52`: kilocalorie (international table) per hour metre degree Celsius - `K53`: kilocalorie (thermochemical) - `K54`: kilocalorie (thermochemical) per minute - `K55`: kilocalorie (thermochemical) per second - `K58`: kilomole per hour - `K59`: kilomole per cubic metre kelvin - `K6`: kilolitre - `K60`: kilomole per cubic metre bar - `K61`: kilomole per minute - `K62`: litre per litre - `K63`: reciprocal litre - `K64`: pound (avoirdupois) per degree Fahrenheit - `K65`: pound (avoirdupois) square foot - `K66`: pound (avoirdupois) per day - `K67`: pound per foot hour - `K68`: pound per foot second - `K69`: pound (avoirdupois) per cubic foot degree Fahrenheit - `K70`: pound (avoirdupois) per cubic foot psi - `K71`: pound (avoirdupois) per gallon (UK) - `K73`: pound (avoirdupois) per hour degree Fahrenheit - `K74`: pound (avoirdupois) per hour psi - `K75`: pound (avoirdupois) per cubic inch degree Fahrenheit - `K76`: pound (avoirdupois) per cubic inch psi - `K77`: pound (avoirdupois) per psi - `K78`: pound (avoirdupois) per minute - `K79`: pound (avoirdupois) per minute degree Fahrenheit - `K80`: pound (avoirdupois) per minute psi - `K81`: pound (avoirdupois) per second - `K82`: pound (avoirdupois) per second degree Fahrenheit - `K83`: pound (avoirdupois) per second psi - `K84`: pound per cubic yard - `K85`: pound-force per square foot - `K86`: pound-force per square inch degree Fahrenheit - `K87`: psi cubic inch per second - `K88`: psi litre per second - `K89`: psi cubic metre per second - `K90`: psi cubic yard per second - `K91`: pound-force second per square foot - `K92`: pound-force second per square inch - `K93`: reciprocal psi - `K94`: quart (UK liquid) per day - `K95`: quart (UK liquid) per hour - `K96`: quart (UK liquid) per minute - `K97`: quart (UK liquid) per second - `K98`: quart (US liquid) per day - `K99`: quart (US liquid) per hour - `KA`: cake - `KAT`: katal - `KB`: kilocharacter - `KBA`: kilobar - `KCC`: kilogram of choline chloride - `KDW`: kilogram drained net weight - `KEL`: kelvin - `KGM`: Kilogramm - `KGS`: kilogram per second - `KHY`: kilogram of hydrogen peroxide - `KHZ`: kilohertz - `KI`: kilogram per millimetre width - `KIC`: kilogram, including container - `KIP`: kilogram, including inner packaging - `KJ`: kilosegment - `KJO`: kilojoule - `KL`: kilogram per metre - `KLK`: lactic dry material percentage - `KLX`: kilolux - `KMA`: kilogram of methylamine - `KMH`: kilometre per hour - `KMK`: square kilometre - `KMQ`: kilogram per cubic metre - `KMT`: Kilometer - `KNI`: kilogram of nitrogen - `KNM`: kilonewton per square metre - `KNS`: kilogram named substance - `KNT`: knot - `KO`: milliequivalence caustic potash per gram of product - `KPA`: kilopascal - `KPH`: kilogram of potassium hydroxide (caustic potash) - `KPO`: kilogram of potassium oxide - `KPP`: kilogram of phosphorus pentoxide (phosphoric anhydride) - `KR`: kiloroentgen - `KSD`: kilogram of substance 90 % dry - `KSH`: kilogram of sodium hydroxide (caustic soda) - `KT`: kit - `KTN`: Kilotonne - `KUR`: kilogram of uranium - `KVA`: kilovolt - ampere - `KVR`: kilovar - `KVT`: kilovolt - `KW`: kilogram per millimetre - `KWH`: kilowatt hour - `KWN`: Kilowatt hour per normalized cubic metre - `KWO`: kilogram of tungsten trioxide - `KWS`: Kilowattstunde pro Normkubikmeter - `KWT`: kilowatt - `KX`: millilitre per kilogram - `L10`: quart (US liquid) per minute - `L11`: quart (US liquid) per second - `L12`: metre per second kelvin - `L13`: metre per second bar - `L14`: square metre hour degree Celsius per kilocalorie (international table) - `L15`: millipascal second per kelvin - `L16`: millipascal second per bar - `L17`: milligram per cubic metre kelvin - `L18`: milligram per cubic metre bar - `L19`: millilitre per litre - `L2`: litre per minute - `L20`: reciprocal cubic millimetre - `L21`: cubic millimetre per cubic metre - `L23`: mole per hour - `L24`: mole per kilogram kelvin - `L25`: mole per kilogram bar - `L26`: mole per litre kelvin - `L27`: mole per litre bar - `L28`: mole per cubic metre kelvin - `L29`: mole per cubic metre bar - `L30`: mole per minute - `L31`: milliroentgen aequivalent men - `L32`: nanogram per kilogram - `L33`: Unze (avoirdupois) pro Tag - `L34`: ounce (avoirdupois) per hour - `L35`: ounce (avoirdupois) per minute - `L36`: ounce (avoirdupois) per second - `L37`: ounce (avoirdupois) per gallon (UK) - `L38`: ounce (avoirdupois) per gallon (US) - `L39`: ounce (avoirdupois) per cubic inch - `L40`: ounce (avoirdupois)-force - `L41`: ounce (avoirdupois)-force inch - `L42`: picosiemens per metre - `L43`: peck (UK) - `L44`: peck (UK) per day - `L45`: peck (UK) per hour - `L46`: peck (UK) per minute - `L47`: peck (UK) per second - `L48`: peck (US dry) per day - `L49`: peck (US dry) per hour - `L50`: peck (US dry) per minute - `L51`: peck (US dry) per second - `L52`: psi per psi - `L53`: pint (UK) per day - `L54`: pint (UK) per hour - `L55`: pint (UK) per minute - `L56`: pint (UK) per second - `L57`: pint (US liquid) per day - `L58`: pint (US liquid) per hour - `L59`: pint (US liquid) per minute - `L60`: pint (US liquid) per second - `L63`: slug per day - `L64`: slug per foot second - `L65`: slug per cubic foot - `L66`: slug per hour - `L67`: slug per minute - `L68`: slug per second - `L69`: tonne per kelvin - `L70`: tonne per bar - `L71`: tonne per day - `L72`: tonne per day kelvin - `L73`: tonne per day bar - `L74`: tonne per hour kelvin - `L75`: tonne per hour bar - `L76`: tonne per cubic metre kelvin - `L77`: tonne per cubic metre bar - `L78`: tonne per minute - `L79`: tonne per minute kelvin - `L80`: tonne per minute bar - `L81`: tonne per second - `L82`: tonne per second kelvin - `L83`: tonne per second bar - `L84`: ton (UK shipping) - `L85`: ton long per day - `L86`: ton (US shipping) - `L87`: ton short per degree Fahrenheit - `L88`: ton short per day - `L89`: ton short per hour degree Fahrenheit - `L90`: ton short per hour psi - `L91`: ton short per psi - `L92`: ton (UK long) per cubic yard - `L93`: ton (US short) per cubic yard - `L94`: ton-force (US short) - `L95`: common year - `L96`: sidereal year - `L98`: yard per degree Fahrenheit - `L99`: yard per psi - `LA`: pound per cubic inch - `LAC`: lactose excess percentage - `LBR`: pound - `LBT`: troy pound (US) - `LD`: litre per day - `LEF`: leaf - `LF`: linear foot - `LH`: labour hour - `LK`: link - `LM`: linear metre - `LN`: length - `LO`: lot [unit of procurement] - `LP`: liquid pound - `LPA`: litre of pure alcohol - `LR`: layer - `LS`: lump sum - `LTN`: ton (UK) or long ton (US) - `LTR`: Liter - `LUB`: metric ton, lubricating oil - `LUM`: lumen - `LUX`: lux - `LY`: linear yard - `M1`: milligram per litre - `M10`: reciprocal cubic yard - `M11`: cubic yard per degree Fahrenheit - `M12`: cubic yard per day - `M13`: cubic yard per hour - `M14`: cubic yard per psi - `M15`: cubic yard per minute - `M16`: cubic yard per second - `M17`: kilohertz metre - `M18`: gigahertz metre - `M19`: Beaufort - `M20`: reciprocal megakelvin or megakelvin to the power minus one - `M21`: reciprocal kilovolt - ampere reciprocal hour - `M22`: millilitre per square centimetre minute - `M23`: newton per centimetre - `M24`: ohm kilometre - `M25`: percent per degree Celsius - `M26`: gigaohm per metre - `M27`: megahertz metre - `M29`: kilogram per kilogram - `M30`: reciprocal volt - ampere reciprocal second - `M31`: kilogram per kilometre - `M32`: pascal second per litre - `M33`: millimole per litre - `M34`: newton metre per square metre - `M35`: millivolt - ampere - `M36`: 30-Tage-Monat - `M37`: actual/360 - `M38`: kilometre per second squared - `M39`: centimetre per second squared - `M4`: monetary value - `M40`: yard per second squared - `M41`: millimetre per second squared - `M42`: mile (statute mile) per second squared - `M43`: mil - `M44`: revolution - `M45`: degree [unit of angle] per second squared - `M46`: revolution per minute - `M47`: circular mil - `M48`: square mile (based on U.S. survey foot) - `M49`: chain (based on U.S. survey foot) - `M5`: microcurie - `M50`: furlong - `M51`: foot (U.S. survey) - `M52`: mile (based on U.S. survey foot) - `M53`: metre per pascal - `M55`: metre per radiant - `M56`: shake - `M57`: mile per minute - `M58`: mile per second - `M59`: metre per second pascal - `M60`: metre per hour - `M61`: inch per year - `M62`: kilometre per second - `M63`: inch per minute - `M64`: yard per second - `M65`: yard per minute - `M66`: yard per hour - `M67`: acre-foot (based on U.S. survey foot) - `M68`: cord (128 ft3) - `M69`: cubic mile (UK statute) - `M7`: micro-inch - `M70`: ton, register - `M71`: cubic metre per pascal - `M72`: bel - `M73`: kilogram per cubic metre pascal - `M74`: kilogram per pascal - `M75`: kilopound-force - `M76`: poundal - `M77`: kilogram metre per second squared - `M78`: pond - `M79`: square foot per hour - `M80`: stokes per pascal - `M81`: square centimetre per second - `M82`: square metre per second pascal - `M83`: denier - `M84`: pound per yard - `M85`: ton, assay - `M86`: pfund - `M87`: kilogram per second pascal - `M88`: tonne per month - `M89`: tonne per year - `M9`: million Btu per 1000 cubic foot - `M90`: kilopound per hour - `M91`: pound per pound - `M92`: pound-force foot - `M93`: newton metre per radian - `M94`: kilogram metre - `M95`: poundal foot - `M96`: poundal inch - `M97`: dyne metre - `M98`: kilogram centimetre per second - `M99`: gram centimetre per second - `MAH`: megavolt ampere reactive hour - `MAL`: megalitre - `MAM`: megametre - `MAR`: megavar - `MAW`: megawatt - `MBE`: thousand standard brick equivalent - `MBF`: thousand board foot - `MBR`: millibar - `MC`: microgram - `MCU`: millicurie - `MD`: air dry metric ton - `MGM`: milligram - `MHZ`: megahertz - `MIK`: square mile (statute mile) - `MIL`: thousand - `MIN`: minute [unit of time] - `MIO`: million - `MIU`: million international unit - `MLD`: milliard - `MLT`: millilitre - `MMK`: square millimetre - `MMQ`: cubic millimetre - `MMT`: millimetre - `MND`: kilogram, dry weight - `MON`: Monat - `MPA`: megapascal - `MQH`: cubic metre per hour - `MQS`: cubic metre per second - `MSK`: metre per second squared - `MTK`: Quadratmeter - `MTQ`: Kubikmeter - `MTR`: Meter - `MTS`: metre per second - `MVA`: megavolt - ampere - `MWH`: megawatt hour (1000 kW.h) - `N1`: pen calorie - `N10`: pound foot per second - `N11`: pound inch per second - `N12`: Pferdestaerke - `N13`: centimetre of mercury (0 �C) - `N14`: centimetre of water (4 �C) - `N15`: foot of water (39.2 �F) - `N16`: inch of mercury (32 �F) - `N17`: inch of mercury (60 �F) - `N18`: inch of water (39.2 �F) - `N19`: inch of water (60 �F) - `N20`: kip per square inch - `N21`: poundal per square foot - `N22`: ounce (avoirdupois) per square inch - `N23`: conventional metre of water - `N24`: gram per square millimetre - `N25`: pound per square yard - `N26`: poundal per square inch - `N27`: foot to the fourth power - `N28`: cubic decimetre per kilogram - `N29`: cubic foot per pound - `N3`: print point - `N30`: cubic inch per pound - `N31`: kilonewton per metre - `N32`: poundal per inch - `N33`: pound-force per yard - `N34`: poundal second per square foot - `N35`: poise per pascal - `N36`: newton second per square metre - `N37`: kilogram per metre second - `N38`: kilogram per metre minute - `N39`: kilogram per metre day - `N40`: kilogram per metre hour - `N41`: gram per centimetre second - `N42`: poundal second per square inch - `N43`: pound per foot minute - `N44`: pound per foot day - `N45`: cubic metre per second pascal - `N46`: foot poundal - `N47`: inch poundal - `N48`: watt per square centimetre - `N49`: watt per square inch - `N50`: British thermal unit (international table) per square foot hour - `N51`: British thermal unit (thermochemical) per square foot hour - `N52`: British thermal unit (thermochemical) per square foot minute - `N53`: British thermal unit (international table) per square foot second - `N54`: British thermal unit (thermochemical) per square foot second - `N55`: British thermal unit (international table) per square inch second - `N56`: calorie (thermochemical) per square centimetre minute - `N57`: calorie (thermochemical) per square centimetre second - `N58`: British thermal unit (international table) per cubic foot - `N59`: British thermal unit (thermochemical) per cubic foot - `N60`: British thermal unit (international table) per degree Fahrenheit - `N61`: British thermal unit (thermochemical) per degree Fahrenheit - `N62`: British thermal unit (international table) per degree Rankine - `N63`: British thermal unit (thermochemical) per degree Rankine - `N64`: British thermal unit (thermochemical) per pound degree Rankine - `N65`: kilocalorie (international table) per gram kelvin - `N66`: British thermal unit (39 �F) - `N67`: British thermal unit (59 �F) - `N68`: British thermal unit (60 �F) - `N69`: calorie (20 �C) - `N70`: quad (1015 BtuIT) - `N71`: therm (EC) - `N72`: therm (U.S.) - `N73`: British thermal unit (thermochemical) per pound - `N74`: British thermal unit (international table) per hour square foot degree Fahrenheit - `N75`: British thermal unit (thermochemical) per hour square foot degree Fahrenheit - `N76`: British thermal unit (international table) per second square foot degree Fahrenheit - `N77`: British thermal unit (thermochemical) per second square foot degree Fahrenheit - `N78`: kilowatt per square metre kelvin - `N79`: kelvin per pascal - `N80`: watt per metre degree Celsius - `N81`: kilowatt per metre kelvin - `N82`: kilowatt per metre degree Celsius - `N83`: metre per degree Celcius metre - `N84`: degree Fahrenheit hour per British thermal unit (international table) - `N85`: degree Fahrenheit hour per British thermal unit (thermochemical) - `N86`: degree Fahrenheit second per British thermal unit (international table) - `N87`: degree Fahrenheit second per British thermal unit (thermochemical) - `N88`: degree Fahrenheit hour square foot per British thermal unit (international table) inch - `N89`: degree Fahrenheit hour square foot per British thermal unit (thermochemical) inch - `N90`: kilofarad - `N91`: reciprocal joule - `N92`: picosiemens - `N93`: ampere per pascal - `N94`: franklin - `N95`: ampere minute - `N96`: biot - `N97`: gilbert - `N98`: volt per pascal - `N99`: picovolt - `NA`: milligram per kilogram - `NAR`: number of articles - `NCL`: number of cells - `NEW`: newton - `NF`: message - `NIL`: nil - `NIU`: number of international units - `NL`: load - `NM3`: Normalised cubic metre - `NMI`: nautical mile - `NMP`: number of packs - `NPT`: number of parts - `NT`: net ton - `NU`: newton metre - `NX`: part per thousand - `OA`: panel - `ODE`: ozone depletion equivalent - `ODG`: ODS Grams - `ODK`: ODS Kilograms - `ODM`: ODS Milligrams - `OHM`: ohm - `ON`: ounce per square yard - `ONZ`: ounce (avoirdupois) - `OPM`: oscillations per minute - `OT`: overtime hour - `OZA`: fluid ounce (US) - `OZI`: fluid ounce (UK) - `P1`: percent - `P10`: coulomb per metre - `P11`: kiloweber - `P12`: gamma - `P13`: kilotesla - `P14`: joule per second - `P15`: joule per minute - `P16`: joule per hour - `P17`: joule per day - `P18`: kilojoule per second - `P19`: kilojoule per minute - `P2`: pound per foot - `P20`: kilojoule per hour - `P21`: kilojoule per day - `P22`: nanoohm - `P23`: ohm circular-mil per foot - `P24`: kilohenry - `P25`: lumen per square foot - `P26`: phot - `P27`: footcandle - `P28`: candela per square inch - `P29`: footlambert - `P30`: lambert - `P31`: stilb - `P32`: candela per square foot - `P33`: kilocandela - `P34`: millicandela - `P35`: Hefner-Kerze - `P36`: international candle - `P37`: British thermal unit (international table) per square foot - `P38`: British thermal unit (thermochemical) per square foot - `P39`: calorie (thermochemical) per square centimetre - `P40`: langley - `P41`: decade (logarithmic) - `P42`: pascal squared second - `P43`: bel per metre - `P44`: pound mole - `P45`: pound mole per second - `P46`: pound mole per minute - `P47`: kilomole per kilogram - `P48`: pound mole per pound - `P49`: newton square metre per ampere - `P5`: five pack - `P50`: weber metre - `P51`: mol per kilogram pascal - `P52`: mol per cubic metre pascal - `P53`: unit pole - `P54`: milligray per second - `P55`: microgray per second - `P56`: nanogray per second - `P57`: gray per minute - `P58`: milligray per minute - `P59`: microgray per minute - `P60`: nanogray per minute - `P61`: gray per hour - `P62`: milligray per hour - `P63`: microgray per hour - `P64`: nanogray per hour - `P65`: sievert per second - `P66`: millisievert per second - `P67`: microsievert per second - `P68`: nanosievert per second - `P69`: rem per second - `P70`: sievert per hour - `P71`: millisievert per hour - `P72`: microsievert per hour - `P73`: nanosievert per hour - `P74`: sievert per minute - `P75`: millisievert per minute - `P76`: microsievert per minute - `P77`: nanosievert per minute - `P78`: reciprocal square inch - `P79`: pascal square metre per kilogram - `P80`: millipascal per metre - `P81`: kilopascal per metre - `P82`: hectopascal per metre - `P83`: standard atmosphere per metre - `P84`: technical atmosphere per metre - `P85`: torr per metre - `P86`: psi per inch - `P87`: cubic metre per second square metre - `P88`: rhe - `P89`: pound-force foot per inch - `P90`: pound-force inch per inch - `P91`: perm (0 �C) - `P92`: perm (23 �C) - `P93`: byte per second - `P94`: kilobyte per second - `P95`: megabyte per second - `P96`: reciprocal volt - `P97`: reciprocal radian - `P98`: pascal to the power sum of stoichiometric numbers - `P99`: mole per cubiv metre to the power sum of stoichiometric numbers - `PAL`: pascal - `PD`: pad - `PFL`: proof litre - `PGL`: proof gallon - `PI`: pitch - `PLA`: degree Plato - `PO`: pound per inch of length - `PQ`: page per inch - `PR`: Paar - `PS`: pound-force per square inch - `PTD`: dry pint (US) - `PTI`: pint (UK) - `PTL`: liquid pint (US) - `PTN`: portion - `Q10`: joule per tesla - `Q11`: erlang - `Q12`: octet - `Q13`: octet per second - `Q14`: shannon - `Q15`: hartley - `Q16`: natural unit of information - `Q17`: shannon per second - `Q18`: hartley per second - `Q19`: natural unit of information per second - `Q20`: second per kilogramm - `Q21`: watt square metre - `Q22`: second per radian cubic metre - `Q23`: weber to the power minus one - `Q24`: reciprocal inch - `Q25`: dioptre - `Q26`: one per one - `Q27`: newton metre per metre - `Q28`: kilogram per square metre pascal second - `Q29`: microgram per hectogram - `Q30`: pH (potential of Hydrogen) - `Q31`: kilojoule per gram - `Q32`: femtolitre - `Q33`: picolitre - `Q34`: nanolitre - `Q35`: megawatts per minute - `Q36`: square metre per cubic metre - `Q37`: Standard cubic metre per day - `Q38`: Standard cubic metre per hour - `Q39`: Normalized cubic metre per day - `Q40`: Normalized cubic metre per hour - `Q41`: Joule per normalised cubic metre - `Q42`: Joule per standard cubic metre - `Q3`: meal - `QA`: page - facsimile - `QAN`: quarter (of a year) - `QB`: page - hardcopy - `QR`: quire - `QTD`: dry quart (US) - `QTI`: quart (UK) - `QTL`: liquid quart (US) - `QTR`: quarter (UK) - `R1`: pica - `R9`: thousand cubic metre - `RH`: running or operating hour - `RM`: ream - `ROM`: room - `RP`: pound per ream - `RPM`: revolutions per minute - `RPS`: revolutions per second - `RT`: revenue ton mile - `S3`: square foot per second - `S4`: square metre per second - `SAN`: half year (6 months) - `SCO`: score - `SCR`: scruple - `SEC`: second [unit of time] - `SET`: set - `SG`: Segment - `SIE`: Siemens - `SM3`: Standard Kubikmeter - `SMI`: Meile (britische Meile) - `SQ`: Platz - `SQR`: quadratisch, �berdachung - `SR`: Streifen - `STC`: Stick - `STI`: Stein (UK) - `STK`: Stick, Zigarette - `STL`: Standardliter - `STN`: Tonne (US) oder kurze Tonne (UK/US) - `STW`: Stroh - `SW`: Strang - `SX`: Sendung - `SYR`: Spritze - `T0`: Telekommunikationsleitung in Betrieb - `T3`: Tausend St�ck - `TAH`: Kiloampere-Stunde (Tausend-Ampere-Stunde) - `TAN`: Gesamts�urezahl - `TI`: tausend Quadratzoll - `TIC`: metrische Tonne, einschlie�lich Container - `TIP`: metrische Tonne, einschlie�lich Innenverpackung - `TKM`: Tonnenkilometer - `TMS`: Kilogramm importiertes Fleisch, abz�glich Innereien - `TNE`: Tonne (metrische Tonne) - `TP`: Zehnerpack - `TPI`: Z�hne pro Zoll - `TPR`: zehn Paar - `TQD`: Tausend Kubikmeter pro Tag - `TRL`: Trillion (EUR) - `TST`: Zehnergruppe - `TTS`: zehntausend St�cke - `U1`: Behandlung - `U2`: Tablette - `UB`: Telekommunikationsleitung in Betrieb durchschnittlich - `UC`: Telekommunikationsanschluss - `VA`: Volt - Ampere pro Kilogram - `VLT`: Volt - `VP`: Prozent Volumen - `W2`: Kilogrammgesetz - `WA`: Watt pro Kilogramm - `WB`: nasses Pfund - `WCD`: Kabel - `WE`: Nasstonne - `WEB`: weber - `WEE`: Woche - `WG`: Weingallone - `WHR`: Arbeitsmonat - `WM`: Arbeitsmonat - `WSD`: Standard - `WTT`: Watt - `X1`: Gunter's Kette - `YDK`: Platz Yard - `YDQ`: kubisch Yard - `YRD`: Yard - `Z11`: H�ngebeh�lter - `ZP`: Seite - `ZZ`: gemeinsam definiert</value>
        [TypeConverter(typeof(CustomEnumConverter<UnitEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum UnitEnum
        {
            
            /// <summary>
            /// Enum _11Enum for 11
            /// </summary>
            [EnumMember(Value = "11")]
            _11Enum = 1,
            
            /// <summary>
            /// Enum _13Enum for 13
            /// </summary>
            [EnumMember(Value = "13")]
            _13Enum = 2,
            
            /// <summary>
            /// Enum _14Enum for 14
            /// </summary>
            [EnumMember(Value = "14")]
            _14Enum = 3,
            
            /// <summary>
            /// Enum _15Enum for 15
            /// </summary>
            [EnumMember(Value = "15")]
            _15Enum = 4,
            
            /// <summary>
            /// Enum _20Enum for 20
            /// </summary>
            [EnumMember(Value = "20")]
            _20Enum = 5,
            
            /// <summary>
            /// Enum _21Enum for 21
            /// </summary>
            [EnumMember(Value = "21")]
            _21Enum = 6,
            
            /// <summary>
            /// Enum _22Enum for 22
            /// </summary>
            [EnumMember(Value = "22")]
            _22Enum = 7,
            
            /// <summary>
            /// Enum _23Enum for 23
            /// </summary>
            [EnumMember(Value = "23")]
            _23Enum = 8,
            
            /// <summary>
            /// Enum _24Enum for 24
            /// </summary>
            [EnumMember(Value = "24")]
            _24Enum = 9,
            
            /// <summary>
            /// Enum _25Enum for 25
            /// </summary>
            [EnumMember(Value = "25")]
            _25Enum = 10,
            
            /// <summary>
            /// Enum _27Enum for 27
            /// </summary>
            [EnumMember(Value = "27")]
            _27Enum = 11,
            
            /// <summary>
            /// Enum _28Enum for 28
            /// </summary>
            [EnumMember(Value = "28")]
            _28Enum = 12,
            
            /// <summary>
            /// Enum _33Enum for 33
            /// </summary>
            [EnumMember(Value = "33")]
            _33Enum = 13,
            
            /// <summary>
            /// Enum _34Enum for 34
            /// </summary>
            [EnumMember(Value = "34")]
            _34Enum = 14,
            
            /// <summary>
            /// Enum _35Enum for 35
            /// </summary>
            [EnumMember(Value = "35")]
            _35Enum = 15,
            
            /// <summary>
            /// Enum _37Enum for 37
            /// </summary>
            [EnumMember(Value = "37")]
            _37Enum = 16,
            
            /// <summary>
            /// Enum _38Enum for 38
            /// </summary>
            [EnumMember(Value = "38")]
            _38Enum = 17,
            
            /// <summary>
            /// Enum _40Enum for 40
            /// </summary>
            [EnumMember(Value = "40")]
            _40Enum = 18,
            
            /// <summary>
            /// Enum _41Enum for 41
            /// </summary>
            [EnumMember(Value = "41")]
            _41Enum = 19,
            
            /// <summary>
            /// Enum _56Enum for 56
            /// </summary>
            [EnumMember(Value = "56")]
            _56Enum = 20,
            
            /// <summary>
            /// Enum _57Enum for 57
            /// </summary>
            [EnumMember(Value = "57")]
            _57Enum = 21,
            
            /// <summary>
            /// Enum _58Enum for 58
            /// </summary>
            [EnumMember(Value = "58")]
            _58Enum = 22,
            
            /// <summary>
            /// Enum _59Enum for 59
            /// </summary>
            [EnumMember(Value = "59")]
            _59Enum = 23,
            
            /// <summary>
            /// Enum _60Enum for 60
            /// </summary>
            [EnumMember(Value = "60")]
            _60Enum = 24,
            
            /// <summary>
            /// Enum _61Enum for 61
            /// </summary>
            [EnumMember(Value = "61")]
            _61Enum = 25,
            
            /// <summary>
            /// Enum _74Enum for 74
            /// </summary>
            [EnumMember(Value = "74")]
            _74Enum = 26,
            
            /// <summary>
            /// Enum _77Enum for 77
            /// </summary>
            [EnumMember(Value = "77")]
            _77Enum = 27,
            
            /// <summary>
            /// Enum _80Enum for 80
            /// </summary>
            [EnumMember(Value = "80")]
            _80Enum = 28,
            
            /// <summary>
            /// Enum _81Enum for 81
            /// </summary>
            [EnumMember(Value = "81")]
            _81Enum = 29,
            
            /// <summary>
            /// Enum _85Enum for 85
            /// </summary>
            [EnumMember(Value = "85")]
            _85Enum = 30,
            
            /// <summary>
            /// Enum _87Enum for 87
            /// </summary>
            [EnumMember(Value = "87")]
            _87Enum = 31,
            
            /// <summary>
            /// Enum _89Enum for 89
            /// </summary>
            [EnumMember(Value = "89")]
            _89Enum = 32,
            
            /// <summary>
            /// Enum _91Enum for 91
            /// </summary>
            [EnumMember(Value = "91")]
            _91Enum = 33,
            
            /// <summary>
            /// Enum _1IEnum for 1I
            /// </summary>
            [EnumMember(Value = "1I")]
            _1IEnum = 34,
            
            /// <summary>
            /// Enum _2AEnum for 2A
            /// </summary>
            [EnumMember(Value = "2A")]
            _2AEnum = 35,
            
            /// <summary>
            /// Enum _2BEnum for 2B
            /// </summary>
            [EnumMember(Value = "2B")]
            _2BEnum = 36,
            
            /// <summary>
            /// Enum _2CEnum for 2C
            /// </summary>
            [EnumMember(Value = "2C")]
            _2CEnum = 37,
            
            /// <summary>
            /// Enum _2GEnum for 2G
            /// </summary>
            [EnumMember(Value = "2G")]
            _2GEnum = 38,
            
            /// <summary>
            /// Enum _2HEnum for 2H
            /// </summary>
            [EnumMember(Value = "2H")]
            _2HEnum = 39,
            
            /// <summary>
            /// Enum _2IEnum for 2I
            /// </summary>
            [EnumMember(Value = "2I")]
            _2IEnum = 40,
            
            /// <summary>
            /// Enum _2JEnum for 2J
            /// </summary>
            [EnumMember(Value = "2J")]
            _2JEnum = 41,
            
            /// <summary>
            /// Enum _2KEnum for 2K
            /// </summary>
            [EnumMember(Value = "2K")]
            _2KEnum = 42,
            
            /// <summary>
            /// Enum _2LEnum for 2L
            /// </summary>
            [EnumMember(Value = "2L")]
            _2LEnum = 43,
            
            /// <summary>
            /// Enum _2MEnum for 2M
            /// </summary>
            [EnumMember(Value = "2M")]
            _2MEnum = 44,
            
            /// <summary>
            /// Enum _2NEnum for 2N
            /// </summary>
            [EnumMember(Value = "2N")]
            _2NEnum = 45,
            
            /// <summary>
            /// Enum _2PEnum for 2P
            /// </summary>
            [EnumMember(Value = "2P")]
            _2PEnum = 46,
            
            /// <summary>
            /// Enum _2QEnum for 2Q
            /// </summary>
            [EnumMember(Value = "2Q")]
            _2QEnum = 47,
            
            /// <summary>
            /// Enum _2REnum for 2R
            /// </summary>
            [EnumMember(Value = "2R")]
            _2REnum = 48,
            
            /// <summary>
            /// Enum _2UEnum for 2U
            /// </summary>
            [EnumMember(Value = "2U")]
            _2UEnum = 49,
            
            /// <summary>
            /// Enum _2XEnum for 2X
            /// </summary>
            [EnumMember(Value = "2X")]
            _2XEnum = 50,
            
            /// <summary>
            /// Enum _2YEnum for 2Y
            /// </summary>
            [EnumMember(Value = "2Y")]
            _2YEnum = 51,
            
            /// <summary>
            /// Enum _2ZEnum for 2Z
            /// </summary>
            [EnumMember(Value = "2Z")]
            _2ZEnum = 52,
            
            /// <summary>
            /// Enum _3BEnum for 3B
            /// </summary>
            [EnumMember(Value = "3B")]
            _3BEnum = 53,
            
            /// <summary>
            /// Enum _3CEnum for 3C
            /// </summary>
            [EnumMember(Value = "3C")]
            _3CEnum = 54,
            
            /// <summary>
            /// Enum _4CEnum for 4C
            /// </summary>
            [EnumMember(Value = "4C")]
            _4CEnum = 55,
            
            /// <summary>
            /// Enum _4GEnum for 4G
            /// </summary>
            [EnumMember(Value = "4G")]
            _4GEnum = 56,
            
            /// <summary>
            /// Enum _4HEnum for 4H
            /// </summary>
            [EnumMember(Value = "4H")]
            _4HEnum = 57,
            
            /// <summary>
            /// Enum _4KEnum for 4K
            /// </summary>
            [EnumMember(Value = "4K")]
            _4KEnum = 58,
            
            /// <summary>
            /// Enum _4LEnum for 4L
            /// </summary>
            [EnumMember(Value = "4L")]
            _4LEnum = 59,
            
            /// <summary>
            /// Enum _4MEnum for 4M
            /// </summary>
            [EnumMember(Value = "4M")]
            _4MEnum = 60,
            
            /// <summary>
            /// Enum _4NEnum for 4N
            /// </summary>
            [EnumMember(Value = "4N")]
            _4NEnum = 61,
            
            /// <summary>
            /// Enum _4OEnum for 4O
            /// </summary>
            [EnumMember(Value = "4O")]
            _4OEnum = 62,
            
            /// <summary>
            /// Enum _4PEnum for 4P
            /// </summary>
            [EnumMember(Value = "4P")]
            _4PEnum = 63,
            
            /// <summary>
            /// Enum _4QEnum for 4Q
            /// </summary>
            [EnumMember(Value = "4Q")]
            _4QEnum = 64,
            
            /// <summary>
            /// Enum _4REnum for 4R
            /// </summary>
            [EnumMember(Value = "4R")]
            _4REnum = 65,
            
            /// <summary>
            /// Enum _4TEnum for 4T
            /// </summary>
            [EnumMember(Value = "4T")]
            _4TEnum = 66,
            
            /// <summary>
            /// Enum _4UEnum for 4U
            /// </summary>
            [EnumMember(Value = "4U")]
            _4UEnum = 67,
            
            /// <summary>
            /// Enum _4WEnum for 4W
            /// </summary>
            [EnumMember(Value = "4W")]
            _4WEnum = 68,
            
            /// <summary>
            /// Enum _4XEnum for 4X
            /// </summary>
            [EnumMember(Value = "4X")]
            _4XEnum = 69,
            
            /// <summary>
            /// Enum _5AEnum for 5A
            /// </summary>
            [EnumMember(Value = "5A")]
            _5AEnum = 70,
            
            /// <summary>
            /// Enum _5BEnum for 5B
            /// </summary>
            [EnumMember(Value = "5B")]
            _5BEnum = 71,
            
            /// <summary>
            /// Enum _5EEnum for 5E
            /// </summary>
            [EnumMember(Value = "5E")]
            _5EEnum = 72,
            
            /// <summary>
            /// Enum _5JEnum for 5J
            /// </summary>
            [EnumMember(Value = "5J")]
            _5JEnum = 73,
            
            /// <summary>
            /// Enum A10Enum for A10
            /// </summary>
            [EnumMember(Value = "A10")]
            A10Enum = 74,
            
            /// <summary>
            /// Enum A11Enum for A11
            /// </summary>
            [EnumMember(Value = "A11")]
            A11Enum = 75,
            
            /// <summary>
            /// Enum A12Enum for A12
            /// </summary>
            [EnumMember(Value = "A12")]
            A12Enum = 76,
            
            /// <summary>
            /// Enum A13Enum for A13
            /// </summary>
            [EnumMember(Value = "A13")]
            A13Enum = 77,
            
            /// <summary>
            /// Enum A14Enum for A14
            /// </summary>
            [EnumMember(Value = "A14")]
            A14Enum = 78,
            
            /// <summary>
            /// Enum A15Enum for A15
            /// </summary>
            [EnumMember(Value = "A15")]
            A15Enum = 79,
            
            /// <summary>
            /// Enum A16Enum for A16
            /// </summary>
            [EnumMember(Value = "A16")]
            A16Enum = 80,
            
            /// <summary>
            /// Enum A17Enum for A17
            /// </summary>
            [EnumMember(Value = "A17")]
            A17Enum = 81,
            
            /// <summary>
            /// Enum A18Enum for A18
            /// </summary>
            [EnumMember(Value = "A18")]
            A18Enum = 82,
            
            /// <summary>
            /// Enum A19Enum for A19
            /// </summary>
            [EnumMember(Value = "A19")]
            A19Enum = 83,
            
            /// <summary>
            /// Enum A2Enum for A2
            /// </summary>
            [EnumMember(Value = "A2")]
            A2Enum = 84,
            
            /// <summary>
            /// Enum A20Enum for A20
            /// </summary>
            [EnumMember(Value = "A20")]
            A20Enum = 85,
            
            /// <summary>
            /// Enum A21Enum for A21
            /// </summary>
            [EnumMember(Value = "A21")]
            A21Enum = 86,
            
            /// <summary>
            /// Enum A22Enum for A22
            /// </summary>
            [EnumMember(Value = "A22")]
            A22Enum = 87,
            
            /// <summary>
            /// Enum A23Enum for A23
            /// </summary>
            [EnumMember(Value = "A23")]
            A23Enum = 88,
            
            /// <summary>
            /// Enum A24Enum for A24
            /// </summary>
            [EnumMember(Value = "A24")]
            A24Enum = 89,
            
            /// <summary>
            /// Enum A26Enum for A26
            /// </summary>
            [EnumMember(Value = "A26")]
            A26Enum = 90,
            
            /// <summary>
            /// Enum A27Enum for A27
            /// </summary>
            [EnumMember(Value = "A27")]
            A27Enum = 91,
            
            /// <summary>
            /// Enum A28Enum for A28
            /// </summary>
            [EnumMember(Value = "A28")]
            A28Enum = 92,
            
            /// <summary>
            /// Enum A29Enum for A29
            /// </summary>
            [EnumMember(Value = "A29")]
            A29Enum = 93,
            
            /// <summary>
            /// Enum A3Enum for A3
            /// </summary>
            [EnumMember(Value = "A3")]
            A3Enum = 94,
            
            /// <summary>
            /// Enum A30Enum for A30
            /// </summary>
            [EnumMember(Value = "A30")]
            A30Enum = 95,
            
            /// <summary>
            /// Enum A31Enum for A31
            /// </summary>
            [EnumMember(Value = "A31")]
            A31Enum = 96,
            
            /// <summary>
            /// Enum A32Enum for A32
            /// </summary>
            [EnumMember(Value = "A32")]
            A32Enum = 97,
            
            /// <summary>
            /// Enum A33Enum for A33
            /// </summary>
            [EnumMember(Value = "A33")]
            A33Enum = 98,
            
            /// <summary>
            /// Enum A34Enum for A34
            /// </summary>
            [EnumMember(Value = "A34")]
            A34Enum = 99,
            
            /// <summary>
            /// Enum A35Enum for A35
            /// </summary>
            [EnumMember(Value = "A35")]
            A35Enum = 100,
            
            /// <summary>
            /// Enum A36Enum for A36
            /// </summary>
            [EnumMember(Value = "A36")]
            A36Enum = 101,
            
            /// <summary>
            /// Enum A37Enum for A37
            /// </summary>
            [EnumMember(Value = "A37")]
            A37Enum = 102,
            
            /// <summary>
            /// Enum A38Enum for A38
            /// </summary>
            [EnumMember(Value = "A38")]
            A38Enum = 103,
            
            /// <summary>
            /// Enum A39Enum for A39
            /// </summary>
            [EnumMember(Value = "A39")]
            A39Enum = 104,
            
            /// <summary>
            /// Enum A4Enum for A4
            /// </summary>
            [EnumMember(Value = "A4")]
            A4Enum = 105,
            
            /// <summary>
            /// Enum A40Enum for A40
            /// </summary>
            [EnumMember(Value = "A40")]
            A40Enum = 106,
            
            /// <summary>
            /// Enum A41Enum for A41
            /// </summary>
            [EnumMember(Value = "A41")]
            A41Enum = 107,
            
            /// <summary>
            /// Enum A42Enum for A42
            /// </summary>
            [EnumMember(Value = "A42")]
            A42Enum = 108,
            
            /// <summary>
            /// Enum A43Enum for A43
            /// </summary>
            [EnumMember(Value = "A43")]
            A43Enum = 109,
            
            /// <summary>
            /// Enum A44Enum for A44
            /// </summary>
            [EnumMember(Value = "A44")]
            A44Enum = 110,
            
            /// <summary>
            /// Enum A45Enum for A45
            /// </summary>
            [EnumMember(Value = "A45")]
            A45Enum = 111,
            
            /// <summary>
            /// Enum A47Enum for A47
            /// </summary>
            [EnumMember(Value = "A47")]
            A47Enum = 112,
            
            /// <summary>
            /// Enum A48Enum for A48
            /// </summary>
            [EnumMember(Value = "A48")]
            A48Enum = 113,
            
            /// <summary>
            /// Enum A49Enum for A49
            /// </summary>
            [EnumMember(Value = "A49")]
            A49Enum = 114,
            
            /// <summary>
            /// Enum A5Enum for A5
            /// </summary>
            [EnumMember(Value = "A5")]
            A5Enum = 115,
            
            /// <summary>
            /// Enum A53Enum for A53
            /// </summary>
            [EnumMember(Value = "A53")]
            A53Enum = 116,
            
            /// <summary>
            /// Enum A54Enum for A54
            /// </summary>
            [EnumMember(Value = "A54")]
            A54Enum = 117,
            
            /// <summary>
            /// Enum A55Enum for A55
            /// </summary>
            [EnumMember(Value = "A55")]
            A55Enum = 118,
            
            /// <summary>
            /// Enum A56Enum for A56
            /// </summary>
            [EnumMember(Value = "A56")]
            A56Enum = 119,
            
            /// <summary>
            /// Enum A59Enum for A59
            /// </summary>
            [EnumMember(Value = "A59")]
            A59Enum = 120,
            
            /// <summary>
            /// Enum A6Enum for A6
            /// </summary>
            [EnumMember(Value = "A6")]
            A6Enum = 121,
            
            /// <summary>
            /// Enum A68Enum for A68
            /// </summary>
            [EnumMember(Value = "A68")]
            A68Enum = 122,
            
            /// <summary>
            /// Enum A69Enum for A69
            /// </summary>
            [EnumMember(Value = "A69")]
            A69Enum = 123,
            
            /// <summary>
            /// Enum A7Enum for A7
            /// </summary>
            [EnumMember(Value = "A7")]
            A7Enum = 124,
            
            /// <summary>
            /// Enum A70Enum for A70
            /// </summary>
            [EnumMember(Value = "A70")]
            A70Enum = 125,
            
            /// <summary>
            /// Enum A71Enum for A71
            /// </summary>
            [EnumMember(Value = "A71")]
            A71Enum = 126,
            
            /// <summary>
            /// Enum A73Enum for A73
            /// </summary>
            [EnumMember(Value = "A73")]
            A73Enum = 127,
            
            /// <summary>
            /// Enum A74Enum for A74
            /// </summary>
            [EnumMember(Value = "A74")]
            A74Enum = 128,
            
            /// <summary>
            /// Enum A75Enum for A75
            /// </summary>
            [EnumMember(Value = "A75")]
            A75Enum = 129,
            
            /// <summary>
            /// Enum A76Enum for A76
            /// </summary>
            [EnumMember(Value = "A76")]
            A76Enum = 130,
            
            /// <summary>
            /// Enum A8Enum for A8
            /// </summary>
            [EnumMember(Value = "A8")]
            A8Enum = 131,
            
            /// <summary>
            /// Enum A84Enum for A84
            /// </summary>
            [EnumMember(Value = "A84")]
            A84Enum = 132,
            
            /// <summary>
            /// Enum A85Enum for A85
            /// </summary>
            [EnumMember(Value = "A85")]
            A85Enum = 133,
            
            /// <summary>
            /// Enum A86Enum for A86
            /// </summary>
            [EnumMember(Value = "A86")]
            A86Enum = 134,
            
            /// <summary>
            /// Enum A87Enum for A87
            /// </summary>
            [EnumMember(Value = "A87")]
            A87Enum = 135,
            
            /// <summary>
            /// Enum A88Enum for A88
            /// </summary>
            [EnumMember(Value = "A88")]
            A88Enum = 136,
            
            /// <summary>
            /// Enum A89Enum for A89
            /// </summary>
            [EnumMember(Value = "A89")]
            A89Enum = 137,
            
            /// <summary>
            /// Enum A9Enum for A9
            /// </summary>
            [EnumMember(Value = "A9")]
            A9Enum = 138,
            
            /// <summary>
            /// Enum A90Enum for A90
            /// </summary>
            [EnumMember(Value = "A90")]
            A90Enum = 139,
            
            /// <summary>
            /// Enum A91Enum for A91
            /// </summary>
            [EnumMember(Value = "A91")]
            A91Enum = 140,
            
            /// <summary>
            /// Enum A93Enum for A93
            /// </summary>
            [EnumMember(Value = "A93")]
            A93Enum = 141,
            
            /// <summary>
            /// Enum A94Enum for A94
            /// </summary>
            [EnumMember(Value = "A94")]
            A94Enum = 142,
            
            /// <summary>
            /// Enum A95Enum for A95
            /// </summary>
            [EnumMember(Value = "A95")]
            A95Enum = 143,
            
            /// <summary>
            /// Enum A96Enum for A96
            /// </summary>
            [EnumMember(Value = "A96")]
            A96Enum = 144,
            
            /// <summary>
            /// Enum A97Enum for A97
            /// </summary>
            [EnumMember(Value = "A97")]
            A97Enum = 145,
            
            /// <summary>
            /// Enum A98Enum for A98
            /// </summary>
            [EnumMember(Value = "A98")]
            A98Enum = 146,
            
            /// <summary>
            /// Enum A99Enum for A99
            /// </summary>
            [EnumMember(Value = "A99")]
            A99Enum = 147,
            
            /// <summary>
            /// Enum AAEnum for AA
            /// </summary>
            [EnumMember(Value = "AA")]
            AAEnum = 148,
            
            /// <summary>
            /// Enum ABEnum for AB
            /// </summary>
            [EnumMember(Value = "AB")]
            ABEnum = 149,
            
            /// <summary>
            /// Enum ACREnum for ACR
            /// </summary>
            [EnumMember(Value = "ACR")]
            ACREnum = 150,
            
            /// <summary>
            /// Enum ACTEnum for ACT
            /// </summary>
            [EnumMember(Value = "ACT")]
            ACTEnum = 151,
            
            /// <summary>
            /// Enum ADEnum for AD
            /// </summary>
            [EnumMember(Value = "AD")]
            ADEnum = 152,
            
            /// <summary>
            /// Enum AEEnum for AE
            /// </summary>
            [EnumMember(Value = "AE")]
            AEEnum = 153,
            
            /// <summary>
            /// Enum AHEnum for AH
            /// </summary>
            [EnumMember(Value = "AH")]
            AHEnum = 154,
            
            /// <summary>
            /// Enum AIEnum for AI
            /// </summary>
            [EnumMember(Value = "AI")]
            AIEnum = 155,
            
            /// <summary>
            /// Enum AKEnum for AK
            /// </summary>
            [EnumMember(Value = "AK")]
            AKEnum = 156,
            
            /// <summary>
            /// Enum ALEnum for AL
            /// </summary>
            [EnumMember(Value = "AL")]
            ALEnum = 157,
            
            /// <summary>
            /// Enum AMHEnum for AMH
            /// </summary>
            [EnumMember(Value = "AMH")]
            AMHEnum = 158,
            
            /// <summary>
            /// Enum AMPEnum for AMP
            /// </summary>
            [EnumMember(Value = "AMP")]
            AMPEnum = 159,
            
            /// <summary>
            /// Enum ANNEnum for ANN
            /// </summary>
            [EnumMember(Value = "ANN")]
            ANNEnum = 160,
            
            /// <summary>
            /// Enum APZEnum for APZ
            /// </summary>
            [EnumMember(Value = "APZ")]
            APZEnum = 161,
            
            /// <summary>
            /// Enum AQEnum for AQ
            /// </summary>
            [EnumMember(Value = "AQ")]
            AQEnum = 162,
            
            /// <summary>
            /// Enum ASEnum for AS
            /// </summary>
            [EnumMember(Value = "AS")]
            ASEnum = 163,
            
            /// <summary>
            /// Enum ASMEnum for ASM
            /// </summary>
            [EnumMember(Value = "ASM")]
            ASMEnum = 164,
            
            /// <summary>
            /// Enum ASUEnum for ASU
            /// </summary>
            [EnumMember(Value = "ASU")]
            ASUEnum = 165,
            
            /// <summary>
            /// Enum ATMEnum for ATM
            /// </summary>
            [EnumMember(Value = "ATM")]
            ATMEnum = 166,
            
            /// <summary>
            /// Enum AWGEnum for AWG
            /// </summary>
            [EnumMember(Value = "AWG")]
            AWGEnum = 167,
            
            /// <summary>
            /// Enum AYEnum for AY
            /// </summary>
            [EnumMember(Value = "AY")]
            AYEnum = 168,
            
            /// <summary>
            /// Enum AZEnum for AZ
            /// </summary>
            [EnumMember(Value = "AZ")]
            AZEnum = 169,
            
            /// <summary>
            /// Enum B1Enum for B1
            /// </summary>
            [EnumMember(Value = "B1")]
            B1Enum = 170,
            
            /// <summary>
            /// Enum B10Enum for B10
            /// </summary>
            [EnumMember(Value = "B10")]
            B10Enum = 171,
            
            /// <summary>
            /// Enum B11Enum for B11
            /// </summary>
            [EnumMember(Value = "B11")]
            B11Enum = 172,
            
            /// <summary>
            /// Enum B12Enum for B12
            /// </summary>
            [EnumMember(Value = "B12")]
            B12Enum = 173,
            
            /// <summary>
            /// Enum B13Enum for B13
            /// </summary>
            [EnumMember(Value = "B13")]
            B13Enum = 174,
            
            /// <summary>
            /// Enum B14Enum for B14
            /// </summary>
            [EnumMember(Value = "B14")]
            B14Enum = 175,
            
            /// <summary>
            /// Enum B15Enum for B15
            /// </summary>
            [EnumMember(Value = "B15")]
            B15Enum = 176,
            
            /// <summary>
            /// Enum B16Enum for B16
            /// </summary>
            [EnumMember(Value = "B16")]
            B16Enum = 177,
            
            /// <summary>
            /// Enum B17Enum for B17
            /// </summary>
            [EnumMember(Value = "B17")]
            B17Enum = 178,
            
            /// <summary>
            /// Enum B18Enum for B18
            /// </summary>
            [EnumMember(Value = "B18")]
            B18Enum = 179,
            
            /// <summary>
            /// Enum B19Enum for B19
            /// </summary>
            [EnumMember(Value = "B19")]
            B19Enum = 180,
            
            /// <summary>
            /// Enum B20Enum for B20
            /// </summary>
            [EnumMember(Value = "B20")]
            B20Enum = 181,
            
            /// <summary>
            /// Enum B21Enum for B21
            /// </summary>
            [EnumMember(Value = "B21")]
            B21Enum = 182,
            
            /// <summary>
            /// Enum B22Enum for B22
            /// </summary>
            [EnumMember(Value = "B22")]
            B22Enum = 183,
            
            /// <summary>
            /// Enum B23Enum for B23
            /// </summary>
            [EnumMember(Value = "B23")]
            B23Enum = 184,
            
            /// <summary>
            /// Enum B24Enum for B24
            /// </summary>
            [EnumMember(Value = "B24")]
            B24Enum = 185,
            
            /// <summary>
            /// Enum B25Enum for B25
            /// </summary>
            [EnumMember(Value = "B25")]
            B25Enum = 186,
            
            /// <summary>
            /// Enum B26Enum for B26
            /// </summary>
            [EnumMember(Value = "B26")]
            B26Enum = 187,
            
            /// <summary>
            /// Enum B27Enum for B27
            /// </summary>
            [EnumMember(Value = "B27")]
            B27Enum = 188,
            
            /// <summary>
            /// Enum B28Enum for B28
            /// </summary>
            [EnumMember(Value = "B28")]
            B28Enum = 189,
            
            /// <summary>
            /// Enum B29Enum for B29
            /// </summary>
            [EnumMember(Value = "B29")]
            B29Enum = 190,
            
            /// <summary>
            /// Enum B3Enum for B3
            /// </summary>
            [EnumMember(Value = "B3")]
            B3Enum = 191,
            
            /// <summary>
            /// Enum B30Enum for B30
            /// </summary>
            [EnumMember(Value = "B30")]
            B30Enum = 192,
            
            /// <summary>
            /// Enum B31Enum for B31
            /// </summary>
            [EnumMember(Value = "B31")]
            B31Enum = 193,
            
            /// <summary>
            /// Enum B32Enum for B32
            /// </summary>
            [EnumMember(Value = "B32")]
            B32Enum = 194,
            
            /// <summary>
            /// Enum B33Enum for B33
            /// </summary>
            [EnumMember(Value = "B33")]
            B33Enum = 195,
            
            /// <summary>
            /// Enum B34Enum for B34
            /// </summary>
            [EnumMember(Value = "B34")]
            B34Enum = 196,
            
            /// <summary>
            /// Enum B35Enum for B35
            /// </summary>
            [EnumMember(Value = "B35")]
            B35Enum = 197,
            
            /// <summary>
            /// Enum B4Enum for B4
            /// </summary>
            [EnumMember(Value = "B4")]
            B4Enum = 198,
            
            /// <summary>
            /// Enum B41Enum for B41
            /// </summary>
            [EnumMember(Value = "B41")]
            B41Enum = 199,
            
            /// <summary>
            /// Enum B42Enum for B42
            /// </summary>
            [EnumMember(Value = "B42")]
            B42Enum = 200,
            
            /// <summary>
            /// Enum B43Enum for B43
            /// </summary>
            [EnumMember(Value = "B43")]
            B43Enum = 201,
            
            /// <summary>
            /// Enum B44Enum for B44
            /// </summary>
            [EnumMember(Value = "B44")]
            B44Enum = 202,
            
            /// <summary>
            /// Enum B45Enum for B45
            /// </summary>
            [EnumMember(Value = "B45")]
            B45Enum = 203,
            
            /// <summary>
            /// Enum B46Enum for B46
            /// </summary>
            [EnumMember(Value = "B46")]
            B46Enum = 204,
            
            /// <summary>
            /// Enum B47Enum for B47
            /// </summary>
            [EnumMember(Value = "B47")]
            B47Enum = 205,
            
            /// <summary>
            /// Enum B48Enum for B48
            /// </summary>
            [EnumMember(Value = "B48")]
            B48Enum = 206,
            
            /// <summary>
            /// Enum B49Enum for B49
            /// </summary>
            [EnumMember(Value = "B49")]
            B49Enum = 207,
            
            /// <summary>
            /// Enum B50Enum for B50
            /// </summary>
            [EnumMember(Value = "B50")]
            B50Enum = 208,
            
            /// <summary>
            /// Enum B52Enum for B52
            /// </summary>
            [EnumMember(Value = "B52")]
            B52Enum = 209,
            
            /// <summary>
            /// Enum B53Enum for B53
            /// </summary>
            [EnumMember(Value = "B53")]
            B53Enum = 210,
            
            /// <summary>
            /// Enum B54Enum for B54
            /// </summary>
            [EnumMember(Value = "B54")]
            B54Enum = 211,
            
            /// <summary>
            /// Enum B55Enum for B55
            /// </summary>
            [EnumMember(Value = "B55")]
            B55Enum = 212,
            
            /// <summary>
            /// Enum B56Enum for B56
            /// </summary>
            [EnumMember(Value = "B56")]
            B56Enum = 213,
            
            /// <summary>
            /// Enum B57Enum for B57
            /// </summary>
            [EnumMember(Value = "B57")]
            B57Enum = 214,
            
            /// <summary>
            /// Enum B58Enum for B58
            /// </summary>
            [EnumMember(Value = "B58")]
            B58Enum = 215,
            
            /// <summary>
            /// Enum B59Enum for B59
            /// </summary>
            [EnumMember(Value = "B59")]
            B59Enum = 216,
            
            /// <summary>
            /// Enum B60Enum for B60
            /// </summary>
            [EnumMember(Value = "B60")]
            B60Enum = 217,
            
            /// <summary>
            /// Enum B61Enum for B61
            /// </summary>
            [EnumMember(Value = "B61")]
            B61Enum = 218,
            
            /// <summary>
            /// Enum B62Enum for B62
            /// </summary>
            [EnumMember(Value = "B62")]
            B62Enum = 219,
            
            /// <summary>
            /// Enum B63Enum for B63
            /// </summary>
            [EnumMember(Value = "B63")]
            B63Enum = 220,
            
            /// <summary>
            /// Enum B64Enum for B64
            /// </summary>
            [EnumMember(Value = "B64")]
            B64Enum = 221,
            
            /// <summary>
            /// Enum B66Enum for B66
            /// </summary>
            [EnumMember(Value = "B66")]
            B66Enum = 222,
            
            /// <summary>
            /// Enum B67Enum for B67
            /// </summary>
            [EnumMember(Value = "B67")]
            B67Enum = 223,
            
            /// <summary>
            /// Enum B68Enum for B68
            /// </summary>
            [EnumMember(Value = "B68")]
            B68Enum = 224,
            
            /// <summary>
            /// Enum B69Enum for B69
            /// </summary>
            [EnumMember(Value = "B69")]
            B69Enum = 225,
            
            /// <summary>
            /// Enum B7Enum for B7
            /// </summary>
            [EnumMember(Value = "B7")]
            B7Enum = 226,
            
            /// <summary>
            /// Enum B70Enum for B70
            /// </summary>
            [EnumMember(Value = "B70")]
            B70Enum = 227,
            
            /// <summary>
            /// Enum B71Enum for B71
            /// </summary>
            [EnumMember(Value = "B71")]
            B71Enum = 228,
            
            /// <summary>
            /// Enum B72Enum for B72
            /// </summary>
            [EnumMember(Value = "B72")]
            B72Enum = 229,
            
            /// <summary>
            /// Enum B73Enum for B73
            /// </summary>
            [EnumMember(Value = "B73")]
            B73Enum = 230,
            
            /// <summary>
            /// Enum B74Enum for B74
            /// </summary>
            [EnumMember(Value = "B74")]
            B74Enum = 231,
            
            /// <summary>
            /// Enum B75Enum for B75
            /// </summary>
            [EnumMember(Value = "B75")]
            B75Enum = 232,
            
            /// <summary>
            /// Enum B76Enum for B76
            /// </summary>
            [EnumMember(Value = "B76")]
            B76Enum = 233,
            
            /// <summary>
            /// Enum B77Enum for B77
            /// </summary>
            [EnumMember(Value = "B77")]
            B77Enum = 234,
            
            /// <summary>
            /// Enum B78Enum for B78
            /// </summary>
            [EnumMember(Value = "B78")]
            B78Enum = 235,
            
            /// <summary>
            /// Enum B79Enum for B79
            /// </summary>
            [EnumMember(Value = "B79")]
            B79Enum = 236,
            
            /// <summary>
            /// Enum B8Enum for B8
            /// </summary>
            [EnumMember(Value = "B8")]
            B8Enum = 237,
            
            /// <summary>
            /// Enum B80Enum for B80
            /// </summary>
            [EnumMember(Value = "B80")]
            B80Enum = 238,
            
            /// <summary>
            /// Enum B81Enum for B81
            /// </summary>
            [EnumMember(Value = "B81")]
            B81Enum = 239,
            
            /// <summary>
            /// Enum B82Enum for B82
            /// </summary>
            [EnumMember(Value = "B82")]
            B82Enum = 240,
            
            /// <summary>
            /// Enum B83Enum for B83
            /// </summary>
            [EnumMember(Value = "B83")]
            B83Enum = 241,
            
            /// <summary>
            /// Enum B84Enum for B84
            /// </summary>
            [EnumMember(Value = "B84")]
            B84Enum = 242,
            
            /// <summary>
            /// Enum B85Enum for B85
            /// </summary>
            [EnumMember(Value = "B85")]
            B85Enum = 243,
            
            /// <summary>
            /// Enum B86Enum for B86
            /// </summary>
            [EnumMember(Value = "B86")]
            B86Enum = 244,
            
            /// <summary>
            /// Enum B87Enum for B87
            /// </summary>
            [EnumMember(Value = "B87")]
            B87Enum = 245,
            
            /// <summary>
            /// Enum B88Enum for B88
            /// </summary>
            [EnumMember(Value = "B88")]
            B88Enum = 246,
            
            /// <summary>
            /// Enum B89Enum for B89
            /// </summary>
            [EnumMember(Value = "B89")]
            B89Enum = 247,
            
            /// <summary>
            /// Enum B90Enum for B90
            /// </summary>
            [EnumMember(Value = "B90")]
            B90Enum = 248,
            
            /// <summary>
            /// Enum B91Enum for B91
            /// </summary>
            [EnumMember(Value = "B91")]
            B91Enum = 249,
            
            /// <summary>
            /// Enum B92Enum for B92
            /// </summary>
            [EnumMember(Value = "B92")]
            B92Enum = 250,
            
            /// <summary>
            /// Enum B93Enum for B93
            /// </summary>
            [EnumMember(Value = "B93")]
            B93Enum = 251,
            
            /// <summary>
            /// Enum B94Enum for B94
            /// </summary>
            [EnumMember(Value = "B94")]
            B94Enum = 252,
            
            /// <summary>
            /// Enum B95Enum for B95
            /// </summary>
            [EnumMember(Value = "B95")]
            B95Enum = 253,
            
            /// <summary>
            /// Enum B96Enum for B96
            /// </summary>
            [EnumMember(Value = "B96")]
            B96Enum = 254,
            
            /// <summary>
            /// Enum B97Enum for B97
            /// </summary>
            [EnumMember(Value = "B97")]
            B97Enum = 255,
            
            /// <summary>
            /// Enum B98Enum for B98
            /// </summary>
            [EnumMember(Value = "B98")]
            B98Enum = 256,
            
            /// <summary>
            /// Enum B99Enum for B99
            /// </summary>
            [EnumMember(Value = "B99")]
            B99Enum = 257,
            
            /// <summary>
            /// Enum BAREnum for BAR
            /// </summary>
            [EnumMember(Value = "BAR")]
            BAREnum = 258,
            
            /// <summary>
            /// Enum BBEnum for BB
            /// </summary>
            [EnumMember(Value = "BB")]
            BBEnum = 259,
            
            /// <summary>
            /// Enum BFTEnum for BFT
            /// </summary>
            [EnumMember(Value = "BFT")]
            BFTEnum = 260,
            
            /// <summary>
            /// Enum BHPEnum for BHP
            /// </summary>
            [EnumMember(Value = "BHP")]
            BHPEnum = 261,
            
            /// <summary>
            /// Enum BILEnum for BIL
            /// </summary>
            [EnumMember(Value = "BIL")]
            BILEnum = 262,
            
            /// <summary>
            /// Enum BLDEnum for BLD
            /// </summary>
            [EnumMember(Value = "BLD")]
            BLDEnum = 263,
            
            /// <summary>
            /// Enum BLLEnum for BLL
            /// </summary>
            [EnumMember(Value = "BLL")]
            BLLEnum = 264,
            
            /// <summary>
            /// Enum BPEnum for BP
            /// </summary>
            [EnumMember(Value = "BP")]
            BPEnum = 265,
            
            /// <summary>
            /// Enum BPMEnum for BPM
            /// </summary>
            [EnumMember(Value = "BPM")]
            BPMEnum = 266,
            
            /// <summary>
            /// Enum BQLEnum for BQL
            /// </summary>
            [EnumMember(Value = "BQL")]
            BQLEnum = 267,
            
            /// <summary>
            /// Enum BTUEnum for BTU
            /// </summary>
            [EnumMember(Value = "BTU")]
            BTUEnum = 268,
            
            /// <summary>
            /// Enum BUAEnum for BUA
            /// </summary>
            [EnumMember(Value = "BUA")]
            BUAEnum = 269,
            
            /// <summary>
            /// Enum BUIEnum for BUI
            /// </summary>
            [EnumMember(Value = "BUI")]
            BUIEnum = 270,
            
            /// <summary>
            /// Enum C0Enum for C0
            /// </summary>
            [EnumMember(Value = "C0")]
            C0Enum = 271,
            
            /// <summary>
            /// Enum C10Enum for C10
            /// </summary>
            [EnumMember(Value = "C10")]
            C10Enum = 272,
            
            /// <summary>
            /// Enum C11Enum for C11
            /// </summary>
            [EnumMember(Value = "C11")]
            C11Enum = 273,
            
            /// <summary>
            /// Enum C12Enum for C12
            /// </summary>
            [EnumMember(Value = "C12")]
            C12Enum = 274,
            
            /// <summary>
            /// Enum C13Enum for C13
            /// </summary>
            [EnumMember(Value = "C13")]
            C13Enum = 275,
            
            /// <summary>
            /// Enum C14Enum for C14
            /// </summary>
            [EnumMember(Value = "C14")]
            C14Enum = 276,
            
            /// <summary>
            /// Enum C15Enum for C15
            /// </summary>
            [EnumMember(Value = "C15")]
            C15Enum = 277,
            
            /// <summary>
            /// Enum C16Enum for C16
            /// </summary>
            [EnumMember(Value = "C16")]
            C16Enum = 278,
            
            /// <summary>
            /// Enum C17Enum for C17
            /// </summary>
            [EnumMember(Value = "C17")]
            C17Enum = 279,
            
            /// <summary>
            /// Enum C18Enum for C18
            /// </summary>
            [EnumMember(Value = "C18")]
            C18Enum = 280,
            
            /// <summary>
            /// Enum C19Enum for C19
            /// </summary>
            [EnumMember(Value = "C19")]
            C19Enum = 281,
            
            /// <summary>
            /// Enum C20Enum for C20
            /// </summary>
            [EnumMember(Value = "C20")]
            C20Enum = 282,
            
            /// <summary>
            /// Enum C21Enum for C21
            /// </summary>
            [EnumMember(Value = "C21")]
            C21Enum = 283,
            
            /// <summary>
            /// Enum C22Enum for C22
            /// </summary>
            [EnumMember(Value = "C22")]
            C22Enum = 284,
            
            /// <summary>
            /// Enum C23Enum for C23
            /// </summary>
            [EnumMember(Value = "C23")]
            C23Enum = 285,
            
            /// <summary>
            /// Enum C24Enum for C24
            /// </summary>
            [EnumMember(Value = "C24")]
            C24Enum = 286,
            
            /// <summary>
            /// Enum C25Enum for C25
            /// </summary>
            [EnumMember(Value = "C25")]
            C25Enum = 287,
            
            /// <summary>
            /// Enum C26Enum for C26
            /// </summary>
            [EnumMember(Value = "C26")]
            C26Enum = 288,
            
            /// <summary>
            /// Enum C27Enum for C27
            /// </summary>
            [EnumMember(Value = "C27")]
            C27Enum = 289,
            
            /// <summary>
            /// Enum C28Enum for C28
            /// </summary>
            [EnumMember(Value = "C28")]
            C28Enum = 290,
            
            /// <summary>
            /// Enum C29Enum for C29
            /// </summary>
            [EnumMember(Value = "C29")]
            C29Enum = 291,
            
            /// <summary>
            /// Enum C3Enum for C3
            /// </summary>
            [EnumMember(Value = "C3")]
            C3Enum = 292,
            
            /// <summary>
            /// Enum C30Enum for C30
            /// </summary>
            [EnumMember(Value = "C30")]
            C30Enum = 293,
            
            /// <summary>
            /// Enum C31Enum for C31
            /// </summary>
            [EnumMember(Value = "C31")]
            C31Enum = 294,
            
            /// <summary>
            /// Enum C32Enum for C32
            /// </summary>
            [EnumMember(Value = "C32")]
            C32Enum = 295,
            
            /// <summary>
            /// Enum C33Enum for C33
            /// </summary>
            [EnumMember(Value = "C33")]
            C33Enum = 296,
            
            /// <summary>
            /// Enum C34Enum for C34
            /// </summary>
            [EnumMember(Value = "C34")]
            C34Enum = 297,
            
            /// <summary>
            /// Enum C35Enum for C35
            /// </summary>
            [EnumMember(Value = "C35")]
            C35Enum = 298,
            
            /// <summary>
            /// Enum C36Enum for C36
            /// </summary>
            [EnumMember(Value = "C36")]
            C36Enum = 299,
            
            /// <summary>
            /// Enum C37Enum for C37
            /// </summary>
            [EnumMember(Value = "C37")]
            C37Enum = 300,
            
            /// <summary>
            /// Enum C38Enum for C38
            /// </summary>
            [EnumMember(Value = "C38")]
            C38Enum = 301,
            
            /// <summary>
            /// Enum C39Enum for C39
            /// </summary>
            [EnumMember(Value = "C39")]
            C39Enum = 302,
            
            /// <summary>
            /// Enum C40Enum for C40
            /// </summary>
            [EnumMember(Value = "C40")]
            C40Enum = 303,
            
            /// <summary>
            /// Enum C41Enum for C41
            /// </summary>
            [EnumMember(Value = "C41")]
            C41Enum = 304,
            
            /// <summary>
            /// Enum C42Enum for C42
            /// </summary>
            [EnumMember(Value = "C42")]
            C42Enum = 305,
            
            /// <summary>
            /// Enum C43Enum for C43
            /// </summary>
            [EnumMember(Value = "C43")]
            C43Enum = 306,
            
            /// <summary>
            /// Enum C44Enum for C44
            /// </summary>
            [EnumMember(Value = "C44")]
            C44Enum = 307,
            
            /// <summary>
            /// Enum C45Enum for C45
            /// </summary>
            [EnumMember(Value = "C45")]
            C45Enum = 308,
            
            /// <summary>
            /// Enum C46Enum for C46
            /// </summary>
            [EnumMember(Value = "C46")]
            C46Enum = 309,
            
            /// <summary>
            /// Enum C47Enum for C47
            /// </summary>
            [EnumMember(Value = "C47")]
            C47Enum = 310,
            
            /// <summary>
            /// Enum C48Enum for C48
            /// </summary>
            [EnumMember(Value = "C48")]
            C48Enum = 311,
            
            /// <summary>
            /// Enum C49Enum for C49
            /// </summary>
            [EnumMember(Value = "C49")]
            C49Enum = 312,
            
            /// <summary>
            /// Enum C50Enum for C50
            /// </summary>
            [EnumMember(Value = "C50")]
            C50Enum = 313,
            
            /// <summary>
            /// Enum C51Enum for C51
            /// </summary>
            [EnumMember(Value = "C51")]
            C51Enum = 314,
            
            /// <summary>
            /// Enum C52Enum for C52
            /// </summary>
            [EnumMember(Value = "C52")]
            C52Enum = 315,
            
            /// <summary>
            /// Enum C53Enum for C53
            /// </summary>
            [EnumMember(Value = "C53")]
            C53Enum = 316,
            
            /// <summary>
            /// Enum C54Enum for C54
            /// </summary>
            [EnumMember(Value = "C54")]
            C54Enum = 317,
            
            /// <summary>
            /// Enum C55Enum for C55
            /// </summary>
            [EnumMember(Value = "C55")]
            C55Enum = 318,
            
            /// <summary>
            /// Enum C56Enum for C56
            /// </summary>
            [EnumMember(Value = "C56")]
            C56Enum = 319,
            
            /// <summary>
            /// Enum C57Enum for C57
            /// </summary>
            [EnumMember(Value = "C57")]
            C57Enum = 320,
            
            /// <summary>
            /// Enum C58Enum for C58
            /// </summary>
            [EnumMember(Value = "C58")]
            C58Enum = 321,
            
            /// <summary>
            /// Enum C59Enum for C59
            /// </summary>
            [EnumMember(Value = "C59")]
            C59Enum = 322,
            
            /// <summary>
            /// Enum C60Enum for C60
            /// </summary>
            [EnumMember(Value = "C60")]
            C60Enum = 323,
            
            /// <summary>
            /// Enum C61Enum for C61
            /// </summary>
            [EnumMember(Value = "C61")]
            C61Enum = 324,
            
            /// <summary>
            /// Enum C62Enum for C62
            /// </summary>
            [EnumMember(Value = "C62")]
            C62Enum = 325,
            
            /// <summary>
            /// Enum C63Enum for C63
            /// </summary>
            [EnumMember(Value = "C63")]
            C63Enum = 326,
            
            /// <summary>
            /// Enum C64Enum for C64
            /// </summary>
            [EnumMember(Value = "C64")]
            C64Enum = 327,
            
            /// <summary>
            /// Enum C65Enum for C65
            /// </summary>
            [EnumMember(Value = "C65")]
            C65Enum = 328,
            
            /// <summary>
            /// Enum C66Enum for C66
            /// </summary>
            [EnumMember(Value = "C66")]
            C66Enum = 329,
            
            /// <summary>
            /// Enum C67Enum for C67
            /// </summary>
            [EnumMember(Value = "C67")]
            C67Enum = 330,
            
            /// <summary>
            /// Enum C68Enum for C68
            /// </summary>
            [EnumMember(Value = "C68")]
            C68Enum = 331,
            
            /// <summary>
            /// Enum C69Enum for C69
            /// </summary>
            [EnumMember(Value = "C69")]
            C69Enum = 332,
            
            /// <summary>
            /// Enum C7Enum for C7
            /// </summary>
            [EnumMember(Value = "C7")]
            C7Enum = 333,
            
            /// <summary>
            /// Enum C70Enum for C70
            /// </summary>
            [EnumMember(Value = "C70")]
            C70Enum = 334,
            
            /// <summary>
            /// Enum C71Enum for C71
            /// </summary>
            [EnumMember(Value = "C71")]
            C71Enum = 335,
            
            /// <summary>
            /// Enum C72Enum for C72
            /// </summary>
            [EnumMember(Value = "C72")]
            C72Enum = 336,
            
            /// <summary>
            /// Enum C73Enum for C73
            /// </summary>
            [EnumMember(Value = "C73")]
            C73Enum = 337,
            
            /// <summary>
            /// Enum C74Enum for C74
            /// </summary>
            [EnumMember(Value = "C74")]
            C74Enum = 338,
            
            /// <summary>
            /// Enum C75Enum for C75
            /// </summary>
            [EnumMember(Value = "C75")]
            C75Enum = 339,
            
            /// <summary>
            /// Enum C76Enum for C76
            /// </summary>
            [EnumMember(Value = "C76")]
            C76Enum = 340,
            
            /// <summary>
            /// Enum C78Enum for C78
            /// </summary>
            [EnumMember(Value = "C78")]
            C78Enum = 341,
            
            /// <summary>
            /// Enum C79Enum for C79
            /// </summary>
            [EnumMember(Value = "C79")]
            C79Enum = 342,
            
            /// <summary>
            /// Enum C8Enum for C8
            /// </summary>
            [EnumMember(Value = "C8")]
            C8Enum = 343,
            
            /// <summary>
            /// Enum C80Enum for C80
            /// </summary>
            [EnumMember(Value = "C80")]
            C80Enum = 344,
            
            /// <summary>
            /// Enum C81Enum for C81
            /// </summary>
            [EnumMember(Value = "C81")]
            C81Enum = 345,
            
            /// <summary>
            /// Enum C82Enum for C82
            /// </summary>
            [EnumMember(Value = "C82")]
            C82Enum = 346,
            
            /// <summary>
            /// Enum C83Enum for C83
            /// </summary>
            [EnumMember(Value = "C83")]
            C83Enum = 347,
            
            /// <summary>
            /// Enum C84Enum for C84
            /// </summary>
            [EnumMember(Value = "C84")]
            C84Enum = 348,
            
            /// <summary>
            /// Enum C85Enum for C85
            /// </summary>
            [EnumMember(Value = "C85")]
            C85Enum = 349,
            
            /// <summary>
            /// Enum C86Enum for C86
            /// </summary>
            [EnumMember(Value = "C86")]
            C86Enum = 350,
            
            /// <summary>
            /// Enum C87Enum for C87
            /// </summary>
            [EnumMember(Value = "C87")]
            C87Enum = 351,
            
            /// <summary>
            /// Enum C88Enum for C88
            /// </summary>
            [EnumMember(Value = "C88")]
            C88Enum = 352,
            
            /// <summary>
            /// Enum C89Enum for C89
            /// </summary>
            [EnumMember(Value = "C89")]
            C89Enum = 353,
            
            /// <summary>
            /// Enum C9Enum for C9
            /// </summary>
            [EnumMember(Value = "C9")]
            C9Enum = 354,
            
            /// <summary>
            /// Enum C90Enum for C90
            /// </summary>
            [EnumMember(Value = "C90")]
            C90Enum = 355,
            
            /// <summary>
            /// Enum C91Enum for C91
            /// </summary>
            [EnumMember(Value = "C91")]
            C91Enum = 356,
            
            /// <summary>
            /// Enum C92Enum for C92
            /// </summary>
            [EnumMember(Value = "C92")]
            C92Enum = 357,
            
            /// <summary>
            /// Enum C93Enum for C93
            /// </summary>
            [EnumMember(Value = "C93")]
            C93Enum = 358,
            
            /// <summary>
            /// Enum C94Enum for C94
            /// </summary>
            [EnumMember(Value = "C94")]
            C94Enum = 359,
            
            /// <summary>
            /// Enum C95Enum for C95
            /// </summary>
            [EnumMember(Value = "C95")]
            C95Enum = 360,
            
            /// <summary>
            /// Enum C96Enum for C96
            /// </summary>
            [EnumMember(Value = "C96")]
            C96Enum = 361,
            
            /// <summary>
            /// Enum C97Enum for C97
            /// </summary>
            [EnumMember(Value = "C97")]
            C97Enum = 362,
            
            /// <summary>
            /// Enum C99Enum for C99
            /// </summary>
            [EnumMember(Value = "C99")]
            C99Enum = 363,
            
            /// <summary>
            /// Enum CCTEnum for CCT
            /// </summary>
            [EnumMember(Value = "CCT")]
            CCTEnum = 364,
            
            /// <summary>
            /// Enum CDLEnum for CDL
            /// </summary>
            [EnumMember(Value = "CDL")]
            CDLEnum = 365,
            
            /// <summary>
            /// Enum CELEnum for CEL
            /// </summary>
            [EnumMember(Value = "CEL")]
            CELEnum = 366,
            
            /// <summary>
            /// Enum CENEnum for CEN
            /// </summary>
            [EnumMember(Value = "CEN")]
            CENEnum = 367,
            
            /// <summary>
            /// Enum CGEnum for CG
            /// </summary>
            [EnumMember(Value = "CG")]
            CGEnum = 368,
            
            /// <summary>
            /// Enum CGMEnum for CGM
            /// </summary>
            [EnumMember(Value = "CGM")]
            CGMEnum = 369,
            
            /// <summary>
            /// Enum CKGEnum for CKG
            /// </summary>
            [EnumMember(Value = "CKG")]
            CKGEnum = 370,
            
            /// <summary>
            /// Enum CLFEnum for CLF
            /// </summary>
            [EnumMember(Value = "CLF")]
            CLFEnum = 371,
            
            /// <summary>
            /// Enum CLTEnum for CLT
            /// </summary>
            [EnumMember(Value = "CLT")]
            CLTEnum = 372,
            
            /// <summary>
            /// Enum CMKEnum for CMK
            /// </summary>
            [EnumMember(Value = "CMK")]
            CMKEnum = 373,
            
            /// <summary>
            /// Enum CMQEnum for CMQ
            /// </summary>
            [EnumMember(Value = "CMQ")]
            CMQEnum = 374,
            
            /// <summary>
            /// Enum CMTEnum for CMT
            /// </summary>
            [EnumMember(Value = "CMT")]
            CMTEnum = 375,
            
            /// <summary>
            /// Enum CNPEnum for CNP
            /// </summary>
            [EnumMember(Value = "CNP")]
            CNPEnum = 376,
            
            /// <summary>
            /// Enum CNTEnum for CNT
            /// </summary>
            [EnumMember(Value = "CNT")]
            CNTEnum = 377,
            
            /// <summary>
            /// Enum COUEnum for COU
            /// </summary>
            [EnumMember(Value = "COU")]
            COUEnum = 378,
            
            /// <summary>
            /// Enum CTGEnum for CTG
            /// </summary>
            [EnumMember(Value = "CTG")]
            CTGEnum = 379,
            
            /// <summary>
            /// Enum CTMEnum for CTM
            /// </summary>
            [EnumMember(Value = "CTM")]
            CTMEnum = 380,
            
            /// <summary>
            /// Enum CTNEnum for CTN
            /// </summary>
            [EnumMember(Value = "CTN")]
            CTNEnum = 381,
            
            /// <summary>
            /// Enum CUREnum for CUR
            /// </summary>
            [EnumMember(Value = "CUR")]
            CUREnum = 382,
            
            /// <summary>
            /// Enum CWAEnum for CWA
            /// </summary>
            [EnumMember(Value = "CWA")]
            CWAEnum = 383,
            
            /// <summary>
            /// Enum CWIEnum for CWI
            /// </summary>
            [EnumMember(Value = "CWI")]
            CWIEnum = 384,
            
            /// <summary>
            /// Enum D03Enum for D03
            /// </summary>
            [EnumMember(Value = "D03")]
            D03Enum = 385,
            
            /// <summary>
            /// Enum D04Enum for D04
            /// </summary>
            [EnumMember(Value = "D04")]
            D04Enum = 386,
            
            /// <summary>
            /// Enum D1Enum for D1
            /// </summary>
            [EnumMember(Value = "D1")]
            D1Enum = 387,
            
            /// <summary>
            /// Enum D10Enum for D10
            /// </summary>
            [EnumMember(Value = "D10")]
            D10Enum = 388,
            
            /// <summary>
            /// Enum D11Enum for D11
            /// </summary>
            [EnumMember(Value = "D11")]
            D11Enum = 389,
            
            /// <summary>
            /// Enum D12Enum for D12
            /// </summary>
            [EnumMember(Value = "D12")]
            D12Enum = 390,
            
            /// <summary>
            /// Enum D13Enum for D13
            /// </summary>
            [EnumMember(Value = "D13")]
            D13Enum = 391,
            
            /// <summary>
            /// Enum D15Enum for D15
            /// </summary>
            [EnumMember(Value = "D15")]
            D15Enum = 392,
            
            /// <summary>
            /// Enum D16Enum for D16
            /// </summary>
            [EnumMember(Value = "D16")]
            D16Enum = 393,
            
            /// <summary>
            /// Enum D17Enum for D17
            /// </summary>
            [EnumMember(Value = "D17")]
            D17Enum = 394,
            
            /// <summary>
            /// Enum D18Enum for D18
            /// </summary>
            [EnumMember(Value = "D18")]
            D18Enum = 395,
            
            /// <summary>
            /// Enum D19Enum for D19
            /// </summary>
            [EnumMember(Value = "D19")]
            D19Enum = 396,
            
            /// <summary>
            /// Enum D2Enum for D2
            /// </summary>
            [EnumMember(Value = "D2")]
            D2Enum = 397,
            
            /// <summary>
            /// Enum D20Enum for D20
            /// </summary>
            [EnumMember(Value = "D20")]
            D20Enum = 398,
            
            /// <summary>
            /// Enum D21Enum for D21
            /// </summary>
            [EnumMember(Value = "D21")]
            D21Enum = 399,
            
            /// <summary>
            /// Enum D22Enum for D22
            /// </summary>
            [EnumMember(Value = "D22")]
            D22Enum = 400,
            
            /// <summary>
            /// Enum D23Enum for D23
            /// </summary>
            [EnumMember(Value = "D23")]
            D23Enum = 401,
            
            /// <summary>
            /// Enum D24Enum for D24
            /// </summary>
            [EnumMember(Value = "D24")]
            D24Enum = 402,
            
            /// <summary>
            /// Enum D25Enum for D25
            /// </summary>
            [EnumMember(Value = "D25")]
            D25Enum = 403,
            
            /// <summary>
            /// Enum D26Enum for D26
            /// </summary>
            [EnumMember(Value = "D26")]
            D26Enum = 404,
            
            /// <summary>
            /// Enum D27Enum for D27
            /// </summary>
            [EnumMember(Value = "D27")]
            D27Enum = 405,
            
            /// <summary>
            /// Enum D29Enum for D29
            /// </summary>
            [EnumMember(Value = "D29")]
            D29Enum = 406,
            
            /// <summary>
            /// Enum D30Enum for D30
            /// </summary>
            [EnumMember(Value = "D30")]
            D30Enum = 407,
            
            /// <summary>
            /// Enum D31Enum for D31
            /// </summary>
            [EnumMember(Value = "D31")]
            D31Enum = 408,
            
            /// <summary>
            /// Enum D32Enum for D32
            /// </summary>
            [EnumMember(Value = "D32")]
            D32Enum = 409,
            
            /// <summary>
            /// Enum D33Enum for D33
            /// </summary>
            [EnumMember(Value = "D33")]
            D33Enum = 410,
            
            /// <summary>
            /// Enum D34Enum for D34
            /// </summary>
            [EnumMember(Value = "D34")]
            D34Enum = 411,
            
            /// <summary>
            /// Enum D36Enum for D36
            /// </summary>
            [EnumMember(Value = "D36")]
            D36Enum = 412,
            
            /// <summary>
            /// Enum D41Enum for D41
            /// </summary>
            [EnumMember(Value = "D41")]
            D41Enum = 413,
            
            /// <summary>
            /// Enum D42Enum for D42
            /// </summary>
            [EnumMember(Value = "D42")]
            D42Enum = 414,
            
            /// <summary>
            /// Enum D43Enum for D43
            /// </summary>
            [EnumMember(Value = "D43")]
            D43Enum = 415,
            
            /// <summary>
            /// Enum D44Enum for D44
            /// </summary>
            [EnumMember(Value = "D44")]
            D44Enum = 416,
            
            /// <summary>
            /// Enum D45Enum for D45
            /// </summary>
            [EnumMember(Value = "D45")]
            D45Enum = 417,
            
            /// <summary>
            /// Enum D46Enum for D46
            /// </summary>
            [EnumMember(Value = "D46")]
            D46Enum = 418,
            
            /// <summary>
            /// Enum D47Enum for D47
            /// </summary>
            [EnumMember(Value = "D47")]
            D47Enum = 419,
            
            /// <summary>
            /// Enum D48Enum for D48
            /// </summary>
            [EnumMember(Value = "D48")]
            D48Enum = 420,
            
            /// <summary>
            /// Enum D49Enum for D49
            /// </summary>
            [EnumMember(Value = "D49")]
            D49Enum = 421,
            
            /// <summary>
            /// Enum D5Enum for D5
            /// </summary>
            [EnumMember(Value = "D5")]
            D5Enum = 422,
            
            /// <summary>
            /// Enum D50Enum for D50
            /// </summary>
            [EnumMember(Value = "D50")]
            D50Enum = 423,
            
            /// <summary>
            /// Enum D51Enum for D51
            /// </summary>
            [EnumMember(Value = "D51")]
            D51Enum = 424,
            
            /// <summary>
            /// Enum D52Enum for D52
            /// </summary>
            [EnumMember(Value = "D52")]
            D52Enum = 425,
            
            /// <summary>
            /// Enum D53Enum for D53
            /// </summary>
            [EnumMember(Value = "D53")]
            D53Enum = 426,
            
            /// <summary>
            /// Enum D54Enum for D54
            /// </summary>
            [EnumMember(Value = "D54")]
            D54Enum = 427,
            
            /// <summary>
            /// Enum D55Enum for D55
            /// </summary>
            [EnumMember(Value = "D55")]
            D55Enum = 428,
            
            /// <summary>
            /// Enum D56Enum for D56
            /// </summary>
            [EnumMember(Value = "D56")]
            D56Enum = 429,
            
            /// <summary>
            /// Enum D57Enum for D57
            /// </summary>
            [EnumMember(Value = "D57")]
            D57Enum = 430,
            
            /// <summary>
            /// Enum D58Enum for D58
            /// </summary>
            [EnumMember(Value = "D58")]
            D58Enum = 431,
            
            /// <summary>
            /// Enum D59Enum for D59
            /// </summary>
            [EnumMember(Value = "D59")]
            D59Enum = 432,
            
            /// <summary>
            /// Enum D6Enum for D6
            /// </summary>
            [EnumMember(Value = "D6")]
            D6Enum = 433,
            
            /// <summary>
            /// Enum D60Enum for D60
            /// </summary>
            [EnumMember(Value = "D60")]
            D60Enum = 434,
            
            /// <summary>
            /// Enum D61Enum for D61
            /// </summary>
            [EnumMember(Value = "D61")]
            D61Enum = 435,
            
            /// <summary>
            /// Enum D62Enum for D62
            /// </summary>
            [EnumMember(Value = "D62")]
            D62Enum = 436,
            
            /// <summary>
            /// Enum D63Enum for D63
            /// </summary>
            [EnumMember(Value = "D63")]
            D63Enum = 437,
            
            /// <summary>
            /// Enum D65Enum for D65
            /// </summary>
            [EnumMember(Value = "D65")]
            D65Enum = 438,
            
            /// <summary>
            /// Enum D68Enum for D68
            /// </summary>
            [EnumMember(Value = "D68")]
            D68Enum = 439,
            
            /// <summary>
            /// Enum D69Enum for D69
            /// </summary>
            [EnumMember(Value = "D69")]
            D69Enum = 440,
            
            /// <summary>
            /// Enum D73Enum for D73
            /// </summary>
            [EnumMember(Value = "D73")]
            D73Enum = 441,
            
            /// <summary>
            /// Enum D74Enum for D74
            /// </summary>
            [EnumMember(Value = "D74")]
            D74Enum = 442,
            
            /// <summary>
            /// Enum D77Enum for D77
            /// </summary>
            [EnumMember(Value = "D77")]
            D77Enum = 443,
            
            /// <summary>
            /// Enum D78Enum for D78
            /// </summary>
            [EnumMember(Value = "D78")]
            D78Enum = 444,
            
            /// <summary>
            /// Enum D80Enum for D80
            /// </summary>
            [EnumMember(Value = "D80")]
            D80Enum = 445,
            
            /// <summary>
            /// Enum D81Enum for D81
            /// </summary>
            [EnumMember(Value = "D81")]
            D81Enum = 446,
            
            /// <summary>
            /// Enum D82Enum for D82
            /// </summary>
            [EnumMember(Value = "D82")]
            D82Enum = 447,
            
            /// <summary>
            /// Enum D83Enum for D83
            /// </summary>
            [EnumMember(Value = "D83")]
            D83Enum = 448,
            
            /// <summary>
            /// Enum D85Enum for D85
            /// </summary>
            [EnumMember(Value = "D85")]
            D85Enum = 449,
            
            /// <summary>
            /// Enum D86Enum for D86
            /// </summary>
            [EnumMember(Value = "D86")]
            D86Enum = 450,
            
            /// <summary>
            /// Enum D87Enum for D87
            /// </summary>
            [EnumMember(Value = "D87")]
            D87Enum = 451,
            
            /// <summary>
            /// Enum D88Enum for D88
            /// </summary>
            [EnumMember(Value = "D88")]
            D88Enum = 452,
            
            /// <summary>
            /// Enum D89Enum for D89
            /// </summary>
            [EnumMember(Value = "D89")]
            D89Enum = 453,
            
            /// <summary>
            /// Enum D91Enum for D91
            /// </summary>
            [EnumMember(Value = "D91")]
            D91Enum = 454,
            
            /// <summary>
            /// Enum D93Enum for D93
            /// </summary>
            [EnumMember(Value = "D93")]
            D93Enum = 455,
            
            /// <summary>
            /// Enum D94Enum for D94
            /// </summary>
            [EnumMember(Value = "D94")]
            D94Enum = 456,
            
            /// <summary>
            /// Enum D95Enum for D95
            /// </summary>
            [EnumMember(Value = "D95")]
            D95Enum = 457,
            
            /// <summary>
            /// Enum DAAEnum for DAA
            /// </summary>
            [EnumMember(Value = "DAA")]
            DAAEnum = 458,
            
            /// <summary>
            /// Enum DADEnum for DAD
            /// </summary>
            [EnumMember(Value = "DAD")]
            DADEnum = 459,
            
            /// <summary>
            /// Enum DAYEnum for DAY
            /// </summary>
            [EnumMember(Value = "DAY")]
            DAYEnum = 460,
            
            /// <summary>
            /// Enum DBEnum for DB
            /// </summary>
            [EnumMember(Value = "DB")]
            DBEnum = 461,
            
            /// <summary>
            /// Enum DDEnum for DD
            /// </summary>
            [EnumMember(Value = "DD")]
            DDEnum = 462,
            
            /// <summary>
            /// Enum DECEnum for DEC
            /// </summary>
            [EnumMember(Value = "DEC")]
            DECEnum = 463,
            
            /// <summary>
            /// Enum DGEnum for DG
            /// </summary>
            [EnumMember(Value = "DG")]
            DGEnum = 464,
            
            /// <summary>
            /// Enum DJEnum for DJ
            /// </summary>
            [EnumMember(Value = "DJ")]
            DJEnum = 465,
            
            /// <summary>
            /// Enum DLTEnum for DLT
            /// </summary>
            [EnumMember(Value = "DLT")]
            DLTEnum = 466,
            
            /// <summary>
            /// Enum DMAEnum for DMA
            /// </summary>
            [EnumMember(Value = "DMA")]
            DMAEnum = 467,
            
            /// <summary>
            /// Enum DMKEnum for DMK
            /// </summary>
            [EnumMember(Value = "DMK")]
            DMKEnum = 468,
            
            /// <summary>
            /// Enum DMOEnum for DMO
            /// </summary>
            [EnumMember(Value = "DMO")]
            DMOEnum = 469,
            
            /// <summary>
            /// Enum DMQEnum for DMQ
            /// </summary>
            [EnumMember(Value = "DMQ")]
            DMQEnum = 470,
            
            /// <summary>
            /// Enum DMTEnum for DMT
            /// </summary>
            [EnumMember(Value = "DMT")]
            DMTEnum = 471,
            
            /// <summary>
            /// Enum DNEnum for DN
            /// </summary>
            [EnumMember(Value = "DN")]
            DNEnum = 472,
            
            /// <summary>
            /// Enum DPCEnum for DPC
            /// </summary>
            [EnumMember(Value = "DPC")]
            DPCEnum = 473,
            
            /// <summary>
            /// Enum DPREnum for DPR
            /// </summary>
            [EnumMember(Value = "DPR")]
            DPREnum = 474,
            
            /// <summary>
            /// Enum DPTEnum for DPT
            /// </summary>
            [EnumMember(Value = "DPT")]
            DPTEnum = 475,
            
            /// <summary>
            /// Enum DRAEnum for DRA
            /// </summary>
            [EnumMember(Value = "DRA")]
            DRAEnum = 476,
            
            /// <summary>
            /// Enum DRIEnum for DRI
            /// </summary>
            [EnumMember(Value = "DRI")]
            DRIEnum = 477,
            
            /// <summary>
            /// Enum DRLEnum for DRL
            /// </summary>
            [EnumMember(Value = "DRL")]
            DRLEnum = 478,
            
            /// <summary>
            /// Enum DTEnum for DT
            /// </summary>
            [EnumMember(Value = "DT")]
            DTEnum = 479,
            
            /// <summary>
            /// Enum DTNEnum for DTN
            /// </summary>
            [EnumMember(Value = "DTN")]
            DTNEnum = 480,
            
            /// <summary>
            /// Enum DWTEnum for DWT
            /// </summary>
            [EnumMember(Value = "DWT")]
            DWTEnum = 481,
            
            /// <summary>
            /// Enum DZNEnum for DZN
            /// </summary>
            [EnumMember(Value = "DZN")]
            DZNEnum = 482,
            
            /// <summary>
            /// Enum DZPEnum for DZP
            /// </summary>
            [EnumMember(Value = "DZP")]
            DZPEnum = 483,
            
            /// <summary>
            /// Enum E01Enum for E01
            /// </summary>
            [EnumMember(Value = "E01")]
            E01Enum = 484,
            
            /// <summary>
            /// Enum E07Enum for E07
            /// </summary>
            [EnumMember(Value = "E07")]
            E07Enum = 485,
            
            /// <summary>
            /// Enum E08Enum for E08
            /// </summary>
            [EnumMember(Value = "E08")]
            E08Enum = 486,
            
            /// <summary>
            /// Enum E09Enum for E09
            /// </summary>
            [EnumMember(Value = "E09")]
            E09Enum = 487,
            
            /// <summary>
            /// Enum E10Enum for E10
            /// </summary>
            [EnumMember(Value = "E10")]
            E10Enum = 488,
            
            /// <summary>
            /// Enum E12Enum for E12
            /// </summary>
            [EnumMember(Value = "E12")]
            E12Enum = 489,
            
            /// <summary>
            /// Enum E14Enum for E14
            /// </summary>
            [EnumMember(Value = "E14")]
            E14Enum = 490,
            
            /// <summary>
            /// Enum E15Enum for E15
            /// </summary>
            [EnumMember(Value = "E15")]
            E15Enum = 491,
            
            /// <summary>
            /// Enum E16Enum for E16
            /// </summary>
            [EnumMember(Value = "E16")]
            E16Enum = 492,
            
            /// <summary>
            /// Enum E17Enum for E17
            /// </summary>
            [EnumMember(Value = "E17")]
            E17Enum = 493,
            
            /// <summary>
            /// Enum E18Enum for E18
            /// </summary>
            [EnumMember(Value = "E18")]
            E18Enum = 494,
            
            /// <summary>
            /// Enum E19Enum for E19
            /// </summary>
            [EnumMember(Value = "E19")]
            E19Enum = 495,
            
            /// <summary>
            /// Enum E20Enum for E20
            /// </summary>
            [EnumMember(Value = "E20")]
            E20Enum = 496,
            
            /// <summary>
            /// Enum E21Enum for E21
            /// </summary>
            [EnumMember(Value = "E21")]
            E21Enum = 497,
            
            /// <summary>
            /// Enum E22Enum for E22
            /// </summary>
            [EnumMember(Value = "E22")]
            E22Enum = 498,
            
            /// <summary>
            /// Enum E23Enum for E23
            /// </summary>
            [EnumMember(Value = "E23")]
            E23Enum = 499,
            
            /// <summary>
            /// Enum E25Enum for E25
            /// </summary>
            [EnumMember(Value = "E25")]
            E25Enum = 500,
            
            /// <summary>
            /// Enum E27Enum for E27
            /// </summary>
            [EnumMember(Value = "E27")]
            E27Enum = 501,
            
            /// <summary>
            /// Enum E28Enum for E28
            /// </summary>
            [EnumMember(Value = "E28")]
            E28Enum = 502,
            
            /// <summary>
            /// Enum E30Enum for E30
            /// </summary>
            [EnumMember(Value = "E30")]
            E30Enum = 503,
            
            /// <summary>
            /// Enum E31Enum for E31
            /// </summary>
            [EnumMember(Value = "E31")]
            E31Enum = 504,
            
            /// <summary>
            /// Enum E32Enum for E32
            /// </summary>
            [EnumMember(Value = "E32")]
            E32Enum = 505,
            
            /// <summary>
            /// Enum E33Enum for E33
            /// </summary>
            [EnumMember(Value = "E33")]
            E33Enum = 506,
            
            /// <summary>
            /// Enum E34Enum for E34
            /// </summary>
            [EnumMember(Value = "E34")]
            E34Enum = 507,
            
            /// <summary>
            /// Enum E35Enum for E35
            /// </summary>
            [EnumMember(Value = "E35")]
            E35Enum = 508,
            
            /// <summary>
            /// Enum E36Enum for E36
            /// </summary>
            [EnumMember(Value = "E36")]
            E36Enum = 509,
            
            /// <summary>
            /// Enum E37Enum for E37
            /// </summary>
            [EnumMember(Value = "E37")]
            E37Enum = 510,
            
            /// <summary>
            /// Enum E38Enum for E38
            /// </summary>
            [EnumMember(Value = "E38")]
            E38Enum = 511,
            
            /// <summary>
            /// Enum E39Enum for E39
            /// </summary>
            [EnumMember(Value = "E39")]
            E39Enum = 512,
            
            /// <summary>
            /// Enum E4Enum for E4
            /// </summary>
            [EnumMember(Value = "E4")]
            E4Enum = 513,
            
            /// <summary>
            /// Enum E40Enum for E40
            /// </summary>
            [EnumMember(Value = "E40")]
            E40Enum = 514,
            
            /// <summary>
            /// Enum E41Enum for E41
            /// </summary>
            [EnumMember(Value = "E41")]
            E41Enum = 515,
            
            /// <summary>
            /// Enum E42Enum for E42
            /// </summary>
            [EnumMember(Value = "E42")]
            E42Enum = 516,
            
            /// <summary>
            /// Enum E43Enum for E43
            /// </summary>
            [EnumMember(Value = "E43")]
            E43Enum = 517,
            
            /// <summary>
            /// Enum E44Enum for E44
            /// </summary>
            [EnumMember(Value = "E44")]
            E44Enum = 518,
            
            /// <summary>
            /// Enum E45Enum for E45
            /// </summary>
            [EnumMember(Value = "E45")]
            E45Enum = 519,
            
            /// <summary>
            /// Enum E46Enum for E46
            /// </summary>
            [EnumMember(Value = "E46")]
            E46Enum = 520,
            
            /// <summary>
            /// Enum E47Enum for E47
            /// </summary>
            [EnumMember(Value = "E47")]
            E47Enum = 521,
            
            /// <summary>
            /// Enum E48Enum for E48
            /// </summary>
            [EnumMember(Value = "E48")]
            E48Enum = 522,
            
            /// <summary>
            /// Enum E49Enum for E49
            /// </summary>
            [EnumMember(Value = "E49")]
            E49Enum = 523,
            
            /// <summary>
            /// Enum E50Enum for E50
            /// </summary>
            [EnumMember(Value = "E50")]
            E50Enum = 524,
            
            /// <summary>
            /// Enum E51Enum for E51
            /// </summary>
            [EnumMember(Value = "E51")]
            E51Enum = 525,
            
            /// <summary>
            /// Enum E52Enum for E52
            /// </summary>
            [EnumMember(Value = "E52")]
            E52Enum = 526,
            
            /// <summary>
            /// Enum E53Enum for E53
            /// </summary>
            [EnumMember(Value = "E53")]
            E53Enum = 527,
            
            /// <summary>
            /// Enum E54Enum for E54
            /// </summary>
            [EnumMember(Value = "E54")]
            E54Enum = 528,
            
            /// <summary>
            /// Enum E55Enum for E55
            /// </summary>
            [EnumMember(Value = "E55")]
            E55Enum = 529,
            
            /// <summary>
            /// Enum E56Enum for E56
            /// </summary>
            [EnumMember(Value = "E56")]
            E56Enum = 530,
            
            /// <summary>
            /// Enum E57Enum for E57
            /// </summary>
            [EnumMember(Value = "E57")]
            E57Enum = 531,
            
            /// <summary>
            /// Enum E58Enum for E58
            /// </summary>
            [EnumMember(Value = "E58")]
            E58Enum = 532,
            
            /// <summary>
            /// Enum E59Enum for E59
            /// </summary>
            [EnumMember(Value = "E59")]
            E59Enum = 533,
            
            /// <summary>
            /// Enum E60Enum for E60
            /// </summary>
            [EnumMember(Value = "E60")]
            E60Enum = 534,
            
            /// <summary>
            /// Enum E61Enum for E61
            /// </summary>
            [EnumMember(Value = "E61")]
            E61Enum = 535,
            
            /// <summary>
            /// Enum E62Enum for E62
            /// </summary>
            [EnumMember(Value = "E62")]
            E62Enum = 536,
            
            /// <summary>
            /// Enum E63Enum for E63
            /// </summary>
            [EnumMember(Value = "E63")]
            E63Enum = 537,
            
            /// <summary>
            /// Enum E64Enum for E64
            /// </summary>
            [EnumMember(Value = "E64")]
            E64Enum = 538,
            
            /// <summary>
            /// Enum E65Enum for E65
            /// </summary>
            [EnumMember(Value = "E65")]
            E65Enum = 539,
            
            /// <summary>
            /// Enum E66Enum for E66
            /// </summary>
            [EnumMember(Value = "E66")]
            E66Enum = 540,
            
            /// <summary>
            /// Enum E67Enum for E67
            /// </summary>
            [EnumMember(Value = "E67")]
            E67Enum = 541,
            
            /// <summary>
            /// Enum E68Enum for E68
            /// </summary>
            [EnumMember(Value = "E68")]
            E68Enum = 542,
            
            /// <summary>
            /// Enum E69Enum for E69
            /// </summary>
            [EnumMember(Value = "E69")]
            E69Enum = 543,
            
            /// <summary>
            /// Enum E70Enum for E70
            /// </summary>
            [EnumMember(Value = "E70")]
            E70Enum = 544,
            
            /// <summary>
            /// Enum E71Enum for E71
            /// </summary>
            [EnumMember(Value = "E71")]
            E71Enum = 545,
            
            /// <summary>
            /// Enum E72Enum for E72
            /// </summary>
            [EnumMember(Value = "E72")]
            E72Enum = 546,
            
            /// <summary>
            /// Enum E73Enum for E73
            /// </summary>
            [EnumMember(Value = "E73")]
            E73Enum = 547,
            
            /// <summary>
            /// Enum E74Enum for E74
            /// </summary>
            [EnumMember(Value = "E74")]
            E74Enum = 548,
            
            /// <summary>
            /// Enum E75Enum for E75
            /// </summary>
            [EnumMember(Value = "E75")]
            E75Enum = 549,
            
            /// <summary>
            /// Enum E76Enum for E76
            /// </summary>
            [EnumMember(Value = "E76")]
            E76Enum = 550,
            
            /// <summary>
            /// Enum E77Enum for E77
            /// </summary>
            [EnumMember(Value = "E77")]
            E77Enum = 551,
            
            /// <summary>
            /// Enum E78Enum for E78
            /// </summary>
            [EnumMember(Value = "E78")]
            E78Enum = 552,
            
            /// <summary>
            /// Enum E79Enum for E79
            /// </summary>
            [EnumMember(Value = "E79")]
            E79Enum = 553,
            
            /// <summary>
            /// Enum E80Enum for E80
            /// </summary>
            [EnumMember(Value = "E80")]
            E80Enum = 554,
            
            /// <summary>
            /// Enum E81Enum for E81
            /// </summary>
            [EnumMember(Value = "E81")]
            E81Enum = 555,
            
            /// <summary>
            /// Enum E82Enum for E82
            /// </summary>
            [EnumMember(Value = "E82")]
            E82Enum = 556,
            
            /// <summary>
            /// Enum E83Enum for E83
            /// </summary>
            [EnumMember(Value = "E83")]
            E83Enum = 557,
            
            /// <summary>
            /// Enum E84Enum for E84
            /// </summary>
            [EnumMember(Value = "E84")]
            E84Enum = 558,
            
            /// <summary>
            /// Enum E85Enum for E85
            /// </summary>
            [EnumMember(Value = "E85")]
            E85Enum = 559,
            
            /// <summary>
            /// Enum E86Enum for E86
            /// </summary>
            [EnumMember(Value = "E86")]
            E86Enum = 560,
            
            /// <summary>
            /// Enum E87Enum for E87
            /// </summary>
            [EnumMember(Value = "E87")]
            E87Enum = 561,
            
            /// <summary>
            /// Enum E88Enum for E88
            /// </summary>
            [EnumMember(Value = "E88")]
            E88Enum = 562,
            
            /// <summary>
            /// Enum E89Enum for E89
            /// </summary>
            [EnumMember(Value = "E89")]
            E89Enum = 563,
            
            /// <summary>
            /// Enum E90Enum for E90
            /// </summary>
            [EnumMember(Value = "E90")]
            E90Enum = 564,
            
            /// <summary>
            /// Enum E91Enum for E91
            /// </summary>
            [EnumMember(Value = "E91")]
            E91Enum = 565,
            
            /// <summary>
            /// Enum E92Enum for E92
            /// </summary>
            [EnumMember(Value = "E92")]
            E92Enum = 566,
            
            /// <summary>
            /// Enum E93Enum for E93
            /// </summary>
            [EnumMember(Value = "E93")]
            E93Enum = 567,
            
            /// <summary>
            /// Enum E94Enum for E94
            /// </summary>
            [EnumMember(Value = "E94")]
            E94Enum = 568,
            
            /// <summary>
            /// Enum E95Enum for E95
            /// </summary>
            [EnumMember(Value = "E95")]
            E95Enum = 569,
            
            /// <summary>
            /// Enum E96Enum for E96
            /// </summary>
            [EnumMember(Value = "E96")]
            E96Enum = 570,
            
            /// <summary>
            /// Enum E97Enum for E97
            /// </summary>
            [EnumMember(Value = "E97")]
            E97Enum = 571,
            
            /// <summary>
            /// Enum E98Enum for E98
            /// </summary>
            [EnumMember(Value = "E98")]
            E98Enum = 572,
            
            /// <summary>
            /// Enum E99Enum for E99
            /// </summary>
            [EnumMember(Value = "E99")]
            E99Enum = 573,
            
            /// <summary>
            /// Enum EAEnum for EA
            /// </summary>
            [EnumMember(Value = "EA")]
            EAEnum = 574,
            
            /// <summary>
            /// Enum EBEnum for EB
            /// </summary>
            [EnumMember(Value = "EB")]
            EBEnum = 575,
            
            /// <summary>
            /// Enum EQEnum for EQ
            /// </summary>
            [EnumMember(Value = "EQ")]
            EQEnum = 576,
            
            /// <summary>
            /// Enum F01Enum for F01
            /// </summary>
            [EnumMember(Value = "F01")]
            F01Enum = 577,
            
            /// <summary>
            /// Enum F02Enum for F02
            /// </summary>
            [EnumMember(Value = "F02")]
            F02Enum = 578,
            
            /// <summary>
            /// Enum F03Enum for F03
            /// </summary>
            [EnumMember(Value = "F03")]
            F03Enum = 579,
            
            /// <summary>
            /// Enum F04Enum for F04
            /// </summary>
            [EnumMember(Value = "F04")]
            F04Enum = 580,
            
            /// <summary>
            /// Enum F05Enum for F05
            /// </summary>
            [EnumMember(Value = "F05")]
            F05Enum = 581,
            
            /// <summary>
            /// Enum F06Enum for F06
            /// </summary>
            [EnumMember(Value = "F06")]
            F06Enum = 582,
            
            /// <summary>
            /// Enum F07Enum for F07
            /// </summary>
            [EnumMember(Value = "F07")]
            F07Enum = 583,
            
            /// <summary>
            /// Enum F08Enum for F08
            /// </summary>
            [EnumMember(Value = "F08")]
            F08Enum = 584,
            
            /// <summary>
            /// Enum F10Enum for F10
            /// </summary>
            [EnumMember(Value = "F10")]
            F10Enum = 585,
            
            /// <summary>
            /// Enum F11Enum for F11
            /// </summary>
            [EnumMember(Value = "F11")]
            F11Enum = 586,
            
            /// <summary>
            /// Enum F12Enum for F12
            /// </summary>
            [EnumMember(Value = "F12")]
            F12Enum = 587,
            
            /// <summary>
            /// Enum F13Enum for F13
            /// </summary>
            [EnumMember(Value = "F13")]
            F13Enum = 588,
            
            /// <summary>
            /// Enum F14Enum for F14
            /// </summary>
            [EnumMember(Value = "F14")]
            F14Enum = 589,
            
            /// <summary>
            /// Enum F15Enum for F15
            /// </summary>
            [EnumMember(Value = "F15")]
            F15Enum = 590,
            
            /// <summary>
            /// Enum F16Enum for F16
            /// </summary>
            [EnumMember(Value = "F16")]
            F16Enum = 591,
            
            /// <summary>
            /// Enum F17Enum for F17
            /// </summary>
            [EnumMember(Value = "F17")]
            F17Enum = 592,
            
            /// <summary>
            /// Enum F18Enum for F18
            /// </summary>
            [EnumMember(Value = "F18")]
            F18Enum = 593,
            
            /// <summary>
            /// Enum F19Enum for F19
            /// </summary>
            [EnumMember(Value = "F19")]
            F19Enum = 594,
            
            /// <summary>
            /// Enum F20Enum for F20
            /// </summary>
            [EnumMember(Value = "F20")]
            F20Enum = 595,
            
            /// <summary>
            /// Enum F21Enum for F21
            /// </summary>
            [EnumMember(Value = "F21")]
            F21Enum = 596,
            
            /// <summary>
            /// Enum F22Enum for F22
            /// </summary>
            [EnumMember(Value = "F22")]
            F22Enum = 597,
            
            /// <summary>
            /// Enum F23Enum for F23
            /// </summary>
            [EnumMember(Value = "F23")]
            F23Enum = 598,
            
            /// <summary>
            /// Enum F24Enum for F24
            /// </summary>
            [EnumMember(Value = "F24")]
            F24Enum = 599,
            
            /// <summary>
            /// Enum F25Enum for F25
            /// </summary>
            [EnumMember(Value = "F25")]
            F25Enum = 600,
            
            /// <summary>
            /// Enum F26Enum for F26
            /// </summary>
            [EnumMember(Value = "F26")]
            F26Enum = 601,
            
            /// <summary>
            /// Enum F27Enum for F27
            /// </summary>
            [EnumMember(Value = "F27")]
            F27Enum = 602,
            
            /// <summary>
            /// Enum F28Enum for F28
            /// </summary>
            [EnumMember(Value = "F28")]
            F28Enum = 603,
            
            /// <summary>
            /// Enum F29Enum for F29
            /// </summary>
            [EnumMember(Value = "F29")]
            F29Enum = 604,
            
            /// <summary>
            /// Enum F30Enum for F30
            /// </summary>
            [EnumMember(Value = "F30")]
            F30Enum = 605,
            
            /// <summary>
            /// Enum F31Enum for F31
            /// </summary>
            [EnumMember(Value = "F31")]
            F31Enum = 606,
            
            /// <summary>
            /// Enum F32Enum for F32
            /// </summary>
            [EnumMember(Value = "F32")]
            F32Enum = 607,
            
            /// <summary>
            /// Enum F33Enum for F33
            /// </summary>
            [EnumMember(Value = "F33")]
            F33Enum = 608,
            
            /// <summary>
            /// Enum F34Enum for F34
            /// </summary>
            [EnumMember(Value = "F34")]
            F34Enum = 609,
            
            /// <summary>
            /// Enum F35Enum for F35
            /// </summary>
            [EnumMember(Value = "F35")]
            F35Enum = 610,
            
            /// <summary>
            /// Enum F36Enum for F36
            /// </summary>
            [EnumMember(Value = "F36")]
            F36Enum = 611,
            
            /// <summary>
            /// Enum F37Enum for F37
            /// </summary>
            [EnumMember(Value = "F37")]
            F37Enum = 612,
            
            /// <summary>
            /// Enum F38Enum for F38
            /// </summary>
            [EnumMember(Value = "F38")]
            F38Enum = 613,
            
            /// <summary>
            /// Enum F39Enum for F39
            /// </summary>
            [EnumMember(Value = "F39")]
            F39Enum = 614,
            
            /// <summary>
            /// Enum F40Enum for F40
            /// </summary>
            [EnumMember(Value = "F40")]
            F40Enum = 615,
            
            /// <summary>
            /// Enum F41Enum for F41
            /// </summary>
            [EnumMember(Value = "F41")]
            F41Enum = 616,
            
            /// <summary>
            /// Enum F42Enum for F42
            /// </summary>
            [EnumMember(Value = "F42")]
            F42Enum = 617,
            
            /// <summary>
            /// Enum F43Enum for F43
            /// </summary>
            [EnumMember(Value = "F43")]
            F43Enum = 618,
            
            /// <summary>
            /// Enum F44Enum for F44
            /// </summary>
            [EnumMember(Value = "F44")]
            F44Enum = 619,
            
            /// <summary>
            /// Enum F45Enum for F45
            /// </summary>
            [EnumMember(Value = "F45")]
            F45Enum = 620,
            
            /// <summary>
            /// Enum F46Enum for F46
            /// </summary>
            [EnumMember(Value = "F46")]
            F46Enum = 621,
            
            /// <summary>
            /// Enum F47Enum for F47
            /// </summary>
            [EnumMember(Value = "F47")]
            F47Enum = 622,
            
            /// <summary>
            /// Enum F48Enum for F48
            /// </summary>
            [EnumMember(Value = "F48")]
            F48Enum = 623,
            
            /// <summary>
            /// Enum F49Enum for F49
            /// </summary>
            [EnumMember(Value = "F49")]
            F49Enum = 624,
            
            /// <summary>
            /// Enum F50Enum for F50
            /// </summary>
            [EnumMember(Value = "F50")]
            F50Enum = 625,
            
            /// <summary>
            /// Enum F51Enum for F51
            /// </summary>
            [EnumMember(Value = "F51")]
            F51Enum = 626,
            
            /// <summary>
            /// Enum F52Enum for F52
            /// </summary>
            [EnumMember(Value = "F52")]
            F52Enum = 627,
            
            /// <summary>
            /// Enum F53Enum for F53
            /// </summary>
            [EnumMember(Value = "F53")]
            F53Enum = 628,
            
            /// <summary>
            /// Enum F54Enum for F54
            /// </summary>
            [EnumMember(Value = "F54")]
            F54Enum = 629,
            
            /// <summary>
            /// Enum F55Enum for F55
            /// </summary>
            [EnumMember(Value = "F55")]
            F55Enum = 630,
            
            /// <summary>
            /// Enum F56Enum for F56
            /// </summary>
            [EnumMember(Value = "F56")]
            F56Enum = 631,
            
            /// <summary>
            /// Enum F57Enum for F57
            /// </summary>
            [EnumMember(Value = "F57")]
            F57Enum = 632,
            
            /// <summary>
            /// Enum F58Enum for F58
            /// </summary>
            [EnumMember(Value = "F58")]
            F58Enum = 633,
            
            /// <summary>
            /// Enum F59Enum for F59
            /// </summary>
            [EnumMember(Value = "F59")]
            F59Enum = 634,
            
            /// <summary>
            /// Enum F60Enum for F60
            /// </summary>
            [EnumMember(Value = "F60")]
            F60Enum = 635,
            
            /// <summary>
            /// Enum F61Enum for F61
            /// </summary>
            [EnumMember(Value = "F61")]
            F61Enum = 636,
            
            /// <summary>
            /// Enum F62Enum for F62
            /// </summary>
            [EnumMember(Value = "F62")]
            F62Enum = 637,
            
            /// <summary>
            /// Enum F63Enum for F63
            /// </summary>
            [EnumMember(Value = "F63")]
            F63Enum = 638,
            
            /// <summary>
            /// Enum F64Enum for F64
            /// </summary>
            [EnumMember(Value = "F64")]
            F64Enum = 639,
            
            /// <summary>
            /// Enum F65Enum for F65
            /// </summary>
            [EnumMember(Value = "F65")]
            F65Enum = 640,
            
            /// <summary>
            /// Enum F66Enum for F66
            /// </summary>
            [EnumMember(Value = "F66")]
            F66Enum = 641,
            
            /// <summary>
            /// Enum F67Enum for F67
            /// </summary>
            [EnumMember(Value = "F67")]
            F67Enum = 642,
            
            /// <summary>
            /// Enum F68Enum for F68
            /// </summary>
            [EnumMember(Value = "F68")]
            F68Enum = 643,
            
            /// <summary>
            /// Enum F69Enum for F69
            /// </summary>
            [EnumMember(Value = "F69")]
            F69Enum = 644,
            
            /// <summary>
            /// Enum F70Enum for F70
            /// </summary>
            [EnumMember(Value = "F70")]
            F70Enum = 645,
            
            /// <summary>
            /// Enum F71Enum for F71
            /// </summary>
            [EnumMember(Value = "F71")]
            F71Enum = 646,
            
            /// <summary>
            /// Enum F72Enum for F72
            /// </summary>
            [EnumMember(Value = "F72")]
            F72Enum = 647,
            
            /// <summary>
            /// Enum F73Enum for F73
            /// </summary>
            [EnumMember(Value = "F73")]
            F73Enum = 648,
            
            /// <summary>
            /// Enum F74Enum for F74
            /// </summary>
            [EnumMember(Value = "F74")]
            F74Enum = 649,
            
            /// <summary>
            /// Enum F75Enum for F75
            /// </summary>
            [EnumMember(Value = "F75")]
            F75Enum = 650,
            
            /// <summary>
            /// Enum F76Enum for F76
            /// </summary>
            [EnumMember(Value = "F76")]
            F76Enum = 651,
            
            /// <summary>
            /// Enum F77Enum for F77
            /// </summary>
            [EnumMember(Value = "F77")]
            F77Enum = 652,
            
            /// <summary>
            /// Enum F78Enum for F78
            /// </summary>
            [EnumMember(Value = "F78")]
            F78Enum = 653,
            
            /// <summary>
            /// Enum F79Enum for F79
            /// </summary>
            [EnumMember(Value = "F79")]
            F79Enum = 654,
            
            /// <summary>
            /// Enum F80Enum for F80
            /// </summary>
            [EnumMember(Value = "F80")]
            F80Enum = 655,
            
            /// <summary>
            /// Enum F81Enum for F81
            /// </summary>
            [EnumMember(Value = "F81")]
            F81Enum = 656,
            
            /// <summary>
            /// Enum F82Enum for F82
            /// </summary>
            [EnumMember(Value = "F82")]
            F82Enum = 657,
            
            /// <summary>
            /// Enum F83Enum for F83
            /// </summary>
            [EnumMember(Value = "F83")]
            F83Enum = 658,
            
            /// <summary>
            /// Enum F84Enum for F84
            /// </summary>
            [EnumMember(Value = "F84")]
            F84Enum = 659,
            
            /// <summary>
            /// Enum F85Enum for F85
            /// </summary>
            [EnumMember(Value = "F85")]
            F85Enum = 660,
            
            /// <summary>
            /// Enum F86Enum for F86
            /// </summary>
            [EnumMember(Value = "F86")]
            F86Enum = 661,
            
            /// <summary>
            /// Enum F87Enum for F87
            /// </summary>
            [EnumMember(Value = "F87")]
            F87Enum = 662,
            
            /// <summary>
            /// Enum F88Enum for F88
            /// </summary>
            [EnumMember(Value = "F88")]
            F88Enum = 663,
            
            /// <summary>
            /// Enum F89Enum for F89
            /// </summary>
            [EnumMember(Value = "F89")]
            F89Enum = 664,
            
            /// <summary>
            /// Enum F90Enum for F90
            /// </summary>
            [EnumMember(Value = "F90")]
            F90Enum = 665,
            
            /// <summary>
            /// Enum F91Enum for F91
            /// </summary>
            [EnumMember(Value = "F91")]
            F91Enum = 666,
            
            /// <summary>
            /// Enum F92Enum for F92
            /// </summary>
            [EnumMember(Value = "F92")]
            F92Enum = 667,
            
            /// <summary>
            /// Enum F93Enum for F93
            /// </summary>
            [EnumMember(Value = "F93")]
            F93Enum = 668,
            
            /// <summary>
            /// Enum F94Enum for F94
            /// </summary>
            [EnumMember(Value = "F94")]
            F94Enum = 669,
            
            /// <summary>
            /// Enum F95Enum for F95
            /// </summary>
            [EnumMember(Value = "F95")]
            F95Enum = 670,
            
            /// <summary>
            /// Enum F96Enum for F96
            /// </summary>
            [EnumMember(Value = "F96")]
            F96Enum = 671,
            
            /// <summary>
            /// Enum F97Enum for F97
            /// </summary>
            [EnumMember(Value = "F97")]
            F97Enum = 672,
            
            /// <summary>
            /// Enum F98Enum for F98
            /// </summary>
            [EnumMember(Value = "F98")]
            F98Enum = 673,
            
            /// <summary>
            /// Enum F99Enum for F99
            /// </summary>
            [EnumMember(Value = "F99")]
            F99Enum = 674,
            
            /// <summary>
            /// Enum FAHEnum for FAH
            /// </summary>
            [EnumMember(Value = "FAH")]
            FAHEnum = 675,
            
            /// <summary>
            /// Enum FAREnum for FAR
            /// </summary>
            [EnumMember(Value = "FAR")]
            FAREnum = 676,
            
            /// <summary>
            /// Enum FBMEnum for FBM
            /// </summary>
            [EnumMember(Value = "FBM")]
            FBMEnum = 677,
            
            /// <summary>
            /// Enum FCEnum for FC
            /// </summary>
            [EnumMember(Value = "FC")]
            FCEnum = 678,
            
            /// <summary>
            /// Enum FFEnum for FF
            /// </summary>
            [EnumMember(Value = "FF")]
            FFEnum = 679,
            
            /// <summary>
            /// Enum FHEnum for FH
            /// </summary>
            [EnumMember(Value = "FH")]
            FHEnum = 680,
            
            /// <summary>
            /// Enum FITEnum for FIT
            /// </summary>
            [EnumMember(Value = "FIT")]
            FITEnum = 681,
            
            /// <summary>
            /// Enum FLEnum for FL
            /// </summary>
            [EnumMember(Value = "FL")]
            FLEnum = 682,
            
            /// <summary>
            /// Enum FOTEnum for FOT
            /// </summary>
            [EnumMember(Value = "FOT")]
            FOTEnum = 683,
            
            /// <summary>
            /// Enum FPEnum for FP
            /// </summary>
            [EnumMember(Value = "FP")]
            FPEnum = 684,
            
            /// <summary>
            /// Enum FREnum for FR
            /// </summary>
            [EnumMember(Value = "FR")]
            FREnum = 685,
            
            /// <summary>
            /// Enum FSEnum for FS
            /// </summary>
            [EnumMember(Value = "FS")]
            FSEnum = 686,
            
            /// <summary>
            /// Enum FTKEnum for FTK
            /// </summary>
            [EnumMember(Value = "FTK")]
            FTKEnum = 687,
            
            /// <summary>
            /// Enum FTQEnum for FTQ
            /// </summary>
            [EnumMember(Value = "FTQ")]
            FTQEnum = 688,
            
            /// <summary>
            /// Enum G01Enum for G01
            /// </summary>
            [EnumMember(Value = "G01")]
            G01Enum = 689,
            
            /// <summary>
            /// Enum G04Enum for G04
            /// </summary>
            [EnumMember(Value = "G04")]
            G04Enum = 690,
            
            /// <summary>
            /// Enum G05Enum for G05
            /// </summary>
            [EnumMember(Value = "G05")]
            G05Enum = 691,
            
            /// <summary>
            /// Enum G06Enum for G06
            /// </summary>
            [EnumMember(Value = "G06")]
            G06Enum = 692,
            
            /// <summary>
            /// Enum G08Enum for G08
            /// </summary>
            [EnumMember(Value = "G08")]
            G08Enum = 693,
            
            /// <summary>
            /// Enum G09Enum for G09
            /// </summary>
            [EnumMember(Value = "G09")]
            G09Enum = 694,
            
            /// <summary>
            /// Enum G10Enum for G10
            /// </summary>
            [EnumMember(Value = "G10")]
            G10Enum = 695,
            
            /// <summary>
            /// Enum G11Enum for G11
            /// </summary>
            [EnumMember(Value = "G11")]
            G11Enum = 696,
            
            /// <summary>
            /// Enum G12Enum for G12
            /// </summary>
            [EnumMember(Value = "G12")]
            G12Enum = 697,
            
            /// <summary>
            /// Enum G13Enum for G13
            /// </summary>
            [EnumMember(Value = "G13")]
            G13Enum = 698,
            
            /// <summary>
            /// Enum G14Enum for G14
            /// </summary>
            [EnumMember(Value = "G14")]
            G14Enum = 699,
            
            /// <summary>
            /// Enum G15Enum for G15
            /// </summary>
            [EnumMember(Value = "G15")]
            G15Enum = 700,
            
            /// <summary>
            /// Enum G16Enum for G16
            /// </summary>
            [EnumMember(Value = "G16")]
            G16Enum = 701,
            
            /// <summary>
            /// Enum G17Enum for G17
            /// </summary>
            [EnumMember(Value = "G17")]
            G17Enum = 702,
            
            /// <summary>
            /// Enum G18Enum for G18
            /// </summary>
            [EnumMember(Value = "G18")]
            G18Enum = 703,
            
            /// <summary>
            /// Enum G19Enum for G19
            /// </summary>
            [EnumMember(Value = "G19")]
            G19Enum = 704,
            
            /// <summary>
            /// Enum G2Enum for G2
            /// </summary>
            [EnumMember(Value = "G2")]
            G2Enum = 705,
            
            /// <summary>
            /// Enum G20Enum for G20
            /// </summary>
            [EnumMember(Value = "G20")]
            G20Enum = 706,
            
            /// <summary>
            /// Enum G21Enum for G21
            /// </summary>
            [EnumMember(Value = "G21")]
            G21Enum = 707,
            
            /// <summary>
            /// Enum G23Enum for G23
            /// </summary>
            [EnumMember(Value = "G23")]
            G23Enum = 708,
            
            /// <summary>
            /// Enum G24Enum for G24
            /// </summary>
            [EnumMember(Value = "G24")]
            G24Enum = 709,
            
            /// <summary>
            /// Enum G25Enum for G25
            /// </summary>
            [EnumMember(Value = "G25")]
            G25Enum = 710,
            
            /// <summary>
            /// Enum G26Enum for G26
            /// </summary>
            [EnumMember(Value = "G26")]
            G26Enum = 711,
            
            /// <summary>
            /// Enum G27Enum for G27
            /// </summary>
            [EnumMember(Value = "G27")]
            G27Enum = 712,
            
            /// <summary>
            /// Enum G28Enum for G28
            /// </summary>
            [EnumMember(Value = "G28")]
            G28Enum = 713,
            
            /// <summary>
            /// Enum G29Enum for G29
            /// </summary>
            [EnumMember(Value = "G29")]
            G29Enum = 714,
            
            /// <summary>
            /// Enum G3Enum for G3
            /// </summary>
            [EnumMember(Value = "G3")]
            G3Enum = 715,
            
            /// <summary>
            /// Enum G30Enum for G30
            /// </summary>
            [EnumMember(Value = "G30")]
            G30Enum = 716,
            
            /// <summary>
            /// Enum G31Enum for G31
            /// </summary>
            [EnumMember(Value = "G31")]
            G31Enum = 717,
            
            /// <summary>
            /// Enum G32Enum for G32
            /// </summary>
            [EnumMember(Value = "G32")]
            G32Enum = 718,
            
            /// <summary>
            /// Enum G33Enum for G33
            /// </summary>
            [EnumMember(Value = "G33")]
            G33Enum = 719,
            
            /// <summary>
            /// Enum G34Enum for G34
            /// </summary>
            [EnumMember(Value = "G34")]
            G34Enum = 720,
            
            /// <summary>
            /// Enum G35Enum for G35
            /// </summary>
            [EnumMember(Value = "G35")]
            G35Enum = 721,
            
            /// <summary>
            /// Enum G36Enum for G36
            /// </summary>
            [EnumMember(Value = "G36")]
            G36Enum = 722,
            
            /// <summary>
            /// Enum G37Enum for G37
            /// </summary>
            [EnumMember(Value = "G37")]
            G37Enum = 723,
            
            /// <summary>
            /// Enum G38Enum for G38
            /// </summary>
            [EnumMember(Value = "G38")]
            G38Enum = 724,
            
            /// <summary>
            /// Enum G39Enum for G39
            /// </summary>
            [EnumMember(Value = "G39")]
            G39Enum = 725,
            
            /// <summary>
            /// Enum G40Enum for G40
            /// </summary>
            [EnumMember(Value = "G40")]
            G40Enum = 726,
            
            /// <summary>
            /// Enum G41Enum for G41
            /// </summary>
            [EnumMember(Value = "G41")]
            G41Enum = 727,
            
            /// <summary>
            /// Enum G42Enum for G42
            /// </summary>
            [EnumMember(Value = "G42")]
            G42Enum = 728,
            
            /// <summary>
            /// Enum G43Enum for G43
            /// </summary>
            [EnumMember(Value = "G43")]
            G43Enum = 729,
            
            /// <summary>
            /// Enum G44Enum for G44
            /// </summary>
            [EnumMember(Value = "G44")]
            G44Enum = 730,
            
            /// <summary>
            /// Enum G45Enum for G45
            /// </summary>
            [EnumMember(Value = "G45")]
            G45Enum = 731,
            
            /// <summary>
            /// Enum G46Enum for G46
            /// </summary>
            [EnumMember(Value = "G46")]
            G46Enum = 732,
            
            /// <summary>
            /// Enum G47Enum for G47
            /// </summary>
            [EnumMember(Value = "G47")]
            G47Enum = 733,
            
            /// <summary>
            /// Enum G48Enum for G48
            /// </summary>
            [EnumMember(Value = "G48")]
            G48Enum = 734,
            
            /// <summary>
            /// Enum G49Enum for G49
            /// </summary>
            [EnumMember(Value = "G49")]
            G49Enum = 735,
            
            /// <summary>
            /// Enum G50Enum for G50
            /// </summary>
            [EnumMember(Value = "G50")]
            G50Enum = 736,
            
            /// <summary>
            /// Enum G51Enum for G51
            /// </summary>
            [EnumMember(Value = "G51")]
            G51Enum = 737,
            
            /// <summary>
            /// Enum G52Enum for G52
            /// </summary>
            [EnumMember(Value = "G52")]
            G52Enum = 738,
            
            /// <summary>
            /// Enum G53Enum for G53
            /// </summary>
            [EnumMember(Value = "G53")]
            G53Enum = 739,
            
            /// <summary>
            /// Enum G54Enum for G54
            /// </summary>
            [EnumMember(Value = "G54")]
            G54Enum = 740,
            
            /// <summary>
            /// Enum G55Enum for G55
            /// </summary>
            [EnumMember(Value = "G55")]
            G55Enum = 741,
            
            /// <summary>
            /// Enum G56Enum for G56
            /// </summary>
            [EnumMember(Value = "G56")]
            G56Enum = 742,
            
            /// <summary>
            /// Enum G57Enum for G57
            /// </summary>
            [EnumMember(Value = "G57")]
            G57Enum = 743,
            
            /// <summary>
            /// Enum G58Enum for G58
            /// </summary>
            [EnumMember(Value = "G58")]
            G58Enum = 744,
            
            /// <summary>
            /// Enum G59Enum for G59
            /// </summary>
            [EnumMember(Value = "G59")]
            G59Enum = 745,
            
            /// <summary>
            /// Enum G60Enum for G60
            /// </summary>
            [EnumMember(Value = "G60")]
            G60Enum = 746,
            
            /// <summary>
            /// Enum G61Enum for G61
            /// </summary>
            [EnumMember(Value = "G61")]
            G61Enum = 747,
            
            /// <summary>
            /// Enum G62Enum for G62
            /// </summary>
            [EnumMember(Value = "G62")]
            G62Enum = 748,
            
            /// <summary>
            /// Enum G63Enum for G63
            /// </summary>
            [EnumMember(Value = "G63")]
            G63Enum = 749,
            
            /// <summary>
            /// Enum G64Enum for G64
            /// </summary>
            [EnumMember(Value = "G64")]
            G64Enum = 750,
            
            /// <summary>
            /// Enum G65Enum for G65
            /// </summary>
            [EnumMember(Value = "G65")]
            G65Enum = 751,
            
            /// <summary>
            /// Enum G66Enum for G66
            /// </summary>
            [EnumMember(Value = "G66")]
            G66Enum = 752,
            
            /// <summary>
            /// Enum G67Enum for G67
            /// </summary>
            [EnumMember(Value = "G67")]
            G67Enum = 753,
            
            /// <summary>
            /// Enum G68Enum for G68
            /// </summary>
            [EnumMember(Value = "G68")]
            G68Enum = 754,
            
            /// <summary>
            /// Enum G69Enum for G69
            /// </summary>
            [EnumMember(Value = "G69")]
            G69Enum = 755,
            
            /// <summary>
            /// Enum G70Enum for G70
            /// </summary>
            [EnumMember(Value = "G70")]
            G70Enum = 756,
            
            /// <summary>
            /// Enum G71Enum for G71
            /// </summary>
            [EnumMember(Value = "G71")]
            G71Enum = 757,
            
            /// <summary>
            /// Enum G72Enum for G72
            /// </summary>
            [EnumMember(Value = "G72")]
            G72Enum = 758,
            
            /// <summary>
            /// Enum G73Enum for G73
            /// </summary>
            [EnumMember(Value = "G73")]
            G73Enum = 759,
            
            /// <summary>
            /// Enum G74Enum for G74
            /// </summary>
            [EnumMember(Value = "G74")]
            G74Enum = 760,
            
            /// <summary>
            /// Enum G75Enum for G75
            /// </summary>
            [EnumMember(Value = "G75")]
            G75Enum = 761,
            
            /// <summary>
            /// Enum G76Enum for G76
            /// </summary>
            [EnumMember(Value = "G76")]
            G76Enum = 762,
            
            /// <summary>
            /// Enum G77Enum for G77
            /// </summary>
            [EnumMember(Value = "G77")]
            G77Enum = 763,
            
            /// <summary>
            /// Enum G78Enum for G78
            /// </summary>
            [EnumMember(Value = "G78")]
            G78Enum = 764,
            
            /// <summary>
            /// Enum G79Enum for G79
            /// </summary>
            [EnumMember(Value = "G79")]
            G79Enum = 765,
            
            /// <summary>
            /// Enum G80Enum for G80
            /// </summary>
            [EnumMember(Value = "G80")]
            G80Enum = 766,
            
            /// <summary>
            /// Enum G81Enum for G81
            /// </summary>
            [EnumMember(Value = "G81")]
            G81Enum = 767,
            
            /// <summary>
            /// Enum G82Enum for G82
            /// </summary>
            [EnumMember(Value = "G82")]
            G82Enum = 768,
            
            /// <summary>
            /// Enum G83Enum for G83
            /// </summary>
            [EnumMember(Value = "G83")]
            G83Enum = 769,
            
            /// <summary>
            /// Enum G84Enum for G84
            /// </summary>
            [EnumMember(Value = "G84")]
            G84Enum = 770,
            
            /// <summary>
            /// Enum G85Enum for G85
            /// </summary>
            [EnumMember(Value = "G85")]
            G85Enum = 771,
            
            /// <summary>
            /// Enum G86Enum for G86
            /// </summary>
            [EnumMember(Value = "G86")]
            G86Enum = 772,
            
            /// <summary>
            /// Enum G87Enum for G87
            /// </summary>
            [EnumMember(Value = "G87")]
            G87Enum = 773,
            
            /// <summary>
            /// Enum G88Enum for G88
            /// </summary>
            [EnumMember(Value = "G88")]
            G88Enum = 774,
            
            /// <summary>
            /// Enum G89Enum for G89
            /// </summary>
            [EnumMember(Value = "G89")]
            G89Enum = 775,
            
            /// <summary>
            /// Enum G90Enum for G90
            /// </summary>
            [EnumMember(Value = "G90")]
            G90Enum = 776,
            
            /// <summary>
            /// Enum G91Enum for G91
            /// </summary>
            [EnumMember(Value = "G91")]
            G91Enum = 777,
            
            /// <summary>
            /// Enum G92Enum for G92
            /// </summary>
            [EnumMember(Value = "G92")]
            G92Enum = 778,
            
            /// <summary>
            /// Enum G93Enum for G93
            /// </summary>
            [EnumMember(Value = "G93")]
            G93Enum = 779,
            
            /// <summary>
            /// Enum G94Enum for G94
            /// </summary>
            [EnumMember(Value = "G94")]
            G94Enum = 780,
            
            /// <summary>
            /// Enum G95Enum for G95
            /// </summary>
            [EnumMember(Value = "G95")]
            G95Enum = 781,
            
            /// <summary>
            /// Enum G96Enum for G96
            /// </summary>
            [EnumMember(Value = "G96")]
            G96Enum = 782,
            
            /// <summary>
            /// Enum G97Enum for G97
            /// </summary>
            [EnumMember(Value = "G97")]
            G97Enum = 783,
            
            /// <summary>
            /// Enum G98Enum for G98
            /// </summary>
            [EnumMember(Value = "G98")]
            G98Enum = 784,
            
            /// <summary>
            /// Enum G99Enum for G99
            /// </summary>
            [EnumMember(Value = "G99")]
            G99Enum = 785,
            
            /// <summary>
            /// Enum GBEnum for GB
            /// </summary>
            [EnumMember(Value = "GB")]
            GBEnum = 786,
            
            /// <summary>
            /// Enum GBQEnum for GBQ
            /// </summary>
            [EnumMember(Value = "GBQ")]
            GBQEnum = 787,
            
            /// <summary>
            /// Enum GDWEnum for GDW
            /// </summary>
            [EnumMember(Value = "GDW")]
            GDWEnum = 788,
            
            /// <summary>
            /// Enum GEEnum for GE
            /// </summary>
            [EnumMember(Value = "GE")]
            GEEnum = 789,
            
            /// <summary>
            /// Enum GFEnum for GF
            /// </summary>
            [EnumMember(Value = "GF")]
            GFEnum = 790,
            
            /// <summary>
            /// Enum GFIEnum for GFI
            /// </summary>
            [EnumMember(Value = "GFI")]
            GFIEnum = 791,
            
            /// <summary>
            /// Enum GGREnum for GGR
            /// </summary>
            [EnumMember(Value = "GGR")]
            GGREnum = 792,
            
            /// <summary>
            /// Enum GIAEnum for GIA
            /// </summary>
            [EnumMember(Value = "GIA")]
            GIAEnum = 793,
            
            /// <summary>
            /// Enum GICEnum for GIC
            /// </summary>
            [EnumMember(Value = "GIC")]
            GICEnum = 794,
            
            /// <summary>
            /// Enum GIIEnum for GII
            /// </summary>
            [EnumMember(Value = "GII")]
            GIIEnum = 795,
            
            /// <summary>
            /// Enum GIPEnum for GIP
            /// </summary>
            [EnumMember(Value = "GIP")]
            GIPEnum = 796,
            
            /// <summary>
            /// Enum GJEnum for GJ
            /// </summary>
            [EnumMember(Value = "GJ")]
            GJEnum = 797,
            
            /// <summary>
            /// Enum GLEnum for GL
            /// </summary>
            [EnumMember(Value = "GL")]
            GLEnum = 798,
            
            /// <summary>
            /// Enum GLDEnum for GLD
            /// </summary>
            [EnumMember(Value = "GLD")]
            GLDEnum = 799,
            
            /// <summary>
            /// Enum GLIEnum for GLI
            /// </summary>
            [EnumMember(Value = "GLI")]
            GLIEnum = 800,
            
            /// <summary>
            /// Enum GLLEnum for GLL
            /// </summary>
            [EnumMember(Value = "GLL")]
            GLLEnum = 801,
            
            /// <summary>
            /// Enum GMEnum for GM
            /// </summary>
            [EnumMember(Value = "GM")]
            GMEnum = 802,
            
            /// <summary>
            /// Enum GOEnum for GO
            /// </summary>
            [EnumMember(Value = "GO")]
            GOEnum = 803,
            
            /// <summary>
            /// Enum GPEnum for GP
            /// </summary>
            [EnumMember(Value = "GP")]
            GPEnum = 804,
            
            /// <summary>
            /// Enum GQEnum for GQ
            /// </summary>
            [EnumMember(Value = "GQ")]
            GQEnum = 805,
            
            /// <summary>
            /// Enum GRMEnum for GRM
            /// </summary>
            [EnumMember(Value = "GRM")]
            GRMEnum = 806,
            
            /// <summary>
            /// Enum GRNEnum for GRN
            /// </summary>
            [EnumMember(Value = "GRN")]
            GRNEnum = 807,
            
            /// <summary>
            /// Enum GROEnum for GRO
            /// </summary>
            [EnumMember(Value = "GRO")]
            GROEnum = 808,
            
            /// <summary>
            /// Enum GVEnum for GV
            /// </summary>
            [EnumMember(Value = "GV")]
            GVEnum = 809,
            
            /// <summary>
            /// Enum GWHEnum for GWH
            /// </summary>
            [EnumMember(Value = "GWH")]
            GWHEnum = 810,
            
            /// <summary>
            /// Enum H03Enum for H03
            /// </summary>
            [EnumMember(Value = "H03")]
            H03Enum = 811,
            
            /// <summary>
            /// Enum H04Enum for H04
            /// </summary>
            [EnumMember(Value = "H04")]
            H04Enum = 812,
            
            /// <summary>
            /// Enum H05Enum for H05
            /// </summary>
            [EnumMember(Value = "H05")]
            H05Enum = 813,
            
            /// <summary>
            /// Enum H06Enum for H06
            /// </summary>
            [EnumMember(Value = "H06")]
            H06Enum = 814,
            
            /// <summary>
            /// Enum H07Enum for H07
            /// </summary>
            [EnumMember(Value = "H07")]
            H07Enum = 815,
            
            /// <summary>
            /// Enum H08Enum for H08
            /// </summary>
            [EnumMember(Value = "H08")]
            H08Enum = 816,
            
            /// <summary>
            /// Enum H09Enum for H09
            /// </summary>
            [EnumMember(Value = "H09")]
            H09Enum = 817,
            
            /// <summary>
            /// Enum H10Enum for H10
            /// </summary>
            [EnumMember(Value = "H10")]
            H10Enum = 818,
            
            /// <summary>
            /// Enum H11Enum for H11
            /// </summary>
            [EnumMember(Value = "H11")]
            H11Enum = 819,
            
            /// <summary>
            /// Enum H12Enum for H12
            /// </summary>
            [EnumMember(Value = "H12")]
            H12Enum = 820,
            
            /// <summary>
            /// Enum H13Enum for H13
            /// </summary>
            [EnumMember(Value = "H13")]
            H13Enum = 821,
            
            /// <summary>
            /// Enum H14Enum for H14
            /// </summary>
            [EnumMember(Value = "H14")]
            H14Enum = 822,
            
            /// <summary>
            /// Enum H15Enum for H15
            /// </summary>
            [EnumMember(Value = "H15")]
            H15Enum = 823,
            
            /// <summary>
            /// Enum H16Enum for H16
            /// </summary>
            [EnumMember(Value = "H16")]
            H16Enum = 824,
            
            /// <summary>
            /// Enum H18Enum for H18
            /// </summary>
            [EnumMember(Value = "H18")]
            H18Enum = 825,
            
            /// <summary>
            /// Enum H19Enum for H19
            /// </summary>
            [EnumMember(Value = "H19")]
            H19Enum = 826,
            
            /// <summary>
            /// Enum H20Enum for H20
            /// </summary>
            [EnumMember(Value = "H20")]
            H20Enum = 827,
            
            /// <summary>
            /// Enum H21Enum for H21
            /// </summary>
            [EnumMember(Value = "H21")]
            H21Enum = 828,
            
            /// <summary>
            /// Enum H22Enum for H22
            /// </summary>
            [EnumMember(Value = "H22")]
            H22Enum = 829,
            
            /// <summary>
            /// Enum H23Enum for H23
            /// </summary>
            [EnumMember(Value = "H23")]
            H23Enum = 830,
            
            /// <summary>
            /// Enum H24Enum for H24
            /// </summary>
            [EnumMember(Value = "H24")]
            H24Enum = 831,
            
            /// <summary>
            /// Enum H25Enum for H25
            /// </summary>
            [EnumMember(Value = "H25")]
            H25Enum = 832,
            
            /// <summary>
            /// Enum H26Enum for H26
            /// </summary>
            [EnumMember(Value = "H26")]
            H26Enum = 833,
            
            /// <summary>
            /// Enum H27Enum for H27
            /// </summary>
            [EnumMember(Value = "H27")]
            H27Enum = 834,
            
            /// <summary>
            /// Enum H28Enum for H28
            /// </summary>
            [EnumMember(Value = "H28")]
            H28Enum = 835,
            
            /// <summary>
            /// Enum H29Enum for H29
            /// </summary>
            [EnumMember(Value = "H29")]
            H29Enum = 836,
            
            /// <summary>
            /// Enum H30Enum for H30
            /// </summary>
            [EnumMember(Value = "H30")]
            H30Enum = 837,
            
            /// <summary>
            /// Enum H31Enum for H31
            /// </summary>
            [EnumMember(Value = "H31")]
            H31Enum = 838,
            
            /// <summary>
            /// Enum H32Enum for H32
            /// </summary>
            [EnumMember(Value = "H32")]
            H32Enum = 839,
            
            /// <summary>
            /// Enum H33Enum for H33
            /// </summary>
            [EnumMember(Value = "H33")]
            H33Enum = 840,
            
            /// <summary>
            /// Enum H34Enum for H34
            /// </summary>
            [EnumMember(Value = "H34")]
            H34Enum = 841,
            
            /// <summary>
            /// Enum H35Enum for H35
            /// </summary>
            [EnumMember(Value = "H35")]
            H35Enum = 842,
            
            /// <summary>
            /// Enum H36Enum for H36
            /// </summary>
            [EnumMember(Value = "H36")]
            H36Enum = 843,
            
            /// <summary>
            /// Enum H37Enum for H37
            /// </summary>
            [EnumMember(Value = "H37")]
            H37Enum = 844,
            
            /// <summary>
            /// Enum H38Enum for H38
            /// </summary>
            [EnumMember(Value = "H38")]
            H38Enum = 845,
            
            /// <summary>
            /// Enum H39Enum for H39
            /// </summary>
            [EnumMember(Value = "H39")]
            H39Enum = 846,
            
            /// <summary>
            /// Enum H40Enum for H40
            /// </summary>
            [EnumMember(Value = "H40")]
            H40Enum = 847,
            
            /// <summary>
            /// Enum H41Enum for H41
            /// </summary>
            [EnumMember(Value = "H41")]
            H41Enum = 848,
            
            /// <summary>
            /// Enum H42Enum for H42
            /// </summary>
            [EnumMember(Value = "H42")]
            H42Enum = 849,
            
            /// <summary>
            /// Enum H43Enum for H43
            /// </summary>
            [EnumMember(Value = "H43")]
            H43Enum = 850,
            
            /// <summary>
            /// Enum H44Enum for H44
            /// </summary>
            [EnumMember(Value = "H44")]
            H44Enum = 851,
            
            /// <summary>
            /// Enum H45Enum for H45
            /// </summary>
            [EnumMember(Value = "H45")]
            H45Enum = 852,
            
            /// <summary>
            /// Enum H46Enum for H46
            /// </summary>
            [EnumMember(Value = "H46")]
            H46Enum = 853,
            
            /// <summary>
            /// Enum H47Enum for H47
            /// </summary>
            [EnumMember(Value = "H47")]
            H47Enum = 854,
            
            /// <summary>
            /// Enum H48Enum for H48
            /// </summary>
            [EnumMember(Value = "H48")]
            H48Enum = 855,
            
            /// <summary>
            /// Enum H49Enum for H49
            /// </summary>
            [EnumMember(Value = "H49")]
            H49Enum = 856,
            
            /// <summary>
            /// Enum H50Enum for H50
            /// </summary>
            [EnumMember(Value = "H50")]
            H50Enum = 857,
            
            /// <summary>
            /// Enum H51Enum for H51
            /// </summary>
            [EnumMember(Value = "H51")]
            H51Enum = 858,
            
            /// <summary>
            /// Enum H52Enum for H52
            /// </summary>
            [EnumMember(Value = "H52")]
            H52Enum = 859,
            
            /// <summary>
            /// Enum H53Enum for H53
            /// </summary>
            [EnumMember(Value = "H53")]
            H53Enum = 860,
            
            /// <summary>
            /// Enum H54Enum for H54
            /// </summary>
            [EnumMember(Value = "H54")]
            H54Enum = 861,
            
            /// <summary>
            /// Enum H55Enum for H55
            /// </summary>
            [EnumMember(Value = "H55")]
            H55Enum = 862,
            
            /// <summary>
            /// Enum H56Enum for H56
            /// </summary>
            [EnumMember(Value = "H56")]
            H56Enum = 863,
            
            /// <summary>
            /// Enum H57Enum for H57
            /// </summary>
            [EnumMember(Value = "H57")]
            H57Enum = 864,
            
            /// <summary>
            /// Enum H58Enum for H58
            /// </summary>
            [EnumMember(Value = "H58")]
            H58Enum = 865,
            
            /// <summary>
            /// Enum H59Enum for H59
            /// </summary>
            [EnumMember(Value = "H59")]
            H59Enum = 866,
            
            /// <summary>
            /// Enum H60Enum for H60
            /// </summary>
            [EnumMember(Value = "H60")]
            H60Enum = 867,
            
            /// <summary>
            /// Enum H61Enum for H61
            /// </summary>
            [EnumMember(Value = "H61")]
            H61Enum = 868,
            
            /// <summary>
            /// Enum H62Enum for H62
            /// </summary>
            [EnumMember(Value = "H62")]
            H62Enum = 869,
            
            /// <summary>
            /// Enum H63Enum for H63
            /// </summary>
            [EnumMember(Value = "H63")]
            H63Enum = 870,
            
            /// <summary>
            /// Enum H64Enum for H64
            /// </summary>
            [EnumMember(Value = "H64")]
            H64Enum = 871,
            
            /// <summary>
            /// Enum H65Enum for H65
            /// </summary>
            [EnumMember(Value = "H65")]
            H65Enum = 872,
            
            /// <summary>
            /// Enum H66Enum for H66
            /// </summary>
            [EnumMember(Value = "H66")]
            H66Enum = 873,
            
            /// <summary>
            /// Enum H67Enum for H67
            /// </summary>
            [EnumMember(Value = "H67")]
            H67Enum = 874,
            
            /// <summary>
            /// Enum H68Enum for H68
            /// </summary>
            [EnumMember(Value = "H68")]
            H68Enum = 875,
            
            /// <summary>
            /// Enum H69Enum for H69
            /// </summary>
            [EnumMember(Value = "H69")]
            H69Enum = 876,
            
            /// <summary>
            /// Enum H70Enum for H70
            /// </summary>
            [EnumMember(Value = "H70")]
            H70Enum = 877,
            
            /// <summary>
            /// Enum H71Enum for H71
            /// </summary>
            [EnumMember(Value = "H71")]
            H71Enum = 878,
            
            /// <summary>
            /// Enum H72Enum for H72
            /// </summary>
            [EnumMember(Value = "H72")]
            H72Enum = 879,
            
            /// <summary>
            /// Enum H73Enum for H73
            /// </summary>
            [EnumMember(Value = "H73")]
            H73Enum = 880,
            
            /// <summary>
            /// Enum H74Enum for H74
            /// </summary>
            [EnumMember(Value = "H74")]
            H74Enum = 881,
            
            /// <summary>
            /// Enum H75Enum for H75
            /// </summary>
            [EnumMember(Value = "H75")]
            H75Enum = 882,
            
            /// <summary>
            /// Enum H76Enum for H76
            /// </summary>
            [EnumMember(Value = "H76")]
            H76Enum = 883,
            
            /// <summary>
            /// Enum H77Enum for H77
            /// </summary>
            [EnumMember(Value = "H77")]
            H77Enum = 884,
            
            /// <summary>
            /// Enum H79Enum for H79
            /// </summary>
            [EnumMember(Value = "H79")]
            H79Enum = 885,
            
            /// <summary>
            /// Enum H80Enum for H80
            /// </summary>
            [EnumMember(Value = "H80")]
            H80Enum = 886,
            
            /// <summary>
            /// Enum H81Enum for H81
            /// </summary>
            [EnumMember(Value = "H81")]
            H81Enum = 887,
            
            /// <summary>
            /// Enum H82Enum for H82
            /// </summary>
            [EnumMember(Value = "H82")]
            H82Enum = 888,
            
            /// <summary>
            /// Enum H83Enum for H83
            /// </summary>
            [EnumMember(Value = "H83")]
            H83Enum = 889,
            
            /// <summary>
            /// Enum H84Enum for H84
            /// </summary>
            [EnumMember(Value = "H84")]
            H84Enum = 890,
            
            /// <summary>
            /// Enum H85Enum for H85
            /// </summary>
            [EnumMember(Value = "H85")]
            H85Enum = 891,
            
            /// <summary>
            /// Enum H87Enum for H87
            /// </summary>
            [EnumMember(Value = "H87")]
            H87Enum = 892,
            
            /// <summary>
            /// Enum H88Enum for H88
            /// </summary>
            [EnumMember(Value = "H88")]
            H88Enum = 893,
            
            /// <summary>
            /// Enum H89Enum for H89
            /// </summary>
            [EnumMember(Value = "H89")]
            H89Enum = 894,
            
            /// <summary>
            /// Enum H90Enum for H90
            /// </summary>
            [EnumMember(Value = "H90")]
            H90Enum = 895,
            
            /// <summary>
            /// Enum H91Enum for H91
            /// </summary>
            [EnumMember(Value = "H91")]
            H91Enum = 896,
            
            /// <summary>
            /// Enum H92Enum for H92
            /// </summary>
            [EnumMember(Value = "H92")]
            H92Enum = 897,
            
            /// <summary>
            /// Enum H93Enum for H93
            /// </summary>
            [EnumMember(Value = "H93")]
            H93Enum = 898,
            
            /// <summary>
            /// Enum H94Enum for H94
            /// </summary>
            [EnumMember(Value = "H94")]
            H94Enum = 899,
            
            /// <summary>
            /// Enum H95Enum for H95
            /// </summary>
            [EnumMember(Value = "H95")]
            H95Enum = 900,
            
            /// <summary>
            /// Enum H96Enum for H96
            /// </summary>
            [EnumMember(Value = "H96")]
            H96Enum = 901,
            
            /// <summary>
            /// Enum H98Enum for H98
            /// </summary>
            [EnumMember(Value = "H98")]
            H98Enum = 902,
            
            /// <summary>
            /// Enum H99Enum for H99
            /// </summary>
            [EnumMember(Value = "H99")]
            H99Enum = 903,
            
            /// <summary>
            /// Enum HAEnum for HA
            /// </summary>
            [EnumMember(Value = "HA")]
            HAEnum = 904,
            
            /// <summary>
            /// Enum HBAEnum for HBA
            /// </summary>
            [EnumMember(Value = "HBA")]
            HBAEnum = 905,
            
            /// <summary>
            /// Enum HBXEnum for HBX
            /// </summary>
            [EnumMember(Value = "HBX")]
            HBXEnum = 906,
            
            /// <summary>
            /// Enum HCEnum for HC
            /// </summary>
            [EnumMember(Value = "HC")]
            HCEnum = 907,
            
            /// <summary>
            /// Enum HDWEnum for HDW
            /// </summary>
            [EnumMember(Value = "HDW")]
            HDWEnum = 908,
            
            /// <summary>
            /// Enum HEAEnum for HEA
            /// </summary>
            [EnumMember(Value = "HEA")]
            HEAEnum = 909,
            
            /// <summary>
            /// Enum HGMEnum for HGM
            /// </summary>
            [EnumMember(Value = "HGM")]
            HGMEnum = 910,
            
            /// <summary>
            /// Enum HHEnum for HH
            /// </summary>
            [EnumMember(Value = "HH")]
            HHEnum = 911,
            
            /// <summary>
            /// Enum HIUEnum for HIU
            /// </summary>
            [EnumMember(Value = "HIU")]
            HIUEnum = 912,
            
            /// <summary>
            /// Enum HKMEnum for HKM
            /// </summary>
            [EnumMember(Value = "HKM")]
            HKMEnum = 913,
            
            /// <summary>
            /// Enum HLTEnum for HLT
            /// </summary>
            [EnumMember(Value = "HLT")]
            HLTEnum = 914,
            
            /// <summary>
            /// Enum HMEnum for HM
            /// </summary>
            [EnumMember(Value = "HM")]
            HMEnum = 915,
            
            /// <summary>
            /// Enum HMQEnum for HMQ
            /// </summary>
            [EnumMember(Value = "HMQ")]
            HMQEnum = 916,
            
            /// <summary>
            /// Enum HMTEnum for HMT
            /// </summary>
            [EnumMember(Value = "HMT")]
            HMTEnum = 917,
            
            /// <summary>
            /// Enum HPAEnum for HPA
            /// </summary>
            [EnumMember(Value = "HPA")]
            HPAEnum = 918,
            
            /// <summary>
            /// Enum HTZEnum for HTZ
            /// </summary>
            [EnumMember(Value = "HTZ")]
            HTZEnum = 919,
            
            /// <summary>
            /// Enum HUREnum for HUR
            /// </summary>
            [EnumMember(Value = "HUR")]
            HUREnum = 920,
            
            /// <summary>
            /// Enum IAEnum for IA
            /// </summary>
            [EnumMember(Value = "IA")]
            IAEnum = 921,
            
            /// <summary>
            /// Enum IEEnum for IE
            /// </summary>
            [EnumMember(Value = "IE")]
            IEEnum = 922,
            
            /// <summary>
            /// Enum INHEnum for INH
            /// </summary>
            [EnumMember(Value = "INH")]
            INHEnum = 923,
            
            /// <summary>
            /// Enum INKEnum for INK
            /// </summary>
            [EnumMember(Value = "INK")]
            INKEnum = 924,
            
            /// <summary>
            /// Enum INQEnum for INQ
            /// </summary>
            [EnumMember(Value = "INQ")]
            INQEnum = 925,
            
            /// <summary>
            /// Enum ISDEnum for ISD
            /// </summary>
            [EnumMember(Value = "ISD")]
            ISDEnum = 926,
            
            /// <summary>
            /// Enum IUEnum for IU
            /// </summary>
            [EnumMember(Value = "IU")]
            IUEnum = 927,
            
            /// <summary>
            /// Enum IUGEnum for IUG
            /// </summary>
            [EnumMember(Value = "IUG")]
            IUGEnum = 928,
            
            /// <summary>
            /// Enum IVEnum for IV
            /// </summary>
            [EnumMember(Value = "IV")]
            IVEnum = 929,
            
            /// <summary>
            /// Enum J10Enum for J10
            /// </summary>
            [EnumMember(Value = "J10")]
            J10Enum = 930,
            
            /// <summary>
            /// Enum J12Enum for J12
            /// </summary>
            [EnumMember(Value = "J12")]
            J12Enum = 931,
            
            /// <summary>
            /// Enum J13Enum for J13
            /// </summary>
            [EnumMember(Value = "J13")]
            J13Enum = 932,
            
            /// <summary>
            /// Enum J14Enum for J14
            /// </summary>
            [EnumMember(Value = "J14")]
            J14Enum = 933,
            
            /// <summary>
            /// Enum J15Enum for J15
            /// </summary>
            [EnumMember(Value = "J15")]
            J15Enum = 934,
            
            /// <summary>
            /// Enum J16Enum for J16
            /// </summary>
            [EnumMember(Value = "J16")]
            J16Enum = 935,
            
            /// <summary>
            /// Enum J17Enum for J17
            /// </summary>
            [EnumMember(Value = "J17")]
            J17Enum = 936,
            
            /// <summary>
            /// Enum J18Enum for J18
            /// </summary>
            [EnumMember(Value = "J18")]
            J18Enum = 937,
            
            /// <summary>
            /// Enum J19Enum for J19
            /// </summary>
            [EnumMember(Value = "J19")]
            J19Enum = 938,
            
            /// <summary>
            /// Enum J2Enum for J2
            /// </summary>
            [EnumMember(Value = "J2")]
            J2Enum = 939,
            
            /// <summary>
            /// Enum J20Enum for J20
            /// </summary>
            [EnumMember(Value = "J20")]
            J20Enum = 940,
            
            /// <summary>
            /// Enum J21Enum for J21
            /// </summary>
            [EnumMember(Value = "J21")]
            J21Enum = 941,
            
            /// <summary>
            /// Enum J22Enum for J22
            /// </summary>
            [EnumMember(Value = "J22")]
            J22Enum = 942,
            
            /// <summary>
            /// Enum J23Enum for J23
            /// </summary>
            [EnumMember(Value = "J23")]
            J23Enum = 943,
            
            /// <summary>
            /// Enum J24Enum for J24
            /// </summary>
            [EnumMember(Value = "J24")]
            J24Enum = 944,
            
            /// <summary>
            /// Enum J25Enum for J25
            /// </summary>
            [EnumMember(Value = "J25")]
            J25Enum = 945,
            
            /// <summary>
            /// Enum J26Enum for J26
            /// </summary>
            [EnumMember(Value = "J26")]
            J26Enum = 946,
            
            /// <summary>
            /// Enum J27Enum for J27
            /// </summary>
            [EnumMember(Value = "J27")]
            J27Enum = 947,
            
            /// <summary>
            /// Enum J28Enum for J28
            /// </summary>
            [EnumMember(Value = "J28")]
            J28Enum = 948,
            
            /// <summary>
            /// Enum J29Enum for J29
            /// </summary>
            [EnumMember(Value = "J29")]
            J29Enum = 949,
            
            /// <summary>
            /// Enum J30Enum for J30
            /// </summary>
            [EnumMember(Value = "J30")]
            J30Enum = 950,
            
            /// <summary>
            /// Enum J31Enum for J31
            /// </summary>
            [EnumMember(Value = "J31")]
            J31Enum = 951,
            
            /// <summary>
            /// Enum J32Enum for J32
            /// </summary>
            [EnumMember(Value = "J32")]
            J32Enum = 952,
            
            /// <summary>
            /// Enum J33Enum for J33
            /// </summary>
            [EnumMember(Value = "J33")]
            J33Enum = 953,
            
            /// <summary>
            /// Enum J34Enum for J34
            /// </summary>
            [EnumMember(Value = "J34")]
            J34Enum = 954,
            
            /// <summary>
            /// Enum J35Enum for J35
            /// </summary>
            [EnumMember(Value = "J35")]
            J35Enum = 955,
            
            /// <summary>
            /// Enum J36Enum for J36
            /// </summary>
            [EnumMember(Value = "J36")]
            J36Enum = 956,
            
            /// <summary>
            /// Enum J38Enum for J38
            /// </summary>
            [EnumMember(Value = "J38")]
            J38Enum = 957,
            
            /// <summary>
            /// Enum J39Enum for J39
            /// </summary>
            [EnumMember(Value = "J39")]
            J39Enum = 958,
            
            /// <summary>
            /// Enum J40Enum for J40
            /// </summary>
            [EnumMember(Value = "J40")]
            J40Enum = 959,
            
            /// <summary>
            /// Enum J41Enum for J41
            /// </summary>
            [EnumMember(Value = "J41")]
            J41Enum = 960,
            
            /// <summary>
            /// Enum J42Enum for J42
            /// </summary>
            [EnumMember(Value = "J42")]
            J42Enum = 961,
            
            /// <summary>
            /// Enum J43Enum for J43
            /// </summary>
            [EnumMember(Value = "J43")]
            J43Enum = 962,
            
            /// <summary>
            /// Enum J44Enum for J44
            /// </summary>
            [EnumMember(Value = "J44")]
            J44Enum = 963,
            
            /// <summary>
            /// Enum J45Enum for J45
            /// </summary>
            [EnumMember(Value = "J45")]
            J45Enum = 964,
            
            /// <summary>
            /// Enum J46Enum for J46
            /// </summary>
            [EnumMember(Value = "J46")]
            J46Enum = 965,
            
            /// <summary>
            /// Enum J47Enum for J47
            /// </summary>
            [EnumMember(Value = "J47")]
            J47Enum = 966,
            
            /// <summary>
            /// Enum J48Enum for J48
            /// </summary>
            [EnumMember(Value = "J48")]
            J48Enum = 967,
            
            /// <summary>
            /// Enum J49Enum for J49
            /// </summary>
            [EnumMember(Value = "J49")]
            J49Enum = 968,
            
            /// <summary>
            /// Enum J50Enum for J50
            /// </summary>
            [EnumMember(Value = "J50")]
            J50Enum = 969,
            
            /// <summary>
            /// Enum J51Enum for J51
            /// </summary>
            [EnumMember(Value = "J51")]
            J51Enum = 970,
            
            /// <summary>
            /// Enum J52Enum for J52
            /// </summary>
            [EnumMember(Value = "J52")]
            J52Enum = 971,
            
            /// <summary>
            /// Enum J53Enum for J53
            /// </summary>
            [EnumMember(Value = "J53")]
            J53Enum = 972,
            
            /// <summary>
            /// Enum J54Enum for J54
            /// </summary>
            [EnumMember(Value = "J54")]
            J54Enum = 973,
            
            /// <summary>
            /// Enum J55Enum for J55
            /// </summary>
            [EnumMember(Value = "J55")]
            J55Enum = 974,
            
            /// <summary>
            /// Enum J56Enum for J56
            /// </summary>
            [EnumMember(Value = "J56")]
            J56Enum = 975,
            
            /// <summary>
            /// Enum J57Enum for J57
            /// </summary>
            [EnumMember(Value = "J57")]
            J57Enum = 976,
            
            /// <summary>
            /// Enum J58Enum for J58
            /// </summary>
            [EnumMember(Value = "J58")]
            J58Enum = 977,
            
            /// <summary>
            /// Enum J59Enum for J59
            /// </summary>
            [EnumMember(Value = "J59")]
            J59Enum = 978,
            
            /// <summary>
            /// Enum J60Enum for J60
            /// </summary>
            [EnumMember(Value = "J60")]
            J60Enum = 979,
            
            /// <summary>
            /// Enum J61Enum for J61
            /// </summary>
            [EnumMember(Value = "J61")]
            J61Enum = 980,
            
            /// <summary>
            /// Enum J62Enum for J62
            /// </summary>
            [EnumMember(Value = "J62")]
            J62Enum = 981,
            
            /// <summary>
            /// Enum J63Enum for J63
            /// </summary>
            [EnumMember(Value = "J63")]
            J63Enum = 982,
            
            /// <summary>
            /// Enum J64Enum for J64
            /// </summary>
            [EnumMember(Value = "J64")]
            J64Enum = 983,
            
            /// <summary>
            /// Enum J65Enum for J65
            /// </summary>
            [EnumMember(Value = "J65")]
            J65Enum = 984,
            
            /// <summary>
            /// Enum J66Enum for J66
            /// </summary>
            [EnumMember(Value = "J66")]
            J66Enum = 985,
            
            /// <summary>
            /// Enum J67Enum for J67
            /// </summary>
            [EnumMember(Value = "J67")]
            J67Enum = 986,
            
            /// <summary>
            /// Enum J68Enum for J68
            /// </summary>
            [EnumMember(Value = "J68")]
            J68Enum = 987,
            
            /// <summary>
            /// Enum J69Enum for J69
            /// </summary>
            [EnumMember(Value = "J69")]
            J69Enum = 988,
            
            /// <summary>
            /// Enum J70Enum for J70
            /// </summary>
            [EnumMember(Value = "J70")]
            J70Enum = 989,
            
            /// <summary>
            /// Enum J71Enum for J71
            /// </summary>
            [EnumMember(Value = "J71")]
            J71Enum = 990,
            
            /// <summary>
            /// Enum J72Enum for J72
            /// </summary>
            [EnumMember(Value = "J72")]
            J72Enum = 991,
            
            /// <summary>
            /// Enum J73Enum for J73
            /// </summary>
            [EnumMember(Value = "J73")]
            J73Enum = 992,
            
            /// <summary>
            /// Enum J74Enum for J74
            /// </summary>
            [EnumMember(Value = "J74")]
            J74Enum = 993,
            
            /// <summary>
            /// Enum J75Enum for J75
            /// </summary>
            [EnumMember(Value = "J75")]
            J75Enum = 994,
            
            /// <summary>
            /// Enum J76Enum for J76
            /// </summary>
            [EnumMember(Value = "J76")]
            J76Enum = 995,
            
            /// <summary>
            /// Enum J78Enum for J78
            /// </summary>
            [EnumMember(Value = "J78")]
            J78Enum = 996,
            
            /// <summary>
            /// Enum J79Enum for J79
            /// </summary>
            [EnumMember(Value = "J79")]
            J79Enum = 997,
            
            /// <summary>
            /// Enum J81Enum for J81
            /// </summary>
            [EnumMember(Value = "J81")]
            J81Enum = 998,
            
            /// <summary>
            /// Enum J82Enum for J82
            /// </summary>
            [EnumMember(Value = "J82")]
            J82Enum = 999,
            
            /// <summary>
            /// Enum J83Enum for J83
            /// </summary>
            [EnumMember(Value = "J83")]
            J83Enum = 1000,
            
            /// <summary>
            /// Enum J84Enum for J84
            /// </summary>
            [EnumMember(Value = "J84")]
            J84Enum = 1001,
            
            /// <summary>
            /// Enum J85Enum for J85
            /// </summary>
            [EnumMember(Value = "J85")]
            J85Enum = 1002,
            
            /// <summary>
            /// Enum J87Enum for J87
            /// </summary>
            [EnumMember(Value = "J87")]
            J87Enum = 1003,
            
            /// <summary>
            /// Enum J90Enum for J90
            /// </summary>
            [EnumMember(Value = "J90")]
            J90Enum = 1004,
            
            /// <summary>
            /// Enum J91Enum for J91
            /// </summary>
            [EnumMember(Value = "J91")]
            J91Enum = 1005,
            
            /// <summary>
            /// Enum J92Enum for J92
            /// </summary>
            [EnumMember(Value = "J92")]
            J92Enum = 1006,
            
            /// <summary>
            /// Enum J93Enum for J93
            /// </summary>
            [EnumMember(Value = "J93")]
            J93Enum = 1007,
            
            /// <summary>
            /// Enum J95Enum for J95
            /// </summary>
            [EnumMember(Value = "J95")]
            J95Enum = 1008,
            
            /// <summary>
            /// Enum J96Enum for J96
            /// </summary>
            [EnumMember(Value = "J96")]
            J96Enum = 1009,
            
            /// <summary>
            /// Enum J97Enum for J97
            /// </summary>
            [EnumMember(Value = "J97")]
            J97Enum = 1010,
            
            /// <summary>
            /// Enum J98Enum for J98
            /// </summary>
            [EnumMember(Value = "J98")]
            J98Enum = 1011,
            
            /// <summary>
            /// Enum J99Enum for J99
            /// </summary>
            [EnumMember(Value = "J99")]
            J99Enum = 1012,
            
            /// <summary>
            /// Enum JEEnum for JE
            /// </summary>
            [EnumMember(Value = "JE")]
            JEEnum = 1013,
            
            /// <summary>
            /// Enum JKEnum for JK
            /// </summary>
            [EnumMember(Value = "JK")]
            JKEnum = 1014,
            
            /// <summary>
            /// Enum JMEnum for JM
            /// </summary>
            [EnumMember(Value = "JM")]
            JMEnum = 1015,
            
            /// <summary>
            /// Enum JNTEnum for JNT
            /// </summary>
            [EnumMember(Value = "JNT")]
            JNTEnum = 1016,
            
            /// <summary>
            /// Enum JOUEnum for JOU
            /// </summary>
            [EnumMember(Value = "JOU")]
            JOUEnum = 1017,
            
            /// <summary>
            /// Enum JPSEnum for JPS
            /// </summary>
            [EnumMember(Value = "JPS")]
            JPSEnum = 1018,
            
            /// <summary>
            /// Enum JWLEnum for JWL
            /// </summary>
            [EnumMember(Value = "JWL")]
            JWLEnum = 1019,
            
            /// <summary>
            /// Enum K1Enum for K1
            /// </summary>
            [EnumMember(Value = "K1")]
            K1Enum = 1020,
            
            /// <summary>
            /// Enum K10Enum for K10
            /// </summary>
            [EnumMember(Value = "K10")]
            K10Enum = 1021,
            
            /// <summary>
            /// Enum K11Enum for K11
            /// </summary>
            [EnumMember(Value = "K11")]
            K11Enum = 1022,
            
            /// <summary>
            /// Enum K12Enum for K12
            /// </summary>
            [EnumMember(Value = "K12")]
            K12Enum = 1023,
            
            /// <summary>
            /// Enum K13Enum for K13
            /// </summary>
            [EnumMember(Value = "K13")]
            K13Enum = 1024,
            
            /// <summary>
            /// Enum K14Enum for K14
            /// </summary>
            [EnumMember(Value = "K14")]
            K14Enum = 1025,
            
            /// <summary>
            /// Enum K15Enum for K15
            /// </summary>
            [EnumMember(Value = "K15")]
            K15Enum = 1026,
            
            /// <summary>
            /// Enum K16Enum for K16
            /// </summary>
            [EnumMember(Value = "K16")]
            K16Enum = 1027,
            
            /// <summary>
            /// Enum K17Enum for K17
            /// </summary>
            [EnumMember(Value = "K17")]
            K17Enum = 1028,
            
            /// <summary>
            /// Enum K18Enum for K18
            /// </summary>
            [EnumMember(Value = "K18")]
            K18Enum = 1029,
            
            /// <summary>
            /// Enum K19Enum for K19
            /// </summary>
            [EnumMember(Value = "K19")]
            K19Enum = 1030,
            
            /// <summary>
            /// Enum K2Enum for K2
            /// </summary>
            [EnumMember(Value = "K2")]
            K2Enum = 1031,
            
            /// <summary>
            /// Enum K20Enum for K20
            /// </summary>
            [EnumMember(Value = "K20")]
            K20Enum = 1032,
            
            /// <summary>
            /// Enum K21Enum for K21
            /// </summary>
            [EnumMember(Value = "K21")]
            K21Enum = 1033,
            
            /// <summary>
            /// Enum K22Enum for K22
            /// </summary>
            [EnumMember(Value = "K22")]
            K22Enum = 1034,
            
            /// <summary>
            /// Enum K23Enum for K23
            /// </summary>
            [EnumMember(Value = "K23")]
            K23Enum = 1035,
            
            /// <summary>
            /// Enum K26Enum for K26
            /// </summary>
            [EnumMember(Value = "K26")]
            K26Enum = 1036,
            
            /// <summary>
            /// Enum K27Enum for K27
            /// </summary>
            [EnumMember(Value = "K27")]
            K27Enum = 1037,
            
            /// <summary>
            /// Enum K28Enum for K28
            /// </summary>
            [EnumMember(Value = "K28")]
            K28Enum = 1038,
            
            /// <summary>
            /// Enum K3Enum for K3
            /// </summary>
            [EnumMember(Value = "K3")]
            K3Enum = 1039,
            
            /// <summary>
            /// Enum K30Enum for K30
            /// </summary>
            [EnumMember(Value = "K30")]
            K30Enum = 1040,
            
            /// <summary>
            /// Enum K31Enum for K31
            /// </summary>
            [EnumMember(Value = "K31")]
            K31Enum = 1041,
            
            /// <summary>
            /// Enum K32Enum for K32
            /// </summary>
            [EnumMember(Value = "K32")]
            K32Enum = 1042,
            
            /// <summary>
            /// Enum K33Enum for K33
            /// </summary>
            [EnumMember(Value = "K33")]
            K33Enum = 1043,
            
            /// <summary>
            /// Enum K34Enum for K34
            /// </summary>
            [EnumMember(Value = "K34")]
            K34Enum = 1044,
            
            /// <summary>
            /// Enum K35Enum for K35
            /// </summary>
            [EnumMember(Value = "K35")]
            K35Enum = 1045,
            
            /// <summary>
            /// Enum K36Enum for K36
            /// </summary>
            [EnumMember(Value = "K36")]
            K36Enum = 1046,
            
            /// <summary>
            /// Enum K37Enum for K37
            /// </summary>
            [EnumMember(Value = "K37")]
            K37Enum = 1047,
            
            /// <summary>
            /// Enum K38Enum for K38
            /// </summary>
            [EnumMember(Value = "K38")]
            K38Enum = 1048,
            
            /// <summary>
            /// Enum K39Enum for K39
            /// </summary>
            [EnumMember(Value = "K39")]
            K39Enum = 1049,
            
            /// <summary>
            /// Enum K40Enum for K40
            /// </summary>
            [EnumMember(Value = "K40")]
            K40Enum = 1050,
            
            /// <summary>
            /// Enum K41Enum for K41
            /// </summary>
            [EnumMember(Value = "K41")]
            K41Enum = 1051,
            
            /// <summary>
            /// Enum K42Enum for K42
            /// </summary>
            [EnumMember(Value = "K42")]
            K42Enum = 1052,
            
            /// <summary>
            /// Enum K43Enum for K43
            /// </summary>
            [EnumMember(Value = "K43")]
            K43Enum = 1053,
            
            /// <summary>
            /// Enum K45Enum for K45
            /// </summary>
            [EnumMember(Value = "K45")]
            K45Enum = 1054,
            
            /// <summary>
            /// Enum K46Enum for K46
            /// </summary>
            [EnumMember(Value = "K46")]
            K46Enum = 1055,
            
            /// <summary>
            /// Enum K47Enum for K47
            /// </summary>
            [EnumMember(Value = "K47")]
            K47Enum = 1056,
            
            /// <summary>
            /// Enum K48Enum for K48
            /// </summary>
            [EnumMember(Value = "K48")]
            K48Enum = 1057,
            
            /// <summary>
            /// Enum K49Enum for K49
            /// </summary>
            [EnumMember(Value = "K49")]
            K49Enum = 1058,
            
            /// <summary>
            /// Enum K50Enum for K50
            /// </summary>
            [EnumMember(Value = "K50")]
            K50Enum = 1059,
            
            /// <summary>
            /// Enum K51Enum for K51
            /// </summary>
            [EnumMember(Value = "K51")]
            K51Enum = 1060,
            
            /// <summary>
            /// Enum K52Enum for K52
            /// </summary>
            [EnumMember(Value = "K52")]
            K52Enum = 1061,
            
            /// <summary>
            /// Enum K53Enum for K53
            /// </summary>
            [EnumMember(Value = "K53")]
            K53Enum = 1062,
            
            /// <summary>
            /// Enum K54Enum for K54
            /// </summary>
            [EnumMember(Value = "K54")]
            K54Enum = 1063,
            
            /// <summary>
            /// Enum K55Enum for K55
            /// </summary>
            [EnumMember(Value = "K55")]
            K55Enum = 1064,
            
            /// <summary>
            /// Enum K58Enum for K58
            /// </summary>
            [EnumMember(Value = "K58")]
            K58Enum = 1065,
            
            /// <summary>
            /// Enum K59Enum for K59
            /// </summary>
            [EnumMember(Value = "K59")]
            K59Enum = 1066,
            
            /// <summary>
            /// Enum K6Enum for K6
            /// </summary>
            [EnumMember(Value = "K6")]
            K6Enum = 1067,
            
            /// <summary>
            /// Enum K60Enum for K60
            /// </summary>
            [EnumMember(Value = "K60")]
            K60Enum = 1068,
            
            /// <summary>
            /// Enum K61Enum for K61
            /// </summary>
            [EnumMember(Value = "K61")]
            K61Enum = 1069,
            
            /// <summary>
            /// Enum K62Enum for K62
            /// </summary>
            [EnumMember(Value = "K62")]
            K62Enum = 1070,
            
            /// <summary>
            /// Enum K63Enum for K63
            /// </summary>
            [EnumMember(Value = "K63")]
            K63Enum = 1071,
            
            /// <summary>
            /// Enum K64Enum for K64
            /// </summary>
            [EnumMember(Value = "K64")]
            K64Enum = 1072,
            
            /// <summary>
            /// Enum K65Enum for K65
            /// </summary>
            [EnumMember(Value = "K65")]
            K65Enum = 1073,
            
            /// <summary>
            /// Enum K66Enum for K66
            /// </summary>
            [EnumMember(Value = "K66")]
            K66Enum = 1074,
            
            /// <summary>
            /// Enum K67Enum for K67
            /// </summary>
            [EnumMember(Value = "K67")]
            K67Enum = 1075,
            
            /// <summary>
            /// Enum K68Enum for K68
            /// </summary>
            [EnumMember(Value = "K68")]
            K68Enum = 1076,
            
            /// <summary>
            /// Enum K69Enum for K69
            /// </summary>
            [EnumMember(Value = "K69")]
            K69Enum = 1077,
            
            /// <summary>
            /// Enum K70Enum for K70
            /// </summary>
            [EnumMember(Value = "K70")]
            K70Enum = 1078,
            
            /// <summary>
            /// Enum K71Enum for K71
            /// </summary>
            [EnumMember(Value = "K71")]
            K71Enum = 1079,
            
            /// <summary>
            /// Enum K73Enum for K73
            /// </summary>
            [EnumMember(Value = "K73")]
            K73Enum = 1080,
            
            /// <summary>
            /// Enum K74Enum for K74
            /// </summary>
            [EnumMember(Value = "K74")]
            K74Enum = 1081,
            
            /// <summary>
            /// Enum K75Enum for K75
            /// </summary>
            [EnumMember(Value = "K75")]
            K75Enum = 1082,
            
            /// <summary>
            /// Enum K76Enum for K76
            /// </summary>
            [EnumMember(Value = "K76")]
            K76Enum = 1083,
            
            /// <summary>
            /// Enum K77Enum for K77
            /// </summary>
            [EnumMember(Value = "K77")]
            K77Enum = 1084,
            
            /// <summary>
            /// Enum K78Enum for K78
            /// </summary>
            [EnumMember(Value = "K78")]
            K78Enum = 1085,
            
            /// <summary>
            /// Enum K79Enum for K79
            /// </summary>
            [EnumMember(Value = "K79")]
            K79Enum = 1086,
            
            /// <summary>
            /// Enum K80Enum for K80
            /// </summary>
            [EnumMember(Value = "K80")]
            K80Enum = 1087,
            
            /// <summary>
            /// Enum K81Enum for K81
            /// </summary>
            [EnumMember(Value = "K81")]
            K81Enum = 1088,
            
            /// <summary>
            /// Enum K82Enum for K82
            /// </summary>
            [EnumMember(Value = "K82")]
            K82Enum = 1089,
            
            /// <summary>
            /// Enum K83Enum for K83
            /// </summary>
            [EnumMember(Value = "K83")]
            K83Enum = 1090,
            
            /// <summary>
            /// Enum K84Enum for K84
            /// </summary>
            [EnumMember(Value = "K84")]
            K84Enum = 1091,
            
            /// <summary>
            /// Enum K85Enum for K85
            /// </summary>
            [EnumMember(Value = "K85")]
            K85Enum = 1092,
            
            /// <summary>
            /// Enum K86Enum for K86
            /// </summary>
            [EnumMember(Value = "K86")]
            K86Enum = 1093,
            
            /// <summary>
            /// Enum K87Enum for K87
            /// </summary>
            [EnumMember(Value = "K87")]
            K87Enum = 1094,
            
            /// <summary>
            /// Enum K88Enum for K88
            /// </summary>
            [EnumMember(Value = "K88")]
            K88Enum = 1095,
            
            /// <summary>
            /// Enum K89Enum for K89
            /// </summary>
            [EnumMember(Value = "K89")]
            K89Enum = 1096,
            
            /// <summary>
            /// Enum K90Enum for K90
            /// </summary>
            [EnumMember(Value = "K90")]
            K90Enum = 1097,
            
            /// <summary>
            /// Enum K91Enum for K91
            /// </summary>
            [EnumMember(Value = "K91")]
            K91Enum = 1098,
            
            /// <summary>
            /// Enum K92Enum for K92
            /// </summary>
            [EnumMember(Value = "K92")]
            K92Enum = 1099,
            
            /// <summary>
            /// Enum K93Enum for K93
            /// </summary>
            [EnumMember(Value = "K93")]
            K93Enum = 1100,
            
            /// <summary>
            /// Enum K94Enum for K94
            /// </summary>
            [EnumMember(Value = "K94")]
            K94Enum = 1101,
            
            /// <summary>
            /// Enum K95Enum for K95
            /// </summary>
            [EnumMember(Value = "K95")]
            K95Enum = 1102,
            
            /// <summary>
            /// Enum K96Enum for K96
            /// </summary>
            [EnumMember(Value = "K96")]
            K96Enum = 1103,
            
            /// <summary>
            /// Enum K97Enum for K97
            /// </summary>
            [EnumMember(Value = "K97")]
            K97Enum = 1104,
            
            /// <summary>
            /// Enum K98Enum for K98
            /// </summary>
            [EnumMember(Value = "K98")]
            K98Enum = 1105,
            
            /// <summary>
            /// Enum K99Enum for K99
            /// </summary>
            [EnumMember(Value = "K99")]
            K99Enum = 1106,
            
            /// <summary>
            /// Enum KAEnum for KA
            /// </summary>
            [EnumMember(Value = "KA")]
            KAEnum = 1107,
            
            /// <summary>
            /// Enum KATEnum for KAT
            /// </summary>
            [EnumMember(Value = "KAT")]
            KATEnum = 1108,
            
            /// <summary>
            /// Enum KBEnum for KB
            /// </summary>
            [EnumMember(Value = "KB")]
            KBEnum = 1109,
            
            /// <summary>
            /// Enum KBAEnum for KBA
            /// </summary>
            [EnumMember(Value = "KBA")]
            KBAEnum = 1110,
            
            /// <summary>
            /// Enum KCCEnum for KCC
            /// </summary>
            [EnumMember(Value = "KCC")]
            KCCEnum = 1111,
            
            /// <summary>
            /// Enum KDWEnum for KDW
            /// </summary>
            [EnumMember(Value = "KDW")]
            KDWEnum = 1112,
            
            /// <summary>
            /// Enum KELEnum for KEL
            /// </summary>
            [EnumMember(Value = "KEL")]
            KELEnum = 1113,
            
            /// <summary>
            /// Enum KGMEnum for KGM
            /// </summary>
            [EnumMember(Value = "KGM")]
            KGMEnum = 1114,
            
            /// <summary>
            /// Enum KGSEnum for KGS
            /// </summary>
            [EnumMember(Value = "KGS")]
            KGSEnum = 1115,
            
            /// <summary>
            /// Enum KHYEnum for KHY
            /// </summary>
            [EnumMember(Value = "KHY")]
            KHYEnum = 1116,
            
            /// <summary>
            /// Enum KHZEnum for KHZ
            /// </summary>
            [EnumMember(Value = "KHZ")]
            KHZEnum = 1117,
            
            /// <summary>
            /// Enum KIEnum for KI
            /// </summary>
            [EnumMember(Value = "KI")]
            KIEnum = 1118,
            
            /// <summary>
            /// Enum KICEnum for KIC
            /// </summary>
            [EnumMember(Value = "KIC")]
            KICEnum = 1119,
            
            /// <summary>
            /// Enum KIPEnum for KIP
            /// </summary>
            [EnumMember(Value = "KIP")]
            KIPEnum = 1120,
            
            /// <summary>
            /// Enum KJEnum for KJ
            /// </summary>
            [EnumMember(Value = "KJ")]
            KJEnum = 1121,
            
            /// <summary>
            /// Enum KJOEnum for KJO
            /// </summary>
            [EnumMember(Value = "KJO")]
            KJOEnum = 1122,
            
            /// <summary>
            /// Enum KLEnum for KL
            /// </summary>
            [EnumMember(Value = "KL")]
            KLEnum = 1123,
            
            /// <summary>
            /// Enum KLKEnum for KLK
            /// </summary>
            [EnumMember(Value = "KLK")]
            KLKEnum = 1124,
            
            /// <summary>
            /// Enum KLXEnum for KLX
            /// </summary>
            [EnumMember(Value = "KLX")]
            KLXEnum = 1125,
            
            /// <summary>
            /// Enum KMAEnum for KMA
            /// </summary>
            [EnumMember(Value = "KMA")]
            KMAEnum = 1126,
            
            /// <summary>
            /// Enum KMHEnum for KMH
            /// </summary>
            [EnumMember(Value = "KMH")]
            KMHEnum = 1127,
            
            /// <summary>
            /// Enum KMKEnum for KMK
            /// </summary>
            [EnumMember(Value = "KMK")]
            KMKEnum = 1128,
            
            /// <summary>
            /// Enum KMQEnum for KMQ
            /// </summary>
            [EnumMember(Value = "KMQ")]
            KMQEnum = 1129,
            
            /// <summary>
            /// Enum KMTEnum for KMT
            /// </summary>
            [EnumMember(Value = "KMT")]
            KMTEnum = 1130,
            
            /// <summary>
            /// Enum KNIEnum for KNI
            /// </summary>
            [EnumMember(Value = "KNI")]
            KNIEnum = 1131,
            
            /// <summary>
            /// Enum KNMEnum for KNM
            /// </summary>
            [EnumMember(Value = "KNM")]
            KNMEnum = 1132,
            
            /// <summary>
            /// Enum KNSEnum for KNS
            /// </summary>
            [EnumMember(Value = "KNS")]
            KNSEnum = 1133,
            
            /// <summary>
            /// Enum KNTEnum for KNT
            /// </summary>
            [EnumMember(Value = "KNT")]
            KNTEnum = 1134,
            
            /// <summary>
            /// Enum KOEnum for KO
            /// </summary>
            [EnumMember(Value = "KO")]
            KOEnum = 1135,
            
            /// <summary>
            /// Enum KPAEnum for KPA
            /// </summary>
            [EnumMember(Value = "KPA")]
            KPAEnum = 1136,
            
            /// <summary>
            /// Enum KPHEnum for KPH
            /// </summary>
            [EnumMember(Value = "KPH")]
            KPHEnum = 1137,
            
            /// <summary>
            /// Enum KPOEnum for KPO
            /// </summary>
            [EnumMember(Value = "KPO")]
            KPOEnum = 1138,
            
            /// <summary>
            /// Enum KPPEnum for KPP
            /// </summary>
            [EnumMember(Value = "KPP")]
            KPPEnum = 1139,
            
            /// <summary>
            /// Enum KREnum for KR
            /// </summary>
            [EnumMember(Value = "KR")]
            KREnum = 1140,
            
            /// <summary>
            /// Enum KSDEnum for KSD
            /// </summary>
            [EnumMember(Value = "KSD")]
            KSDEnum = 1141,
            
            /// <summary>
            /// Enum KSHEnum for KSH
            /// </summary>
            [EnumMember(Value = "KSH")]
            KSHEnum = 1142,
            
            /// <summary>
            /// Enum KTEnum for KT
            /// </summary>
            [EnumMember(Value = "KT")]
            KTEnum = 1143,
            
            /// <summary>
            /// Enum KTNEnum for KTN
            /// </summary>
            [EnumMember(Value = "KTN")]
            KTNEnum = 1144,
            
            /// <summary>
            /// Enum KUREnum for KUR
            /// </summary>
            [EnumMember(Value = "KUR")]
            KUREnum = 1145,
            
            /// <summary>
            /// Enum KVAEnum for KVA
            /// </summary>
            [EnumMember(Value = "KVA")]
            KVAEnum = 1146,
            
            /// <summary>
            /// Enum KVREnum for KVR
            /// </summary>
            [EnumMember(Value = "KVR")]
            KVREnum = 1147,
            
            /// <summary>
            /// Enum KVTEnum for KVT
            /// </summary>
            [EnumMember(Value = "KVT")]
            KVTEnum = 1148,
            
            /// <summary>
            /// Enum KWEnum for KW
            /// </summary>
            [EnumMember(Value = "KW")]
            KWEnum = 1149,
            
            /// <summary>
            /// Enum KWHEnum for KWH
            /// </summary>
            [EnumMember(Value = "KWH")]
            KWHEnum = 1150,
            
            /// <summary>
            /// Enum KWNEnum for KWN
            /// </summary>
            [EnumMember(Value = "KWN")]
            KWNEnum = 1151,
            
            /// <summary>
            /// Enum KWOEnum for KWO
            /// </summary>
            [EnumMember(Value = "KWO")]
            KWOEnum = 1152,
            
            /// <summary>
            /// Enum KWSEnum for KWS
            /// </summary>
            [EnumMember(Value = "KWS")]
            KWSEnum = 1153,
            
            /// <summary>
            /// Enum KWTEnum for KWT
            /// </summary>
            [EnumMember(Value = "KWT")]
            KWTEnum = 1154,
            
            /// <summary>
            /// Enum KXEnum for KX
            /// </summary>
            [EnumMember(Value = "KX")]
            KXEnum = 1155,
            
            /// <summary>
            /// Enum L10Enum for L10
            /// </summary>
            [EnumMember(Value = "L10")]
            L10Enum = 1156,
            
            /// <summary>
            /// Enum L11Enum for L11
            /// </summary>
            [EnumMember(Value = "L11")]
            L11Enum = 1157,
            
            /// <summary>
            /// Enum L12Enum for L12
            /// </summary>
            [EnumMember(Value = "L12")]
            L12Enum = 1158,
            
            /// <summary>
            /// Enum L13Enum for L13
            /// </summary>
            [EnumMember(Value = "L13")]
            L13Enum = 1159,
            
            /// <summary>
            /// Enum L14Enum for L14
            /// </summary>
            [EnumMember(Value = "L14")]
            L14Enum = 1160,
            
            /// <summary>
            /// Enum L15Enum for L15
            /// </summary>
            [EnumMember(Value = "L15")]
            L15Enum = 1161,
            
            /// <summary>
            /// Enum L16Enum for L16
            /// </summary>
            [EnumMember(Value = "L16")]
            L16Enum = 1162,
            
            /// <summary>
            /// Enum L17Enum for L17
            /// </summary>
            [EnumMember(Value = "L17")]
            L17Enum = 1163,
            
            /// <summary>
            /// Enum L18Enum for L18
            /// </summary>
            [EnumMember(Value = "L18")]
            L18Enum = 1164,
            
            /// <summary>
            /// Enum L19Enum for L19
            /// </summary>
            [EnumMember(Value = "L19")]
            L19Enum = 1165,
            
            /// <summary>
            /// Enum L2Enum for L2
            /// </summary>
            [EnumMember(Value = "L2")]
            L2Enum = 1166,
            
            /// <summary>
            /// Enum L20Enum for L20
            /// </summary>
            [EnumMember(Value = "L20")]
            L20Enum = 1167,
            
            /// <summary>
            /// Enum L21Enum for L21
            /// </summary>
            [EnumMember(Value = "L21")]
            L21Enum = 1168,
            
            /// <summary>
            /// Enum L23Enum for L23
            /// </summary>
            [EnumMember(Value = "L23")]
            L23Enum = 1169,
            
            /// <summary>
            /// Enum L24Enum for L24
            /// </summary>
            [EnumMember(Value = "L24")]
            L24Enum = 1170,
            
            /// <summary>
            /// Enum L25Enum for L25
            /// </summary>
            [EnumMember(Value = "L25")]
            L25Enum = 1171,
            
            /// <summary>
            /// Enum L26Enum for L26
            /// </summary>
            [EnumMember(Value = "L26")]
            L26Enum = 1172,
            
            /// <summary>
            /// Enum L27Enum for L27
            /// </summary>
            [EnumMember(Value = "L27")]
            L27Enum = 1173,
            
            /// <summary>
            /// Enum L28Enum for L28
            /// </summary>
            [EnumMember(Value = "L28")]
            L28Enum = 1174,
            
            /// <summary>
            /// Enum L29Enum for L29
            /// </summary>
            [EnumMember(Value = "L29")]
            L29Enum = 1175,
            
            /// <summary>
            /// Enum L30Enum for L30
            /// </summary>
            [EnumMember(Value = "L30")]
            L30Enum = 1176,
            
            /// <summary>
            /// Enum L31Enum for L31
            /// </summary>
            [EnumMember(Value = "L31")]
            L31Enum = 1177,
            
            /// <summary>
            /// Enum L32Enum for L32
            /// </summary>
            [EnumMember(Value = "L32")]
            L32Enum = 1178,
            
            /// <summary>
            /// Enum L33Enum for L33
            /// </summary>
            [EnumMember(Value = "L33")]
            L33Enum = 1179,
            
            /// <summary>
            /// Enum L34Enum for L34
            /// </summary>
            [EnumMember(Value = "L34")]
            L34Enum = 1180,
            
            /// <summary>
            /// Enum L35Enum for L35
            /// </summary>
            [EnumMember(Value = "L35")]
            L35Enum = 1181,
            
            /// <summary>
            /// Enum L36Enum for L36
            /// </summary>
            [EnumMember(Value = "L36")]
            L36Enum = 1182,
            
            /// <summary>
            /// Enum L37Enum for L37
            /// </summary>
            [EnumMember(Value = "L37")]
            L37Enum = 1183,
            
            /// <summary>
            /// Enum L38Enum for L38
            /// </summary>
            [EnumMember(Value = "L38")]
            L38Enum = 1184,
            
            /// <summary>
            /// Enum L39Enum for L39
            /// </summary>
            [EnumMember(Value = "L39")]
            L39Enum = 1185,
            
            /// <summary>
            /// Enum L40Enum for L40
            /// </summary>
            [EnumMember(Value = "L40")]
            L40Enum = 1186,
            
            /// <summary>
            /// Enum L41Enum for L41
            /// </summary>
            [EnumMember(Value = "L41")]
            L41Enum = 1187,
            
            /// <summary>
            /// Enum L42Enum for L42
            /// </summary>
            [EnumMember(Value = "L42")]
            L42Enum = 1188,
            
            /// <summary>
            /// Enum L43Enum for L43
            /// </summary>
            [EnumMember(Value = "L43")]
            L43Enum = 1189,
            
            /// <summary>
            /// Enum L44Enum for L44
            /// </summary>
            [EnumMember(Value = "L44")]
            L44Enum = 1190,
            
            /// <summary>
            /// Enum L45Enum for L45
            /// </summary>
            [EnumMember(Value = "L45")]
            L45Enum = 1191,
            
            /// <summary>
            /// Enum L46Enum for L46
            /// </summary>
            [EnumMember(Value = "L46")]
            L46Enum = 1192,
            
            /// <summary>
            /// Enum L47Enum for L47
            /// </summary>
            [EnumMember(Value = "L47")]
            L47Enum = 1193,
            
            /// <summary>
            /// Enum L48Enum for L48
            /// </summary>
            [EnumMember(Value = "L48")]
            L48Enum = 1194,
            
            /// <summary>
            /// Enum L49Enum for L49
            /// </summary>
            [EnumMember(Value = "L49")]
            L49Enum = 1195,
            
            /// <summary>
            /// Enum L50Enum for L50
            /// </summary>
            [EnumMember(Value = "L50")]
            L50Enum = 1196,
            
            /// <summary>
            /// Enum L51Enum for L51
            /// </summary>
            [EnumMember(Value = "L51")]
            L51Enum = 1197,
            
            /// <summary>
            /// Enum L52Enum for L52
            /// </summary>
            [EnumMember(Value = "L52")]
            L52Enum = 1198,
            
            /// <summary>
            /// Enum L53Enum for L53
            /// </summary>
            [EnumMember(Value = "L53")]
            L53Enum = 1199,
            
            /// <summary>
            /// Enum L54Enum for L54
            /// </summary>
            [EnumMember(Value = "L54")]
            L54Enum = 1200,
            
            /// <summary>
            /// Enum L55Enum for L55
            /// </summary>
            [EnumMember(Value = "L55")]
            L55Enum = 1201,
            
            /// <summary>
            /// Enum L56Enum for L56
            /// </summary>
            [EnumMember(Value = "L56")]
            L56Enum = 1202,
            
            /// <summary>
            /// Enum L57Enum for L57
            /// </summary>
            [EnumMember(Value = "L57")]
            L57Enum = 1203,
            
            /// <summary>
            /// Enum L58Enum for L58
            /// </summary>
            [EnumMember(Value = "L58")]
            L58Enum = 1204,
            
            /// <summary>
            /// Enum L59Enum for L59
            /// </summary>
            [EnumMember(Value = "L59")]
            L59Enum = 1205,
            
            /// <summary>
            /// Enum L60Enum for L60
            /// </summary>
            [EnumMember(Value = "L60")]
            L60Enum = 1206,
            
            /// <summary>
            /// Enum L63Enum for L63
            /// </summary>
            [EnumMember(Value = "L63")]
            L63Enum = 1207,
            
            /// <summary>
            /// Enum L64Enum for L64
            /// </summary>
            [EnumMember(Value = "L64")]
            L64Enum = 1208,
            
            /// <summary>
            /// Enum L65Enum for L65
            /// </summary>
            [EnumMember(Value = "L65")]
            L65Enum = 1209,
            
            /// <summary>
            /// Enum L66Enum for L66
            /// </summary>
            [EnumMember(Value = "L66")]
            L66Enum = 1210,
            
            /// <summary>
            /// Enum L67Enum for L67
            /// </summary>
            [EnumMember(Value = "L67")]
            L67Enum = 1211,
            
            /// <summary>
            /// Enum L68Enum for L68
            /// </summary>
            [EnumMember(Value = "L68")]
            L68Enum = 1212,
            
            /// <summary>
            /// Enum L69Enum for L69
            /// </summary>
            [EnumMember(Value = "L69")]
            L69Enum = 1213,
            
            /// <summary>
            /// Enum L70Enum for L70
            /// </summary>
            [EnumMember(Value = "L70")]
            L70Enum = 1214,
            
            /// <summary>
            /// Enum L71Enum for L71
            /// </summary>
            [EnumMember(Value = "L71")]
            L71Enum = 1215,
            
            /// <summary>
            /// Enum L72Enum for L72
            /// </summary>
            [EnumMember(Value = "L72")]
            L72Enum = 1216,
            
            /// <summary>
            /// Enum L73Enum for L73
            /// </summary>
            [EnumMember(Value = "L73")]
            L73Enum = 1217,
            
            /// <summary>
            /// Enum L74Enum for L74
            /// </summary>
            [EnumMember(Value = "L74")]
            L74Enum = 1218,
            
            /// <summary>
            /// Enum L75Enum for L75
            /// </summary>
            [EnumMember(Value = "L75")]
            L75Enum = 1219,
            
            /// <summary>
            /// Enum L76Enum for L76
            /// </summary>
            [EnumMember(Value = "L76")]
            L76Enum = 1220,
            
            /// <summary>
            /// Enum L77Enum for L77
            /// </summary>
            [EnumMember(Value = "L77")]
            L77Enum = 1221,
            
            /// <summary>
            /// Enum L78Enum for L78
            /// </summary>
            [EnumMember(Value = "L78")]
            L78Enum = 1222,
            
            /// <summary>
            /// Enum L79Enum for L79
            /// </summary>
            [EnumMember(Value = "L79")]
            L79Enum = 1223,
            
            /// <summary>
            /// Enum L80Enum for L80
            /// </summary>
            [EnumMember(Value = "L80")]
            L80Enum = 1224,
            
            /// <summary>
            /// Enum L81Enum for L81
            /// </summary>
            [EnumMember(Value = "L81")]
            L81Enum = 1225,
            
            /// <summary>
            /// Enum L82Enum for L82
            /// </summary>
            [EnumMember(Value = "L82")]
            L82Enum = 1226,
            
            /// <summary>
            /// Enum L83Enum for L83
            /// </summary>
            [EnumMember(Value = "L83")]
            L83Enum = 1227,
            
            /// <summary>
            /// Enum L84Enum for L84
            /// </summary>
            [EnumMember(Value = "L84")]
            L84Enum = 1228,
            
            /// <summary>
            /// Enum L85Enum for L85
            /// </summary>
            [EnumMember(Value = "L85")]
            L85Enum = 1229,
            
            /// <summary>
            /// Enum L86Enum for L86
            /// </summary>
            [EnumMember(Value = "L86")]
            L86Enum = 1230,
            
            /// <summary>
            /// Enum L87Enum for L87
            /// </summary>
            [EnumMember(Value = "L87")]
            L87Enum = 1231,
            
            /// <summary>
            /// Enum L88Enum for L88
            /// </summary>
            [EnumMember(Value = "L88")]
            L88Enum = 1232,
            
            /// <summary>
            /// Enum L89Enum for L89
            /// </summary>
            [EnumMember(Value = "L89")]
            L89Enum = 1233,
            
            /// <summary>
            /// Enum L90Enum for L90
            /// </summary>
            [EnumMember(Value = "L90")]
            L90Enum = 1234,
            
            /// <summary>
            /// Enum L91Enum for L91
            /// </summary>
            [EnumMember(Value = "L91")]
            L91Enum = 1235,
            
            /// <summary>
            /// Enum L92Enum for L92
            /// </summary>
            [EnumMember(Value = "L92")]
            L92Enum = 1236,
            
            /// <summary>
            /// Enum L93Enum for L93
            /// </summary>
            [EnumMember(Value = "L93")]
            L93Enum = 1237,
            
            /// <summary>
            /// Enum L94Enum for L94
            /// </summary>
            [EnumMember(Value = "L94")]
            L94Enum = 1238,
            
            /// <summary>
            /// Enum L95Enum for L95
            /// </summary>
            [EnumMember(Value = "L95")]
            L95Enum = 1239,
            
            /// <summary>
            /// Enum L96Enum for L96
            /// </summary>
            [EnumMember(Value = "L96")]
            L96Enum = 1240,
            
            /// <summary>
            /// Enum L98Enum for L98
            /// </summary>
            [EnumMember(Value = "L98")]
            L98Enum = 1241,
            
            /// <summary>
            /// Enum L99Enum for L99
            /// </summary>
            [EnumMember(Value = "L99")]
            L99Enum = 1242,
            
            /// <summary>
            /// Enum LAEnum for LA
            /// </summary>
            [EnumMember(Value = "LA")]
            LAEnum = 1243,
            
            /// <summary>
            /// Enum LACEnum for LAC
            /// </summary>
            [EnumMember(Value = "LAC")]
            LACEnum = 1244,
            
            /// <summary>
            /// Enum LBREnum for LBR
            /// </summary>
            [EnumMember(Value = "LBR")]
            LBREnum = 1245,
            
            /// <summary>
            /// Enum LBTEnum for LBT
            /// </summary>
            [EnumMember(Value = "LBT")]
            LBTEnum = 1246,
            
            /// <summary>
            /// Enum LDEnum for LD
            /// </summary>
            [EnumMember(Value = "LD")]
            LDEnum = 1247,
            
            /// <summary>
            /// Enum LEFEnum for LEF
            /// </summary>
            [EnumMember(Value = "LEF")]
            LEFEnum = 1248,
            
            /// <summary>
            /// Enum LFEnum for LF
            /// </summary>
            [EnumMember(Value = "LF")]
            LFEnum = 1249,
            
            /// <summary>
            /// Enum LHEnum for LH
            /// </summary>
            [EnumMember(Value = "LH")]
            LHEnum = 1250,
            
            /// <summary>
            /// Enum LKEnum for LK
            /// </summary>
            [EnumMember(Value = "LK")]
            LKEnum = 1251,
            
            /// <summary>
            /// Enum LMEnum for LM
            /// </summary>
            [EnumMember(Value = "LM")]
            LMEnum = 1252,
            
            /// <summary>
            /// Enum LNEnum for LN
            /// </summary>
            [EnumMember(Value = "LN")]
            LNEnum = 1253,
            
            /// <summary>
            /// Enum LOEnum for LO
            /// </summary>
            [EnumMember(Value = "LO")]
            LOEnum = 1254,
            
            /// <summary>
            /// Enum LPEnum for LP
            /// </summary>
            [EnumMember(Value = "LP")]
            LPEnum = 1255,
            
            /// <summary>
            /// Enum LPAEnum for LPA
            /// </summary>
            [EnumMember(Value = "LPA")]
            LPAEnum = 1256,
            
            /// <summary>
            /// Enum LREnum for LR
            /// </summary>
            [EnumMember(Value = "LR")]
            LREnum = 1257,
            
            /// <summary>
            /// Enum LSEnum for LS
            /// </summary>
            [EnumMember(Value = "LS")]
            LSEnum = 1258,
            
            /// <summary>
            /// Enum LTNEnum for LTN
            /// </summary>
            [EnumMember(Value = "LTN")]
            LTNEnum = 1259,
            
            /// <summary>
            /// Enum LTREnum for LTR
            /// </summary>
            [EnumMember(Value = "LTR")]
            LTREnum = 1260,
            
            /// <summary>
            /// Enum LUBEnum for LUB
            /// </summary>
            [EnumMember(Value = "LUB")]
            LUBEnum = 1261,
            
            /// <summary>
            /// Enum LUMEnum for LUM
            /// </summary>
            [EnumMember(Value = "LUM")]
            LUMEnum = 1262,
            
            /// <summary>
            /// Enum LUXEnum for LUX
            /// </summary>
            [EnumMember(Value = "LUX")]
            LUXEnum = 1263,
            
            /// <summary>
            /// Enum LYEnum for LY
            /// </summary>
            [EnumMember(Value = "LY")]
            LYEnum = 1264,
            
            /// <summary>
            /// Enum M1Enum for M1
            /// </summary>
            [EnumMember(Value = "M1")]
            M1Enum = 1265,
            
            /// <summary>
            /// Enum M10Enum for M10
            /// </summary>
            [EnumMember(Value = "M10")]
            M10Enum = 1266,
            
            /// <summary>
            /// Enum M11Enum for M11
            /// </summary>
            [EnumMember(Value = "M11")]
            M11Enum = 1267,
            
            /// <summary>
            /// Enum M12Enum for M12
            /// </summary>
            [EnumMember(Value = "M12")]
            M12Enum = 1268,
            
            /// <summary>
            /// Enum M13Enum for M13
            /// </summary>
            [EnumMember(Value = "M13")]
            M13Enum = 1269,
            
            /// <summary>
            /// Enum M14Enum for M14
            /// </summary>
            [EnumMember(Value = "M14")]
            M14Enum = 1270,
            
            /// <summary>
            /// Enum M15Enum for M15
            /// </summary>
            [EnumMember(Value = "M15")]
            M15Enum = 1271,
            
            /// <summary>
            /// Enum M16Enum for M16
            /// </summary>
            [EnumMember(Value = "M16")]
            M16Enum = 1272,
            
            /// <summary>
            /// Enum M17Enum for M17
            /// </summary>
            [EnumMember(Value = "M17")]
            M17Enum = 1273,
            
            /// <summary>
            /// Enum M18Enum for M18
            /// </summary>
            [EnumMember(Value = "M18")]
            M18Enum = 1274,
            
            /// <summary>
            /// Enum M19Enum for M19
            /// </summary>
            [EnumMember(Value = "M19")]
            M19Enum = 1275,
            
            /// <summary>
            /// Enum M20Enum for M20
            /// </summary>
            [EnumMember(Value = "M20")]
            M20Enum = 1276,
            
            /// <summary>
            /// Enum M21Enum for M21
            /// </summary>
            [EnumMember(Value = "M21")]
            M21Enum = 1277,
            
            /// <summary>
            /// Enum M22Enum for M22
            /// </summary>
            [EnumMember(Value = "M22")]
            M22Enum = 1278,
            
            /// <summary>
            /// Enum M23Enum for M23
            /// </summary>
            [EnumMember(Value = "M23")]
            M23Enum = 1279,
            
            /// <summary>
            /// Enum M24Enum for M24
            /// </summary>
            [EnumMember(Value = "M24")]
            M24Enum = 1280,
            
            /// <summary>
            /// Enum M25Enum for M25
            /// </summary>
            [EnumMember(Value = "M25")]
            M25Enum = 1281,
            
            /// <summary>
            /// Enum M26Enum for M26
            /// </summary>
            [EnumMember(Value = "M26")]
            M26Enum = 1282,
            
            /// <summary>
            /// Enum M27Enum for M27
            /// </summary>
            [EnumMember(Value = "M27")]
            M27Enum = 1283,
            
            /// <summary>
            /// Enum M29Enum for M29
            /// </summary>
            [EnumMember(Value = "M29")]
            M29Enum = 1284,
            
            /// <summary>
            /// Enum M30Enum for M30
            /// </summary>
            [EnumMember(Value = "M30")]
            M30Enum = 1285,
            
            /// <summary>
            /// Enum M31Enum for M31
            /// </summary>
            [EnumMember(Value = "M31")]
            M31Enum = 1286,
            
            /// <summary>
            /// Enum M32Enum for M32
            /// </summary>
            [EnumMember(Value = "M32")]
            M32Enum = 1287,
            
            /// <summary>
            /// Enum M33Enum for M33
            /// </summary>
            [EnumMember(Value = "M33")]
            M33Enum = 1288,
            
            /// <summary>
            /// Enum M34Enum for M34
            /// </summary>
            [EnumMember(Value = "M34")]
            M34Enum = 1289,
            
            /// <summary>
            /// Enum M35Enum for M35
            /// </summary>
            [EnumMember(Value = "M35")]
            M35Enum = 1290,
            
            /// <summary>
            /// Enum M36Enum for M36
            /// </summary>
            [EnumMember(Value = "M36")]
            M36Enum = 1291,
            
            /// <summary>
            /// Enum M37Enum for M37
            /// </summary>
            [EnumMember(Value = "M37")]
            M37Enum = 1292,
            
            /// <summary>
            /// Enum M38Enum for M38
            /// </summary>
            [EnumMember(Value = "M38")]
            M38Enum = 1293,
            
            /// <summary>
            /// Enum M39Enum for M39
            /// </summary>
            [EnumMember(Value = "M39")]
            M39Enum = 1294,
            
            /// <summary>
            /// Enum M4Enum for M4
            /// </summary>
            [EnumMember(Value = "M4")]
            M4Enum = 1295,
            
            /// <summary>
            /// Enum M40Enum for M40
            /// </summary>
            [EnumMember(Value = "M40")]
            M40Enum = 1296,
            
            /// <summary>
            /// Enum M41Enum for M41
            /// </summary>
            [EnumMember(Value = "M41")]
            M41Enum = 1297,
            
            /// <summary>
            /// Enum M42Enum for M42
            /// </summary>
            [EnumMember(Value = "M42")]
            M42Enum = 1298,
            
            /// <summary>
            /// Enum M43Enum for M43
            /// </summary>
            [EnumMember(Value = "M43")]
            M43Enum = 1299,
            
            /// <summary>
            /// Enum M44Enum for M44
            /// </summary>
            [EnumMember(Value = "M44")]
            M44Enum = 1300,
            
            /// <summary>
            /// Enum M45Enum for M45
            /// </summary>
            [EnumMember(Value = "M45")]
            M45Enum = 1301,
            
            /// <summary>
            /// Enum M46Enum for M46
            /// </summary>
            [EnumMember(Value = "M46")]
            M46Enum = 1302,
            
            /// <summary>
            /// Enum M47Enum for M47
            /// </summary>
            [EnumMember(Value = "M47")]
            M47Enum = 1303,
            
            /// <summary>
            /// Enum M48Enum for M48
            /// </summary>
            [EnumMember(Value = "M48")]
            M48Enum = 1304,
            
            /// <summary>
            /// Enum M49Enum for M49
            /// </summary>
            [EnumMember(Value = "M49")]
            M49Enum = 1305,
            
            /// <summary>
            /// Enum M5Enum for M5
            /// </summary>
            [EnumMember(Value = "M5")]
            M5Enum = 1306,
            
            /// <summary>
            /// Enum M50Enum for M50
            /// </summary>
            [EnumMember(Value = "M50")]
            M50Enum = 1307,
            
            /// <summary>
            /// Enum M51Enum for M51
            /// </summary>
            [EnumMember(Value = "M51")]
            M51Enum = 1308,
            
            /// <summary>
            /// Enum M52Enum for M52
            /// </summary>
            [EnumMember(Value = "M52")]
            M52Enum = 1309,
            
            /// <summary>
            /// Enum M53Enum for M53
            /// </summary>
            [EnumMember(Value = "M53")]
            M53Enum = 1310,
            
            /// <summary>
            /// Enum M55Enum for M55
            /// </summary>
            [EnumMember(Value = "M55")]
            M55Enum = 1311,
            
            /// <summary>
            /// Enum M56Enum for M56
            /// </summary>
            [EnumMember(Value = "M56")]
            M56Enum = 1312,
            
            /// <summary>
            /// Enum M57Enum for M57
            /// </summary>
            [EnumMember(Value = "M57")]
            M57Enum = 1313,
            
            /// <summary>
            /// Enum M58Enum for M58
            /// </summary>
            [EnumMember(Value = "M58")]
            M58Enum = 1314,
            
            /// <summary>
            /// Enum M59Enum for M59
            /// </summary>
            [EnumMember(Value = "M59")]
            M59Enum = 1315,
            
            /// <summary>
            /// Enum M60Enum for M60
            /// </summary>
            [EnumMember(Value = "M60")]
            M60Enum = 1316,
            
            /// <summary>
            /// Enum M61Enum for M61
            /// </summary>
            [EnumMember(Value = "M61")]
            M61Enum = 1317,
            
            /// <summary>
            /// Enum M62Enum for M62
            /// </summary>
            [EnumMember(Value = "M62")]
            M62Enum = 1318,
            
            /// <summary>
            /// Enum M63Enum for M63
            /// </summary>
            [EnumMember(Value = "M63")]
            M63Enum = 1319,
            
            /// <summary>
            /// Enum M64Enum for M64
            /// </summary>
            [EnumMember(Value = "M64")]
            M64Enum = 1320,
            
            /// <summary>
            /// Enum M65Enum for M65
            /// </summary>
            [EnumMember(Value = "M65")]
            M65Enum = 1321,
            
            /// <summary>
            /// Enum M66Enum for M66
            /// </summary>
            [EnumMember(Value = "M66")]
            M66Enum = 1322,
            
            /// <summary>
            /// Enum M67Enum for M67
            /// </summary>
            [EnumMember(Value = "M67")]
            M67Enum = 1323,
            
            /// <summary>
            /// Enum M68Enum for M68
            /// </summary>
            [EnumMember(Value = "M68")]
            M68Enum = 1324,
            
            /// <summary>
            /// Enum M69Enum for M69
            /// </summary>
            [EnumMember(Value = "M69")]
            M69Enum = 1325,
            
            /// <summary>
            /// Enum M7Enum for M7
            /// </summary>
            [EnumMember(Value = "M7")]
            M7Enum = 1326,
            
            /// <summary>
            /// Enum M70Enum for M70
            /// </summary>
            [EnumMember(Value = "M70")]
            M70Enum = 1327,
            
            /// <summary>
            /// Enum M71Enum for M71
            /// </summary>
            [EnumMember(Value = "M71")]
            M71Enum = 1328,
            
            /// <summary>
            /// Enum M72Enum for M72
            /// </summary>
            [EnumMember(Value = "M72")]
            M72Enum = 1329,
            
            /// <summary>
            /// Enum M73Enum for M73
            /// </summary>
            [EnumMember(Value = "M73")]
            M73Enum = 1330,
            
            /// <summary>
            /// Enum M74Enum for M74
            /// </summary>
            [EnumMember(Value = "M74")]
            M74Enum = 1331,
            
            /// <summary>
            /// Enum M75Enum for M75
            /// </summary>
            [EnumMember(Value = "M75")]
            M75Enum = 1332,
            
            /// <summary>
            /// Enum M76Enum for M76
            /// </summary>
            [EnumMember(Value = "M76")]
            M76Enum = 1333,
            
            /// <summary>
            /// Enum M77Enum for M77
            /// </summary>
            [EnumMember(Value = "M77")]
            M77Enum = 1334,
            
            /// <summary>
            /// Enum M78Enum for M78
            /// </summary>
            [EnumMember(Value = "M78")]
            M78Enum = 1335,
            
            /// <summary>
            /// Enum M79Enum for M79
            /// </summary>
            [EnumMember(Value = "M79")]
            M79Enum = 1336,
            
            /// <summary>
            /// Enum M80Enum for M80
            /// </summary>
            [EnumMember(Value = "M80")]
            M80Enum = 1337,
            
            /// <summary>
            /// Enum M81Enum for M81
            /// </summary>
            [EnumMember(Value = "M81")]
            M81Enum = 1338,
            
            /// <summary>
            /// Enum M82Enum for M82
            /// </summary>
            [EnumMember(Value = "M82")]
            M82Enum = 1339,
            
            /// <summary>
            /// Enum M83Enum for M83
            /// </summary>
            [EnumMember(Value = "M83")]
            M83Enum = 1340,
            
            /// <summary>
            /// Enum M84Enum for M84
            /// </summary>
            [EnumMember(Value = "M84")]
            M84Enum = 1341,
            
            /// <summary>
            /// Enum M85Enum for M85
            /// </summary>
            [EnumMember(Value = "M85")]
            M85Enum = 1342,
            
            /// <summary>
            /// Enum M86Enum for M86
            /// </summary>
            [EnumMember(Value = "M86")]
            M86Enum = 1343,
            
            /// <summary>
            /// Enum M87Enum for M87
            /// </summary>
            [EnumMember(Value = "M87")]
            M87Enum = 1344,
            
            /// <summary>
            /// Enum M88Enum for M88
            /// </summary>
            [EnumMember(Value = "M88")]
            M88Enum = 1345,
            
            /// <summary>
            /// Enum M89Enum for M89
            /// </summary>
            [EnumMember(Value = "M89")]
            M89Enum = 1346,
            
            /// <summary>
            /// Enum M9Enum for M9
            /// </summary>
            [EnumMember(Value = "M9")]
            M9Enum = 1347,
            
            /// <summary>
            /// Enum M90Enum for M90
            /// </summary>
            [EnumMember(Value = "M90")]
            M90Enum = 1348,
            
            /// <summary>
            /// Enum M91Enum for M91
            /// </summary>
            [EnumMember(Value = "M91")]
            M91Enum = 1349,
            
            /// <summary>
            /// Enum M92Enum for M92
            /// </summary>
            [EnumMember(Value = "M92")]
            M92Enum = 1350,
            
            /// <summary>
            /// Enum M93Enum for M93
            /// </summary>
            [EnumMember(Value = "M93")]
            M93Enum = 1351,
            
            /// <summary>
            /// Enum M94Enum for M94
            /// </summary>
            [EnumMember(Value = "M94")]
            M94Enum = 1352,
            
            /// <summary>
            /// Enum M95Enum for M95
            /// </summary>
            [EnumMember(Value = "M95")]
            M95Enum = 1353,
            
            /// <summary>
            /// Enum M96Enum for M96
            /// </summary>
            [EnumMember(Value = "M96")]
            M96Enum = 1354,
            
            /// <summary>
            /// Enum M97Enum for M97
            /// </summary>
            [EnumMember(Value = "M97")]
            M97Enum = 1355,
            
            /// <summary>
            /// Enum M98Enum for M98
            /// </summary>
            [EnumMember(Value = "M98")]
            M98Enum = 1356,
            
            /// <summary>
            /// Enum M99Enum for M99
            /// </summary>
            [EnumMember(Value = "M99")]
            M99Enum = 1357,
            
            /// <summary>
            /// Enum MAHEnum for MAH
            /// </summary>
            [EnumMember(Value = "MAH")]
            MAHEnum = 1358,
            
            /// <summary>
            /// Enum MALEnum for MAL
            /// </summary>
            [EnumMember(Value = "MAL")]
            MALEnum = 1359,
            
            /// <summary>
            /// Enum MAMEnum for MAM
            /// </summary>
            [EnumMember(Value = "MAM")]
            MAMEnum = 1360,
            
            /// <summary>
            /// Enum MAREnum for MAR
            /// </summary>
            [EnumMember(Value = "MAR")]
            MAREnum = 1361,
            
            /// <summary>
            /// Enum MAWEnum for MAW
            /// </summary>
            [EnumMember(Value = "MAW")]
            MAWEnum = 1362,
            
            /// <summary>
            /// Enum MBEEnum for MBE
            /// </summary>
            [EnumMember(Value = "MBE")]
            MBEEnum = 1363,
            
            /// <summary>
            /// Enum MBFEnum for MBF
            /// </summary>
            [EnumMember(Value = "MBF")]
            MBFEnum = 1364,
            
            /// <summary>
            /// Enum MBREnum for MBR
            /// </summary>
            [EnumMember(Value = "MBR")]
            MBREnum = 1365,
            
            /// <summary>
            /// Enum MCEnum for MC
            /// </summary>
            [EnumMember(Value = "MC")]
            MCEnum = 1366,
            
            /// <summary>
            /// Enum MCUEnum for MCU
            /// </summary>
            [EnumMember(Value = "MCU")]
            MCUEnum = 1367,
            
            /// <summary>
            /// Enum MDEnum for MD
            /// </summary>
            [EnumMember(Value = "MD")]
            MDEnum = 1368,
            
            /// <summary>
            /// Enum MGMEnum for MGM
            /// </summary>
            [EnumMember(Value = "MGM")]
            MGMEnum = 1369,
            
            /// <summary>
            /// Enum MHZEnum for MHZ
            /// </summary>
            [EnumMember(Value = "MHZ")]
            MHZEnum = 1370,
            
            /// <summary>
            /// Enum MIKEnum for MIK
            /// </summary>
            [EnumMember(Value = "MIK")]
            MIKEnum = 1371,
            
            /// <summary>
            /// Enum MILEnum for MIL
            /// </summary>
            [EnumMember(Value = "MIL")]
            MILEnum = 1372,
            
            /// <summary>
            /// Enum MINEnum for MIN
            /// </summary>
            [EnumMember(Value = "MIN")]
            MINEnum = 1373,
            
            /// <summary>
            /// Enum MIOEnum for MIO
            /// </summary>
            [EnumMember(Value = "MIO")]
            MIOEnum = 1374,
            
            /// <summary>
            /// Enum MIUEnum for MIU
            /// </summary>
            [EnumMember(Value = "MIU")]
            MIUEnum = 1375,
            
            /// <summary>
            /// Enum MLDEnum for MLD
            /// </summary>
            [EnumMember(Value = "MLD")]
            MLDEnum = 1376,
            
            /// <summary>
            /// Enum MLTEnum for MLT
            /// </summary>
            [EnumMember(Value = "MLT")]
            MLTEnum = 1377,
            
            /// <summary>
            /// Enum MMKEnum for MMK
            /// </summary>
            [EnumMember(Value = "MMK")]
            MMKEnum = 1378,
            
            /// <summary>
            /// Enum MMQEnum for MMQ
            /// </summary>
            [EnumMember(Value = "MMQ")]
            MMQEnum = 1379,
            
            /// <summary>
            /// Enum MMTEnum for MMT
            /// </summary>
            [EnumMember(Value = "MMT")]
            MMTEnum = 1380,
            
            /// <summary>
            /// Enum MNDEnum for MND
            /// </summary>
            [EnumMember(Value = "MND")]
            MNDEnum = 1381,
            
            /// <summary>
            /// Enum MONEnum for MON
            /// </summary>
            [EnumMember(Value = "MON")]
            MONEnum = 1382,
            
            /// <summary>
            /// Enum MPAEnum for MPA
            /// </summary>
            [EnumMember(Value = "MPA")]
            MPAEnum = 1383,
            
            /// <summary>
            /// Enum MQHEnum for MQH
            /// </summary>
            [EnumMember(Value = "MQH")]
            MQHEnum = 1384,
            
            /// <summary>
            /// Enum MQSEnum for MQS
            /// </summary>
            [EnumMember(Value = "MQS")]
            MQSEnum = 1385,
            
            /// <summary>
            /// Enum MSKEnum for MSK
            /// </summary>
            [EnumMember(Value = "MSK")]
            MSKEnum = 1386,
            
            /// <summary>
            /// Enum MTKEnum for MTK
            /// </summary>
            [EnumMember(Value = "MTK")]
            MTKEnum = 1387,
            
            /// <summary>
            /// Enum MTQEnum for MTQ
            /// </summary>
            [EnumMember(Value = "MTQ")]
            MTQEnum = 1388,
            
            /// <summary>
            /// Enum MTREnum for MTR
            /// </summary>
            [EnumMember(Value = "MTR")]
            MTREnum = 1389,
            
            /// <summary>
            /// Enum MTSEnum for MTS
            /// </summary>
            [EnumMember(Value = "MTS")]
            MTSEnum = 1390,
            
            /// <summary>
            /// Enum MVAEnum for MVA
            /// </summary>
            [EnumMember(Value = "MVA")]
            MVAEnum = 1391,
            
            /// <summary>
            /// Enum MWHEnum for MWH
            /// </summary>
            [EnumMember(Value = "MWH")]
            MWHEnum = 1392,
            
            /// <summary>
            /// Enum N1Enum for N1
            /// </summary>
            [EnumMember(Value = "N1")]
            N1Enum = 1393,
            
            /// <summary>
            /// Enum N10Enum for N10
            /// </summary>
            [EnumMember(Value = "N10")]
            N10Enum = 1394,
            
            /// <summary>
            /// Enum N11Enum for N11
            /// </summary>
            [EnumMember(Value = "N11")]
            N11Enum = 1395,
            
            /// <summary>
            /// Enum N12Enum for N12
            /// </summary>
            [EnumMember(Value = "N12")]
            N12Enum = 1396,
            
            /// <summary>
            /// Enum N13Enum for N13
            /// </summary>
            [EnumMember(Value = "N13")]
            N13Enum = 1397,
            
            /// <summary>
            /// Enum N14Enum for N14
            /// </summary>
            [EnumMember(Value = "N14")]
            N14Enum = 1398,
            
            /// <summary>
            /// Enum N15Enum for N15
            /// </summary>
            [EnumMember(Value = "N15")]
            N15Enum = 1399,
            
            /// <summary>
            /// Enum N16Enum for N16
            /// </summary>
            [EnumMember(Value = "N16")]
            N16Enum = 1400,
            
            /// <summary>
            /// Enum N17Enum for N17
            /// </summary>
            [EnumMember(Value = "N17")]
            N17Enum = 1401,
            
            /// <summary>
            /// Enum N18Enum for N18
            /// </summary>
            [EnumMember(Value = "N18")]
            N18Enum = 1402,
            
            /// <summary>
            /// Enum N19Enum for N19
            /// </summary>
            [EnumMember(Value = "N19")]
            N19Enum = 1403,
            
            /// <summary>
            /// Enum N20Enum for N20
            /// </summary>
            [EnumMember(Value = "N20")]
            N20Enum = 1404,
            
            /// <summary>
            /// Enum N21Enum for N21
            /// </summary>
            [EnumMember(Value = "N21")]
            N21Enum = 1405,
            
            /// <summary>
            /// Enum N22Enum for N22
            /// </summary>
            [EnumMember(Value = "N22")]
            N22Enum = 1406,
            
            /// <summary>
            /// Enum N23Enum for N23
            /// </summary>
            [EnumMember(Value = "N23")]
            N23Enum = 1407,
            
            /// <summary>
            /// Enum N24Enum for N24
            /// </summary>
            [EnumMember(Value = "N24")]
            N24Enum = 1408,
            
            /// <summary>
            /// Enum N25Enum for N25
            /// </summary>
            [EnumMember(Value = "N25")]
            N25Enum = 1409,
            
            /// <summary>
            /// Enum N26Enum for N26
            /// </summary>
            [EnumMember(Value = "N26")]
            N26Enum = 1410,
            
            /// <summary>
            /// Enum N27Enum for N27
            /// </summary>
            [EnumMember(Value = "N27")]
            N27Enum = 1411,
            
            /// <summary>
            /// Enum N28Enum for N28
            /// </summary>
            [EnumMember(Value = "N28")]
            N28Enum = 1412,
            
            /// <summary>
            /// Enum N29Enum for N29
            /// </summary>
            [EnumMember(Value = "N29")]
            N29Enum = 1413,
            
            /// <summary>
            /// Enum N3Enum for N3
            /// </summary>
            [EnumMember(Value = "N3")]
            N3Enum = 1414,
            
            /// <summary>
            /// Enum N30Enum for N30
            /// </summary>
            [EnumMember(Value = "N30")]
            N30Enum = 1415,
            
            /// <summary>
            /// Enum N31Enum for N31
            /// </summary>
            [EnumMember(Value = "N31")]
            N31Enum = 1416,
            
            /// <summary>
            /// Enum N32Enum for N32
            /// </summary>
            [EnumMember(Value = "N32")]
            N32Enum = 1417,
            
            /// <summary>
            /// Enum N33Enum for N33
            /// </summary>
            [EnumMember(Value = "N33")]
            N33Enum = 1418,
            
            /// <summary>
            /// Enum N34Enum for N34
            /// </summary>
            [EnumMember(Value = "N34")]
            N34Enum = 1419,
            
            /// <summary>
            /// Enum N35Enum for N35
            /// </summary>
            [EnumMember(Value = "N35")]
            N35Enum = 1420,
            
            /// <summary>
            /// Enum N36Enum for N36
            /// </summary>
            [EnumMember(Value = "N36")]
            N36Enum = 1421,
            
            /// <summary>
            /// Enum N37Enum for N37
            /// </summary>
            [EnumMember(Value = "N37")]
            N37Enum = 1422,
            
            /// <summary>
            /// Enum N38Enum for N38
            /// </summary>
            [EnumMember(Value = "N38")]
            N38Enum = 1423,
            
            /// <summary>
            /// Enum N39Enum for N39
            /// </summary>
            [EnumMember(Value = "N39")]
            N39Enum = 1424,
            
            /// <summary>
            /// Enum N40Enum for N40
            /// </summary>
            [EnumMember(Value = "N40")]
            N40Enum = 1425,
            
            /// <summary>
            /// Enum N41Enum for N41
            /// </summary>
            [EnumMember(Value = "N41")]
            N41Enum = 1426,
            
            /// <summary>
            /// Enum N42Enum for N42
            /// </summary>
            [EnumMember(Value = "N42")]
            N42Enum = 1427,
            
            /// <summary>
            /// Enum N43Enum for N43
            /// </summary>
            [EnumMember(Value = "N43")]
            N43Enum = 1428,
            
            /// <summary>
            /// Enum N44Enum for N44
            /// </summary>
            [EnumMember(Value = "N44")]
            N44Enum = 1429,
            
            /// <summary>
            /// Enum N45Enum for N45
            /// </summary>
            [EnumMember(Value = "N45")]
            N45Enum = 1430,
            
            /// <summary>
            /// Enum N46Enum for N46
            /// </summary>
            [EnumMember(Value = "N46")]
            N46Enum = 1431,
            
            /// <summary>
            /// Enum N47Enum for N47
            /// </summary>
            [EnumMember(Value = "N47")]
            N47Enum = 1432,
            
            /// <summary>
            /// Enum N48Enum for N48
            /// </summary>
            [EnumMember(Value = "N48")]
            N48Enum = 1433,
            
            /// <summary>
            /// Enum N49Enum for N49
            /// </summary>
            [EnumMember(Value = "N49")]
            N49Enum = 1434,
            
            /// <summary>
            /// Enum N50Enum for N50
            /// </summary>
            [EnumMember(Value = "N50")]
            N50Enum = 1435,
            
            /// <summary>
            /// Enum N51Enum for N51
            /// </summary>
            [EnumMember(Value = "N51")]
            N51Enum = 1436,
            
            /// <summary>
            /// Enum N52Enum for N52
            /// </summary>
            [EnumMember(Value = "N52")]
            N52Enum = 1437,
            
            /// <summary>
            /// Enum N53Enum for N53
            /// </summary>
            [EnumMember(Value = "N53")]
            N53Enum = 1438,
            
            /// <summary>
            /// Enum N54Enum for N54
            /// </summary>
            [EnumMember(Value = "N54")]
            N54Enum = 1439,
            
            /// <summary>
            /// Enum N55Enum for N55
            /// </summary>
            [EnumMember(Value = "N55")]
            N55Enum = 1440,
            
            /// <summary>
            /// Enum N56Enum for N56
            /// </summary>
            [EnumMember(Value = "N56")]
            N56Enum = 1441,
            
            /// <summary>
            /// Enum N57Enum for N57
            /// </summary>
            [EnumMember(Value = "N57")]
            N57Enum = 1442,
            
            /// <summary>
            /// Enum N58Enum for N58
            /// </summary>
            [EnumMember(Value = "N58")]
            N58Enum = 1443,
            
            /// <summary>
            /// Enum N59Enum for N59
            /// </summary>
            [EnumMember(Value = "N59")]
            N59Enum = 1444,
            
            /// <summary>
            /// Enum N60Enum for N60
            /// </summary>
            [EnumMember(Value = "N60")]
            N60Enum = 1445,
            
            /// <summary>
            /// Enum N61Enum for N61
            /// </summary>
            [EnumMember(Value = "N61")]
            N61Enum = 1446,
            
            /// <summary>
            /// Enum N62Enum for N62
            /// </summary>
            [EnumMember(Value = "N62")]
            N62Enum = 1447,
            
            /// <summary>
            /// Enum N63Enum for N63
            /// </summary>
            [EnumMember(Value = "N63")]
            N63Enum = 1448,
            
            /// <summary>
            /// Enum N64Enum for N64
            /// </summary>
            [EnumMember(Value = "N64")]
            N64Enum = 1449,
            
            /// <summary>
            /// Enum N65Enum for N65
            /// </summary>
            [EnumMember(Value = "N65")]
            N65Enum = 1450,
            
            /// <summary>
            /// Enum N66Enum for N66
            /// </summary>
            [EnumMember(Value = "N66")]
            N66Enum = 1451,
            
            /// <summary>
            /// Enum N67Enum for N67
            /// </summary>
            [EnumMember(Value = "N67")]
            N67Enum = 1452,
            
            /// <summary>
            /// Enum N68Enum for N68
            /// </summary>
            [EnumMember(Value = "N68")]
            N68Enum = 1453,
            
            /// <summary>
            /// Enum N69Enum for N69
            /// </summary>
            [EnumMember(Value = "N69")]
            N69Enum = 1454,
            
            /// <summary>
            /// Enum N70Enum for N70
            /// </summary>
            [EnumMember(Value = "N70")]
            N70Enum = 1455,
            
            /// <summary>
            /// Enum N71Enum for N71
            /// </summary>
            [EnumMember(Value = "N71")]
            N71Enum = 1456,
            
            /// <summary>
            /// Enum N72Enum for N72
            /// </summary>
            [EnumMember(Value = "N72")]
            N72Enum = 1457,
            
            /// <summary>
            /// Enum N73Enum for N73
            /// </summary>
            [EnumMember(Value = "N73")]
            N73Enum = 1458,
            
            /// <summary>
            /// Enum N74Enum for N74
            /// </summary>
            [EnumMember(Value = "N74")]
            N74Enum = 1459,
            
            /// <summary>
            /// Enum N75Enum for N75
            /// </summary>
            [EnumMember(Value = "N75")]
            N75Enum = 1460,
            
            /// <summary>
            /// Enum N76Enum for N76
            /// </summary>
            [EnumMember(Value = "N76")]
            N76Enum = 1461,
            
            /// <summary>
            /// Enum N77Enum for N77
            /// </summary>
            [EnumMember(Value = "N77")]
            N77Enum = 1462,
            
            /// <summary>
            /// Enum N78Enum for N78
            /// </summary>
            [EnumMember(Value = "N78")]
            N78Enum = 1463,
            
            /// <summary>
            /// Enum N79Enum for N79
            /// </summary>
            [EnumMember(Value = "N79")]
            N79Enum = 1464,
            
            /// <summary>
            /// Enum N80Enum for N80
            /// </summary>
            [EnumMember(Value = "N80")]
            N80Enum = 1465,
            
            /// <summary>
            /// Enum N81Enum for N81
            /// </summary>
            [EnumMember(Value = "N81")]
            N81Enum = 1466,
            
            /// <summary>
            /// Enum N82Enum for N82
            /// </summary>
            [EnumMember(Value = "N82")]
            N82Enum = 1467,
            
            /// <summary>
            /// Enum N83Enum for N83
            /// </summary>
            [EnumMember(Value = "N83")]
            N83Enum = 1468,
            
            /// <summary>
            /// Enum N84Enum for N84
            /// </summary>
            [EnumMember(Value = "N84")]
            N84Enum = 1469,
            
            /// <summary>
            /// Enum N85Enum for N85
            /// </summary>
            [EnumMember(Value = "N85")]
            N85Enum = 1470,
            
            /// <summary>
            /// Enum N86Enum for N86
            /// </summary>
            [EnumMember(Value = "N86")]
            N86Enum = 1471,
            
            /// <summary>
            /// Enum N87Enum for N87
            /// </summary>
            [EnumMember(Value = "N87")]
            N87Enum = 1472,
            
            /// <summary>
            /// Enum N88Enum for N88
            /// </summary>
            [EnumMember(Value = "N88")]
            N88Enum = 1473,
            
            /// <summary>
            /// Enum N89Enum for N89
            /// </summary>
            [EnumMember(Value = "N89")]
            N89Enum = 1474,
            
            /// <summary>
            /// Enum N90Enum for N90
            /// </summary>
            [EnumMember(Value = "N90")]
            N90Enum = 1475,
            
            /// <summary>
            /// Enum N91Enum for N91
            /// </summary>
            [EnumMember(Value = "N91")]
            N91Enum = 1476,
            
            /// <summary>
            /// Enum N92Enum for N92
            /// </summary>
            [EnumMember(Value = "N92")]
            N92Enum = 1477,
            
            /// <summary>
            /// Enum N93Enum for N93
            /// </summary>
            [EnumMember(Value = "N93")]
            N93Enum = 1478,
            
            /// <summary>
            /// Enum N94Enum for N94
            /// </summary>
            [EnumMember(Value = "N94")]
            N94Enum = 1479,
            
            /// <summary>
            /// Enum N95Enum for N95
            /// </summary>
            [EnumMember(Value = "N95")]
            N95Enum = 1480,
            
            /// <summary>
            /// Enum N96Enum for N96
            /// </summary>
            [EnumMember(Value = "N96")]
            N96Enum = 1481,
            
            /// <summary>
            /// Enum N97Enum for N97
            /// </summary>
            [EnumMember(Value = "N97")]
            N97Enum = 1482,
            
            /// <summary>
            /// Enum N98Enum for N98
            /// </summary>
            [EnumMember(Value = "N98")]
            N98Enum = 1483,
            
            /// <summary>
            /// Enum N99Enum for N99
            /// </summary>
            [EnumMember(Value = "N99")]
            N99Enum = 1484,
            
            /// <summary>
            /// Enum NAEnum for NA
            /// </summary>
            [EnumMember(Value = "NA")]
            NAEnum = 1485,
            
            /// <summary>
            /// Enum NAREnum for NAR
            /// </summary>
            [EnumMember(Value = "NAR")]
            NAREnum = 1486,
            
            /// <summary>
            /// Enum NCLEnum for NCL
            /// </summary>
            [EnumMember(Value = "NCL")]
            NCLEnum = 1487,
            
            /// <summary>
            /// Enum NEWEnum for NEW
            /// </summary>
            [EnumMember(Value = "NEW")]
            NEWEnum = 1488,
            
            /// <summary>
            /// Enum NFEnum for NF
            /// </summary>
            [EnumMember(Value = "NF")]
            NFEnum = 1489,
            
            /// <summary>
            /// Enum NILEnum for NIL
            /// </summary>
            [EnumMember(Value = "NIL")]
            NILEnum = 1490,
            
            /// <summary>
            /// Enum NIUEnum for NIU
            /// </summary>
            [EnumMember(Value = "NIU")]
            NIUEnum = 1491,
            
            /// <summary>
            /// Enum NLEnum for NL
            /// </summary>
            [EnumMember(Value = "NL")]
            NLEnum = 1492,
            
            /// <summary>
            /// Enum NM3Enum for NM3
            /// </summary>
            [EnumMember(Value = "NM3")]
            NM3Enum = 1493,
            
            /// <summary>
            /// Enum NMIEnum for NMI
            /// </summary>
            [EnumMember(Value = "NMI")]
            NMIEnum = 1494,
            
            /// <summary>
            /// Enum NMPEnum for NMP
            /// </summary>
            [EnumMember(Value = "NMP")]
            NMPEnum = 1495,
            
            /// <summary>
            /// Enum NPTEnum for NPT
            /// </summary>
            [EnumMember(Value = "NPT")]
            NPTEnum = 1496,
            
            /// <summary>
            /// Enum NTEnum for NT
            /// </summary>
            [EnumMember(Value = "NT")]
            NTEnum = 1497,
            
            /// <summary>
            /// Enum NUEnum for NU
            /// </summary>
            [EnumMember(Value = "NU")]
            NUEnum = 1498,
            
            /// <summary>
            /// Enum NXEnum for NX
            /// </summary>
            [EnumMember(Value = "NX")]
            NXEnum = 1499,
            
            /// <summary>
            /// Enum OAEnum for OA
            /// </summary>
            [EnumMember(Value = "OA")]
            OAEnum = 1500,
            
            /// <summary>
            /// Enum ODEEnum for ODE
            /// </summary>
            [EnumMember(Value = "ODE")]
            ODEEnum = 1501,
            
            /// <summary>
            /// Enum ODGEnum for ODG
            /// </summary>
            [EnumMember(Value = "ODG")]
            ODGEnum = 1502,
            
            /// <summary>
            /// Enum ODKEnum for ODK
            /// </summary>
            [EnumMember(Value = "ODK")]
            ODKEnum = 1503,
            
            /// <summary>
            /// Enum ODMEnum for ODM
            /// </summary>
            [EnumMember(Value = "ODM")]
            ODMEnum = 1504,
            
            /// <summary>
            /// Enum OHMEnum for OHM
            /// </summary>
            [EnumMember(Value = "OHM")]
            OHMEnum = 1505,
            
            /// <summary>
            /// Enum ONEnum for ON
            /// </summary>
            [EnumMember(Value = "ON")]
            ONEnum = 1506,
            
            /// <summary>
            /// Enum ONZEnum for ONZ
            /// </summary>
            [EnumMember(Value = "ONZ")]
            ONZEnum = 1507,
            
            /// <summary>
            /// Enum OPMEnum for OPM
            /// </summary>
            [EnumMember(Value = "OPM")]
            OPMEnum = 1508,
            
            /// <summary>
            /// Enum OTEnum for OT
            /// </summary>
            [EnumMember(Value = "OT")]
            OTEnum = 1509,
            
            /// <summary>
            /// Enum OZAEnum for OZA
            /// </summary>
            [EnumMember(Value = "OZA")]
            OZAEnum = 1510,
            
            /// <summary>
            /// Enum OZIEnum for OZI
            /// </summary>
            [EnumMember(Value = "OZI")]
            OZIEnum = 1511,
            
            /// <summary>
            /// Enum P1Enum for P1
            /// </summary>
            [EnumMember(Value = "P1")]
            P1Enum = 1512,
            
            /// <summary>
            /// Enum P10Enum for P10
            /// </summary>
            [EnumMember(Value = "P10")]
            P10Enum = 1513,
            
            /// <summary>
            /// Enum P11Enum for P11
            /// </summary>
            [EnumMember(Value = "P11")]
            P11Enum = 1514,
            
            /// <summary>
            /// Enum P12Enum for P12
            /// </summary>
            [EnumMember(Value = "P12")]
            P12Enum = 1515,
            
            /// <summary>
            /// Enum P13Enum for P13
            /// </summary>
            [EnumMember(Value = "P13")]
            P13Enum = 1516,
            
            /// <summary>
            /// Enum P14Enum for P14
            /// </summary>
            [EnumMember(Value = "P14")]
            P14Enum = 1517,
            
            /// <summary>
            /// Enum P15Enum for P15
            /// </summary>
            [EnumMember(Value = "P15")]
            P15Enum = 1518,
            
            /// <summary>
            /// Enum P16Enum for P16
            /// </summary>
            [EnumMember(Value = "P16")]
            P16Enum = 1519,
            
            /// <summary>
            /// Enum P17Enum for P17
            /// </summary>
            [EnumMember(Value = "P17")]
            P17Enum = 1520,
            
            /// <summary>
            /// Enum P18Enum for P18
            /// </summary>
            [EnumMember(Value = "P18")]
            P18Enum = 1521,
            
            /// <summary>
            /// Enum P19Enum for P19
            /// </summary>
            [EnumMember(Value = "P19")]
            P19Enum = 1522,
            
            /// <summary>
            /// Enum P2Enum for P2
            /// </summary>
            [EnumMember(Value = "P2")]
            P2Enum = 1523,
            
            /// <summary>
            /// Enum P20Enum for P20
            /// </summary>
            [EnumMember(Value = "P20")]
            P20Enum = 1524,
            
            /// <summary>
            /// Enum P21Enum for P21
            /// </summary>
            [EnumMember(Value = "P21")]
            P21Enum = 1525,
            
            /// <summary>
            /// Enum P22Enum for P22
            /// </summary>
            [EnumMember(Value = "P22")]
            P22Enum = 1526,
            
            /// <summary>
            /// Enum P23Enum for P23
            /// </summary>
            [EnumMember(Value = "P23")]
            P23Enum = 1527,
            
            /// <summary>
            /// Enum P24Enum for P24
            /// </summary>
            [EnumMember(Value = "P24")]
            P24Enum = 1528,
            
            /// <summary>
            /// Enum P25Enum for P25
            /// </summary>
            [EnumMember(Value = "P25")]
            P25Enum = 1529,
            
            /// <summary>
            /// Enum P26Enum for P26
            /// </summary>
            [EnumMember(Value = "P26")]
            P26Enum = 1530,
            
            /// <summary>
            /// Enum P27Enum for P27
            /// </summary>
            [EnumMember(Value = "P27")]
            P27Enum = 1531,
            
            /// <summary>
            /// Enum P28Enum for P28
            /// </summary>
            [EnumMember(Value = "P28")]
            P28Enum = 1532,
            
            /// <summary>
            /// Enum P29Enum for P29
            /// </summary>
            [EnumMember(Value = "P29")]
            P29Enum = 1533,
            
            /// <summary>
            /// Enum P30Enum for P30
            /// </summary>
            [EnumMember(Value = "P30")]
            P30Enum = 1534,
            
            /// <summary>
            /// Enum P31Enum for P31
            /// </summary>
            [EnumMember(Value = "P31")]
            P31Enum = 1535,
            
            /// <summary>
            /// Enum P32Enum for P32
            /// </summary>
            [EnumMember(Value = "P32")]
            P32Enum = 1536,
            
            /// <summary>
            /// Enum P33Enum for P33
            /// </summary>
            [EnumMember(Value = "P33")]
            P33Enum = 1537,
            
            /// <summary>
            /// Enum P34Enum for P34
            /// </summary>
            [EnumMember(Value = "P34")]
            P34Enum = 1538,
            
            /// <summary>
            /// Enum P35Enum for P35
            /// </summary>
            [EnumMember(Value = "P35")]
            P35Enum = 1539,
            
            /// <summary>
            /// Enum P36Enum for P36
            /// </summary>
            [EnumMember(Value = "P36")]
            P36Enum = 1540,
            
            /// <summary>
            /// Enum P37Enum for P37
            /// </summary>
            [EnumMember(Value = "P37")]
            P37Enum = 1541,
            
            /// <summary>
            /// Enum P38Enum for P38
            /// </summary>
            [EnumMember(Value = "P38")]
            P38Enum = 1542,
            
            /// <summary>
            /// Enum P39Enum for P39
            /// </summary>
            [EnumMember(Value = "P39")]
            P39Enum = 1543,
            
            /// <summary>
            /// Enum P40Enum for P40
            /// </summary>
            [EnumMember(Value = "P40")]
            P40Enum = 1544,
            
            /// <summary>
            /// Enum P41Enum for P41
            /// </summary>
            [EnumMember(Value = "P41")]
            P41Enum = 1545,
            
            /// <summary>
            /// Enum P42Enum for P42
            /// </summary>
            [EnumMember(Value = "P42")]
            P42Enum = 1546,
            
            /// <summary>
            /// Enum P43Enum for P43
            /// </summary>
            [EnumMember(Value = "P43")]
            P43Enum = 1547,
            
            /// <summary>
            /// Enum P44Enum for P44
            /// </summary>
            [EnumMember(Value = "P44")]
            P44Enum = 1548,
            
            /// <summary>
            /// Enum P45Enum for P45
            /// </summary>
            [EnumMember(Value = "P45")]
            P45Enum = 1549,
            
            /// <summary>
            /// Enum P46Enum for P46
            /// </summary>
            [EnumMember(Value = "P46")]
            P46Enum = 1550,
            
            /// <summary>
            /// Enum P47Enum for P47
            /// </summary>
            [EnumMember(Value = "P47")]
            P47Enum = 1551,
            
            /// <summary>
            /// Enum P48Enum for P48
            /// </summary>
            [EnumMember(Value = "P48")]
            P48Enum = 1552,
            
            /// <summary>
            /// Enum P49Enum for P49
            /// </summary>
            [EnumMember(Value = "P49")]
            P49Enum = 1553,
            
            /// <summary>
            /// Enum P5Enum for P5
            /// </summary>
            [EnumMember(Value = "P5")]
            P5Enum = 1554,
            
            /// <summary>
            /// Enum P50Enum for P50
            /// </summary>
            [EnumMember(Value = "P50")]
            P50Enum = 1555,
            
            /// <summary>
            /// Enum P51Enum for P51
            /// </summary>
            [EnumMember(Value = "P51")]
            P51Enum = 1556,
            
            /// <summary>
            /// Enum P52Enum for P52
            /// </summary>
            [EnumMember(Value = "P52")]
            P52Enum = 1557,
            
            /// <summary>
            /// Enum P53Enum for P53
            /// </summary>
            [EnumMember(Value = "P53")]
            P53Enum = 1558,
            
            /// <summary>
            /// Enum P54Enum for P54
            /// </summary>
            [EnumMember(Value = "P54")]
            P54Enum = 1559,
            
            /// <summary>
            /// Enum P55Enum for P55
            /// </summary>
            [EnumMember(Value = "P55")]
            P55Enum = 1560,
            
            /// <summary>
            /// Enum P56Enum for P56
            /// </summary>
            [EnumMember(Value = "P56")]
            P56Enum = 1561,
            
            /// <summary>
            /// Enum P57Enum for P57
            /// </summary>
            [EnumMember(Value = "P57")]
            P57Enum = 1562,
            
            /// <summary>
            /// Enum P58Enum for P58
            /// </summary>
            [EnumMember(Value = "P58")]
            P58Enum = 1563,
            
            /// <summary>
            /// Enum P59Enum for P59
            /// </summary>
            [EnumMember(Value = "P59")]
            P59Enum = 1564,
            
            /// <summary>
            /// Enum P60Enum for P60
            /// </summary>
            [EnumMember(Value = "P60")]
            P60Enum = 1565,
            
            /// <summary>
            /// Enum P61Enum for P61
            /// </summary>
            [EnumMember(Value = "P61")]
            P61Enum = 1566,
            
            /// <summary>
            /// Enum P62Enum for P62
            /// </summary>
            [EnumMember(Value = "P62")]
            P62Enum = 1567,
            
            /// <summary>
            /// Enum P63Enum for P63
            /// </summary>
            [EnumMember(Value = "P63")]
            P63Enum = 1568,
            
            /// <summary>
            /// Enum P64Enum for P64
            /// </summary>
            [EnumMember(Value = "P64")]
            P64Enum = 1569,
            
            /// <summary>
            /// Enum P65Enum for P65
            /// </summary>
            [EnumMember(Value = "P65")]
            P65Enum = 1570,
            
            /// <summary>
            /// Enum P66Enum for P66
            /// </summary>
            [EnumMember(Value = "P66")]
            P66Enum = 1571,
            
            /// <summary>
            /// Enum P67Enum for P67
            /// </summary>
            [EnumMember(Value = "P67")]
            P67Enum = 1572,
            
            /// <summary>
            /// Enum P68Enum for P68
            /// </summary>
            [EnumMember(Value = "P68")]
            P68Enum = 1573,
            
            /// <summary>
            /// Enum P69Enum for P69
            /// </summary>
            [EnumMember(Value = "P69")]
            P69Enum = 1574,
            
            /// <summary>
            /// Enum P70Enum for P70
            /// </summary>
            [EnumMember(Value = "P70")]
            P70Enum = 1575,
            
            /// <summary>
            /// Enum P71Enum for P71
            /// </summary>
            [EnumMember(Value = "P71")]
            P71Enum = 1576,
            
            /// <summary>
            /// Enum P72Enum for P72
            /// </summary>
            [EnumMember(Value = "P72")]
            P72Enum = 1577,
            
            /// <summary>
            /// Enum P73Enum for P73
            /// </summary>
            [EnumMember(Value = "P73")]
            P73Enum = 1578,
            
            /// <summary>
            /// Enum P74Enum for P74
            /// </summary>
            [EnumMember(Value = "P74")]
            P74Enum = 1579,
            
            /// <summary>
            /// Enum P75Enum for P75
            /// </summary>
            [EnumMember(Value = "P75")]
            P75Enum = 1580,
            
            /// <summary>
            /// Enum P76Enum for P76
            /// </summary>
            [EnumMember(Value = "P76")]
            P76Enum = 1581,
            
            /// <summary>
            /// Enum P77Enum for P77
            /// </summary>
            [EnumMember(Value = "P77")]
            P77Enum = 1582,
            
            /// <summary>
            /// Enum P78Enum for P78
            /// </summary>
            [EnumMember(Value = "P78")]
            P78Enum = 1583,
            
            /// <summary>
            /// Enum P79Enum for P79
            /// </summary>
            [EnumMember(Value = "P79")]
            P79Enum = 1584,
            
            /// <summary>
            /// Enum P80Enum for P80
            /// </summary>
            [EnumMember(Value = "P80")]
            P80Enum = 1585,
            
            /// <summary>
            /// Enum P81Enum for P81
            /// </summary>
            [EnumMember(Value = "P81")]
            P81Enum = 1586,
            
            /// <summary>
            /// Enum P82Enum for P82
            /// </summary>
            [EnumMember(Value = "P82")]
            P82Enum = 1587,
            
            /// <summary>
            /// Enum P83Enum for P83
            /// </summary>
            [EnumMember(Value = "P83")]
            P83Enum = 1588,
            
            /// <summary>
            /// Enum P84Enum for P84
            /// </summary>
            [EnumMember(Value = "P84")]
            P84Enum = 1589,
            
            /// <summary>
            /// Enum P85Enum for P85
            /// </summary>
            [EnumMember(Value = "P85")]
            P85Enum = 1590,
            
            /// <summary>
            /// Enum P86Enum for P86
            /// </summary>
            [EnumMember(Value = "P86")]
            P86Enum = 1591,
            
            /// <summary>
            /// Enum P87Enum for P87
            /// </summary>
            [EnumMember(Value = "P87")]
            P87Enum = 1592,
            
            /// <summary>
            /// Enum P88Enum for P88
            /// </summary>
            [EnumMember(Value = "P88")]
            P88Enum = 1593,
            
            /// <summary>
            /// Enum P89Enum for P89
            /// </summary>
            [EnumMember(Value = "P89")]
            P89Enum = 1594,
            
            /// <summary>
            /// Enum P90Enum for P90
            /// </summary>
            [EnumMember(Value = "P90")]
            P90Enum = 1595,
            
            /// <summary>
            /// Enum P91Enum for P91
            /// </summary>
            [EnumMember(Value = "P91")]
            P91Enum = 1596,
            
            /// <summary>
            /// Enum P92Enum for P92
            /// </summary>
            [EnumMember(Value = "P92")]
            P92Enum = 1597,
            
            /// <summary>
            /// Enum P93Enum for P93
            /// </summary>
            [EnumMember(Value = "P93")]
            P93Enum = 1598,
            
            /// <summary>
            /// Enum P94Enum for P94
            /// </summary>
            [EnumMember(Value = "P94")]
            P94Enum = 1599,
            
            /// <summary>
            /// Enum P95Enum for P95
            /// </summary>
            [EnumMember(Value = "P95")]
            P95Enum = 1600,
            
            /// <summary>
            /// Enum P96Enum for P96
            /// </summary>
            [EnumMember(Value = "P96")]
            P96Enum = 1601,
            
            /// <summary>
            /// Enum P97Enum for P97
            /// </summary>
            [EnumMember(Value = "P97")]
            P97Enum = 1602,
            
            /// <summary>
            /// Enum P98Enum for P98
            /// </summary>
            [EnumMember(Value = "P98")]
            P98Enum = 1603,
            
            /// <summary>
            /// Enum P99Enum for P99
            /// </summary>
            [EnumMember(Value = "P99")]
            P99Enum = 1604,
            
            /// <summary>
            /// Enum PALEnum for PAL
            /// </summary>
            [EnumMember(Value = "PAL")]
            PALEnum = 1605,
            
            /// <summary>
            /// Enum PDEnum for PD
            /// </summary>
            [EnumMember(Value = "PD")]
            PDEnum = 1606,
            
            /// <summary>
            /// Enum PFLEnum for PFL
            /// </summary>
            [EnumMember(Value = "PFL")]
            PFLEnum = 1607,
            
            /// <summary>
            /// Enum PGLEnum for PGL
            /// </summary>
            [EnumMember(Value = "PGL")]
            PGLEnum = 1608,
            
            /// <summary>
            /// Enum PIEnum for PI
            /// </summary>
            [EnumMember(Value = "PI")]
            PIEnum = 1609,
            
            /// <summary>
            /// Enum PLAEnum for PLA
            /// </summary>
            [EnumMember(Value = "PLA")]
            PLAEnum = 1610,
            
            /// <summary>
            /// Enum POEnum for PO
            /// </summary>
            [EnumMember(Value = "PO")]
            POEnum = 1611,
            
            /// <summary>
            /// Enum PQEnum for PQ
            /// </summary>
            [EnumMember(Value = "PQ")]
            PQEnum = 1612,
            
            /// <summary>
            /// Enum PREnum for PR
            /// </summary>
            [EnumMember(Value = "PR")]
            PREnum = 1613,
            
            /// <summary>
            /// Enum PSEnum for PS
            /// </summary>
            [EnumMember(Value = "PS")]
            PSEnum = 1614,
            
            /// <summary>
            /// Enum PTDEnum for PTD
            /// </summary>
            [EnumMember(Value = "PTD")]
            PTDEnum = 1615,
            
            /// <summary>
            /// Enum PTIEnum for PTI
            /// </summary>
            [EnumMember(Value = "PTI")]
            PTIEnum = 1616,
            
            /// <summary>
            /// Enum PTLEnum for PTL
            /// </summary>
            [EnumMember(Value = "PTL")]
            PTLEnum = 1617,
            
            /// <summary>
            /// Enum PTNEnum for PTN
            /// </summary>
            [EnumMember(Value = "PTN")]
            PTNEnum = 1618,
            
            /// <summary>
            /// Enum Q10Enum for Q10
            /// </summary>
            [EnumMember(Value = "Q10")]
            Q10Enum = 1619,
            
            /// <summary>
            /// Enum Q11Enum for Q11
            /// </summary>
            [EnumMember(Value = "Q11")]
            Q11Enum = 1620,
            
            /// <summary>
            /// Enum Q12Enum for Q12
            /// </summary>
            [EnumMember(Value = "Q12")]
            Q12Enum = 1621,
            
            /// <summary>
            /// Enum Q13Enum for Q13
            /// </summary>
            [EnumMember(Value = "Q13")]
            Q13Enum = 1622,
            
            /// <summary>
            /// Enum Q14Enum for Q14
            /// </summary>
            [EnumMember(Value = "Q14")]
            Q14Enum = 1623,
            
            /// <summary>
            /// Enum Q15Enum for Q15
            /// </summary>
            [EnumMember(Value = "Q15")]
            Q15Enum = 1624,
            
            /// <summary>
            /// Enum Q16Enum for Q16
            /// </summary>
            [EnumMember(Value = "Q16")]
            Q16Enum = 1625,
            
            /// <summary>
            /// Enum Q17Enum for Q17
            /// </summary>
            [EnumMember(Value = "Q17")]
            Q17Enum = 1626,
            
            /// <summary>
            /// Enum Q18Enum for Q18
            /// </summary>
            [EnumMember(Value = "Q18")]
            Q18Enum = 1627,
            
            /// <summary>
            /// Enum Q19Enum for Q19
            /// </summary>
            [EnumMember(Value = "Q19")]
            Q19Enum = 1628,
            
            /// <summary>
            /// Enum Q20Enum for Q20
            /// </summary>
            [EnumMember(Value = "Q20")]
            Q20Enum = 1629,
            
            /// <summary>
            /// Enum Q21Enum for Q21
            /// </summary>
            [EnumMember(Value = "Q21")]
            Q21Enum = 1630,
            
            /// <summary>
            /// Enum Q22Enum for Q22
            /// </summary>
            [EnumMember(Value = "Q22")]
            Q22Enum = 1631,
            
            /// <summary>
            /// Enum Q23Enum for Q23
            /// </summary>
            [EnumMember(Value = "Q23")]
            Q23Enum = 1632,
            
            /// <summary>
            /// Enum Q24Enum for Q24
            /// </summary>
            [EnumMember(Value = "Q24")]
            Q24Enum = 1633,
            
            /// <summary>
            /// Enum Q25Enum for Q25
            /// </summary>
            [EnumMember(Value = "Q25")]
            Q25Enum = 1634,
            
            /// <summary>
            /// Enum Q26Enum for Q26
            /// </summary>
            [EnumMember(Value = "Q26")]
            Q26Enum = 1635,
            
            /// <summary>
            /// Enum Q27Enum for Q27
            /// </summary>
            [EnumMember(Value = "Q27")]
            Q27Enum = 1636,
            
            /// <summary>
            /// Enum Q28Enum for Q28
            /// </summary>
            [EnumMember(Value = "Q28")]
            Q28Enum = 1637,
            
            /// <summary>
            /// Enum Q29Enum for Q29
            /// </summary>
            [EnumMember(Value = "Q29")]
            Q29Enum = 1638,
            
            /// <summary>
            /// Enum Q30Enum for Q30
            /// </summary>
            [EnumMember(Value = "Q30")]
            Q30Enum = 1639,
            
            /// <summary>
            /// Enum Q31Enum for Q31
            /// </summary>
            [EnumMember(Value = "Q31")]
            Q31Enum = 1640,
            
            /// <summary>
            /// Enum Q32Enum for Q32
            /// </summary>
            [EnumMember(Value = "Q32")]
            Q32Enum = 1641,
            
            /// <summary>
            /// Enum Q33Enum for Q33
            /// </summary>
            [EnumMember(Value = "Q33")]
            Q33Enum = 1642,
            
            /// <summary>
            /// Enum Q34Enum for Q34
            /// </summary>
            [EnumMember(Value = "Q34")]
            Q34Enum = 1643,
            
            /// <summary>
            /// Enum Q35Enum for Q35
            /// </summary>
            [EnumMember(Value = "Q35")]
            Q35Enum = 1644,
            
            /// <summary>
            /// Enum Q36Enum for Q36
            /// </summary>
            [EnumMember(Value = "Q36")]
            Q36Enum = 1645,
            
            /// <summary>
            /// Enum Q37Enum for Q37
            /// </summary>
            [EnumMember(Value = "Q37")]
            Q37Enum = 1646,
            
            /// <summary>
            /// Enum Q38Enum for Q38
            /// </summary>
            [EnumMember(Value = "Q38")]
            Q38Enum = 1647,
            
            /// <summary>
            /// Enum Q39Enum for Q39
            /// </summary>
            [EnumMember(Value = "Q39")]
            Q39Enum = 1648,
            
            /// <summary>
            /// Enum Q40Enum for Q40
            /// </summary>
            [EnumMember(Value = "Q40")]
            Q40Enum = 1649,
            
            /// <summary>
            /// Enum Q41Enum for Q41
            /// </summary>
            [EnumMember(Value = "Q41")]
            Q41Enum = 1650,
            
            /// <summary>
            /// Enum Q42Enum for Q42
            /// </summary>
            [EnumMember(Value = "Q42")]
            Q42Enum = 1651,
            
            /// <summary>
            /// Enum Q3Enum for Q3
            /// </summary>
            [EnumMember(Value = "Q3")]
            Q3Enum = 1652,
            
            /// <summary>
            /// Enum QAEnum for QA
            /// </summary>
            [EnumMember(Value = "QA")]
            QAEnum = 1653,
            
            /// <summary>
            /// Enum QANEnum for QAN
            /// </summary>
            [EnumMember(Value = "QAN")]
            QANEnum = 1654,
            
            /// <summary>
            /// Enum QBEnum for QB
            /// </summary>
            [EnumMember(Value = "QB")]
            QBEnum = 1655,
            
            /// <summary>
            /// Enum QREnum for QR
            /// </summary>
            [EnumMember(Value = "QR")]
            QREnum = 1656,
            
            /// <summary>
            /// Enum QTDEnum for QTD
            /// </summary>
            [EnumMember(Value = "QTD")]
            QTDEnum = 1657,
            
            /// <summary>
            /// Enum QTIEnum for QTI
            /// </summary>
            [EnumMember(Value = "QTI")]
            QTIEnum = 1658,
            
            /// <summary>
            /// Enum QTLEnum for QTL
            /// </summary>
            [EnumMember(Value = "QTL")]
            QTLEnum = 1659,
            
            /// <summary>
            /// Enum QTREnum for QTR
            /// </summary>
            [EnumMember(Value = "QTR")]
            QTREnum = 1660,
            
            /// <summary>
            /// Enum R1Enum for R1
            /// </summary>
            [EnumMember(Value = "R1")]
            R1Enum = 1661,
            
            /// <summary>
            /// Enum R9Enum for R9
            /// </summary>
            [EnumMember(Value = "R9")]
            R9Enum = 1662,
            
            /// <summary>
            /// Enum RHEnum for RH
            /// </summary>
            [EnumMember(Value = "RH")]
            RHEnum = 1663,
            
            /// <summary>
            /// Enum RMEnum for RM
            /// </summary>
            [EnumMember(Value = "RM")]
            RMEnum = 1664,
            
            /// <summary>
            /// Enum ROMEnum for ROM
            /// </summary>
            [EnumMember(Value = "ROM")]
            ROMEnum = 1665,
            
            /// <summary>
            /// Enum RPEnum for RP
            /// </summary>
            [EnumMember(Value = "RP")]
            RPEnum = 1666,
            
            /// <summary>
            /// Enum RPMEnum for RPM
            /// </summary>
            [EnumMember(Value = "RPM")]
            RPMEnum = 1667,
            
            /// <summary>
            /// Enum RPSEnum for RPS
            /// </summary>
            [EnumMember(Value = "RPS")]
            RPSEnum = 1668,
            
            /// <summary>
            /// Enum RTEnum for RT
            /// </summary>
            [EnumMember(Value = "RT")]
            RTEnum = 1669,
            
            /// <summary>
            /// Enum S3Enum for S3
            /// </summary>
            [EnumMember(Value = "S3")]
            S3Enum = 1670,
            
            /// <summary>
            /// Enum S4Enum for S4
            /// </summary>
            [EnumMember(Value = "S4")]
            S4Enum = 1671,
            
            /// <summary>
            /// Enum SANEnum for SAN
            /// </summary>
            [EnumMember(Value = "SAN")]
            SANEnum = 1672,
            
            /// <summary>
            /// Enum SCOEnum for SCO
            /// </summary>
            [EnumMember(Value = "SCO")]
            SCOEnum = 1673,
            
            /// <summary>
            /// Enum SCREnum for SCR
            /// </summary>
            [EnumMember(Value = "SCR")]
            SCREnum = 1674,
            
            /// <summary>
            /// Enum SECEnum for SEC
            /// </summary>
            [EnumMember(Value = "SEC")]
            SECEnum = 1675,
            
            /// <summary>
            /// Enum SETEnum for SET
            /// </summary>
            [EnumMember(Value = "SET")]
            SETEnum = 1676,
            
            /// <summary>
            /// Enum SGEnum for SG
            /// </summary>
            [EnumMember(Value = "SG")]
            SGEnum = 1677,
            
            /// <summary>
            /// Enum SIEEnum for SIE
            /// </summary>
            [EnumMember(Value = "SIE")]
            SIEEnum = 1678,
            
            /// <summary>
            /// Enum SM3Enum for SM3
            /// </summary>
            [EnumMember(Value = "SM3")]
            SM3Enum = 1679,
            
            /// <summary>
            /// Enum SMIEnum for SMI
            /// </summary>
            [EnumMember(Value = "SMI")]
            SMIEnum = 1680,
            
            /// <summary>
            /// Enum SQEnum for SQ
            /// </summary>
            [EnumMember(Value = "SQ")]
            SQEnum = 1681,
            
            /// <summary>
            /// Enum SQREnum for SQR
            /// </summary>
            [EnumMember(Value = "SQR")]
            SQREnum = 1682,
            
            /// <summary>
            /// Enum SREnum for SR
            /// </summary>
            [EnumMember(Value = "SR")]
            SREnum = 1683,
            
            /// <summary>
            /// Enum STCEnum for STC
            /// </summary>
            [EnumMember(Value = "STC")]
            STCEnum = 1684,
            
            /// <summary>
            /// Enum STIEnum for STI
            /// </summary>
            [EnumMember(Value = "STI")]
            STIEnum = 1685,
            
            /// <summary>
            /// Enum STKEnum for STK
            /// </summary>
            [EnumMember(Value = "STK")]
            STKEnum = 1686,
            
            /// <summary>
            /// Enum STLEnum for STL
            /// </summary>
            [EnumMember(Value = "STL")]
            STLEnum = 1687,
            
            /// <summary>
            /// Enum STNEnum for STN
            /// </summary>
            [EnumMember(Value = "STN")]
            STNEnum = 1688,
            
            /// <summary>
            /// Enum STWEnum for STW
            /// </summary>
            [EnumMember(Value = "STW")]
            STWEnum = 1689,
            
            /// <summary>
            /// Enum SWEnum for SW
            /// </summary>
            [EnumMember(Value = "SW")]
            SWEnum = 1690,
            
            /// <summary>
            /// Enum SXEnum for SX
            /// </summary>
            [EnumMember(Value = "SX")]
            SXEnum = 1691,
            
            /// <summary>
            /// Enum SYREnum for SYR
            /// </summary>
            [EnumMember(Value = "SYR")]
            SYREnum = 1692,
            
            /// <summary>
            /// Enum T0Enum for T0
            /// </summary>
            [EnumMember(Value = "T0")]
            T0Enum = 1693,
            
            /// <summary>
            /// Enum T3Enum for T3
            /// </summary>
            [EnumMember(Value = "T3")]
            T3Enum = 1694,
            
            /// <summary>
            /// Enum TAHEnum for TAH
            /// </summary>
            [EnumMember(Value = "TAH")]
            TAHEnum = 1695,
            
            /// <summary>
            /// Enum TANEnum for TAN
            /// </summary>
            [EnumMember(Value = "TAN")]
            TANEnum = 1696,
            
            /// <summary>
            /// Enum TIEnum for TI
            /// </summary>
            [EnumMember(Value = "TI")]
            TIEnum = 1697,
            
            /// <summary>
            /// Enum TICEnum for TIC
            /// </summary>
            [EnumMember(Value = "TIC")]
            TICEnum = 1698,
            
            /// <summary>
            /// Enum TIPEnum for TIP
            /// </summary>
            [EnumMember(Value = "TIP")]
            TIPEnum = 1699,
            
            /// <summary>
            /// Enum TKMEnum for TKM
            /// </summary>
            [EnumMember(Value = "TKM")]
            TKMEnum = 1700,
            
            /// <summary>
            /// Enum TMSEnum for TMS
            /// </summary>
            [EnumMember(Value = "TMS")]
            TMSEnum = 1701,
            
            /// <summary>
            /// Enum TNEEnum for TNE
            /// </summary>
            [EnumMember(Value = "TNE")]
            TNEEnum = 1702,
            
            /// <summary>
            /// Enum TPEnum for TP
            /// </summary>
            [EnumMember(Value = "TP")]
            TPEnum = 1703,
            
            /// <summary>
            /// Enum TPIEnum for TPI
            /// </summary>
            [EnumMember(Value = "TPI")]
            TPIEnum = 1704,
            
            /// <summary>
            /// Enum TPREnum for TPR
            /// </summary>
            [EnumMember(Value = "TPR")]
            TPREnum = 1705,
            
            /// <summary>
            /// Enum TQDEnum for TQD
            /// </summary>
            [EnumMember(Value = "TQD")]
            TQDEnum = 1706,
            
            /// <summary>
            /// Enum TRLEnum for TRL
            /// </summary>
            [EnumMember(Value = "TRL")]
            TRLEnum = 1707,
            
            /// <summary>
            /// Enum TSTEnum for TST
            /// </summary>
            [EnumMember(Value = "TST")]
            TSTEnum = 1708,
            
            /// <summary>
            /// Enum TTSEnum for TTS
            /// </summary>
            [EnumMember(Value = "TTS")]
            TTSEnum = 1709,
            
            /// <summary>
            /// Enum U1Enum for U1
            /// </summary>
            [EnumMember(Value = "U1")]
            U1Enum = 1710,
            
            /// <summary>
            /// Enum U2Enum for U2
            /// </summary>
            [EnumMember(Value = "U2")]
            U2Enum = 1711,
            
            /// <summary>
            /// Enum UBEnum for UB
            /// </summary>
            [EnumMember(Value = "UB")]
            UBEnum = 1712,
            
            /// <summary>
            /// Enum UCEnum for UC
            /// </summary>
            [EnumMember(Value = "UC")]
            UCEnum = 1713,
            
            /// <summary>
            /// Enum VAEnum for VA
            /// </summary>
            [EnumMember(Value = "VA")]
            VAEnum = 1714,
            
            /// <summary>
            /// Enum VLTEnum for VLT
            /// </summary>
            [EnumMember(Value = "VLT")]
            VLTEnum = 1715,
            
            /// <summary>
            /// Enum VPEnum for VP
            /// </summary>
            [EnumMember(Value = "VP")]
            VPEnum = 1716,
            
            /// <summary>
            /// Enum W2Enum for W2
            /// </summary>
            [EnumMember(Value = "W2")]
            W2Enum = 1717,
            
            /// <summary>
            /// Enum WAEnum for WA
            /// </summary>
            [EnumMember(Value = "WA")]
            WAEnum = 1718,
            
            /// <summary>
            /// Enum WBEnum for WB
            /// </summary>
            [EnumMember(Value = "WB")]
            WBEnum = 1719,
            
            /// <summary>
            /// Enum WCDEnum for WCD
            /// </summary>
            [EnumMember(Value = "WCD")]
            WCDEnum = 1720,
            
            /// <summary>
            /// Enum WEEnum for WE
            /// </summary>
            [EnumMember(Value = "WE")]
            WEEnum = 1721,
            
            /// <summary>
            /// Enum WEBEnum for WEB
            /// </summary>
            [EnumMember(Value = "WEB")]
            WEBEnum = 1722,
            
            /// <summary>
            /// Enum WEEEnum for WEE
            /// </summary>
            [EnumMember(Value = "WEE")]
            WEEEnum = 1723,
            
            /// <summary>
            /// Enum WGEnum for WG
            /// </summary>
            [EnumMember(Value = "WG")]
            WGEnum = 1724,
            
            /// <summary>
            /// Enum WHREnum for WHR
            /// </summary>
            [EnumMember(Value = "WHR")]
            WHREnum = 1725,
            
            /// <summary>
            /// Enum WMEnum for WM
            /// </summary>
            [EnumMember(Value = "WM")]
            WMEnum = 1726,
            
            /// <summary>
            /// Enum WSDEnum for WSD
            /// </summary>
            [EnumMember(Value = "WSD")]
            WSDEnum = 1727,
            
            /// <summary>
            /// Enum WTTEnum for WTT
            /// </summary>
            [EnumMember(Value = "WTT")]
            WTTEnum = 1728,
            
            /// <summary>
            /// Enum X1Enum for X1
            /// </summary>
            [EnumMember(Value = "X1")]
            X1Enum = 1729,
            
            /// <summary>
            /// Enum YDKEnum for YDK
            /// </summary>
            [EnumMember(Value = "YDK")]
            YDKEnum = 1730,
            
            /// <summary>
            /// Enum YDQEnum for YDQ
            /// </summary>
            [EnumMember(Value = "YDQ")]
            YDQEnum = 1731,
            
            /// <summary>
            /// Enum YRDEnum for YRD
            /// </summary>
            [EnumMember(Value = "YRD")]
            YRDEnum = 1732,
            
            /// <summary>
            /// Enum Z11Enum for Z11
            /// </summary>
            [EnumMember(Value = "Z11")]
            Z11Enum = 1733,
            
            /// <summary>
            /// Enum ZPEnum for ZP
            /// </summary>
            [EnumMember(Value = "ZP")]
            ZPEnum = 1734,
            
            /// <summary>
            /// Enum ZZEnum for ZZ
            /// </summary>
            [EnumMember(Value = "ZZ")]
            ZZEnum = 1735
        }

        /// <summary>
        /// Unit (BT-130)  - &#x60;11&#x60;: outfit - &#x60;13&#x60;: ration - &#x60;14&#x60;: shot - &#x60;15&#x60;: stick, military - &#x60;20&#x60;: twenty foot container - &#x60;21&#x60;: forty foot container - &#x60;22&#x60;: decilitre per gram - &#x60;23&#x60;: gram per cubic centimetre - &#x60;24&#x60;: theoretical pound - &#x60;25&#x60;: gram per square centimetre - &#x60;27&#x60;: theoretical ton - &#x60;28&#x60;: kilogram per square metre - &#x60;33&#x60;: kilopascal square metre per gram - &#x60;34&#x60;: kilopascal per millimetre - &#x60;35&#x60;: millilitre per square centimetre second - &#x60;37&#x60;: ounce per square foot - &#x60;38&#x60;: ounce per square foot per 0,01inch - &#x60;40&#x60;: millilitre per second - &#x60;41&#x60;: millilitre per minute - &#x60;56&#x60;: sitas - &#x60;57&#x60;: mesh - &#x60;58&#x60;: net kilogram - &#x60;59&#x60;: part per million - &#x60;60&#x60;: percent weight - &#x60;61&#x60;: part per billion (US) - &#x60;74&#x60;: millipascal - &#x60;77&#x60;: milli-inch - &#x60;80&#x60;: pound per square inch absolute - &#x60;81&#x60;: henry - &#x60;85&#x60;: foot pound-force - &#x60;87&#x60;: pound per cubic foot - &#x60;89&#x60;: poise - &#x60;91&#x60;: stokes - &#x60;1I&#x60;: Festpreis - &#x60;2A&#x60;: radian per second - &#x60;2B&#x60;: radian per second squared - &#x60;2C&#x60;: roentgen - &#x60;2G&#x60;: volt AC - &#x60;2H&#x60;: volt DC - &#x60;2I&#x60;: British thermal unit (international table) per hour - &#x60;2J&#x60;: cubic centimetre per second - &#x60;2K&#x60;: cubic foot per hour - &#x60;2L&#x60;: cubic foot per minute - &#x60;2M&#x60;: centimetre per second - &#x60;2N&#x60;: decibel - &#x60;2P&#x60;: kilobyte - &#x60;2Q&#x60;: kilobecquerel - &#x60;2R&#x60;: kilocurie - &#x60;2U&#x60;: megagram - &#x60;2X&#x60;: metre per minute - &#x60;2Y&#x60;: milliroentgen - &#x60;2Z&#x60;: millivolt - &#x60;3B&#x60;: megajoule - &#x60;3C&#x60;: manmonth - &#x60;4C&#x60;: centistokes - &#x60;4G&#x60;: microlitre - &#x60;4H&#x60;: micrometre (micron) - &#x60;4K&#x60;: milliampere - &#x60;4L&#x60;: megabyte - &#x60;4M&#x60;: milligram per hour - &#x60;4N&#x60;: megabecquerel - &#x60;4O&#x60;: microfarad - &#x60;4P&#x60;: newton per metre - &#x60;4Q&#x60;: ounce inch - &#x60;4R&#x60;: ounce foot - &#x60;4T&#x60;: picofarad - &#x60;4U&#x60;: pound per hour - &#x60;4W&#x60;: ton (US) per hour - &#x60;4X&#x60;: kilolitre per hour - &#x60;5A&#x60;: barrel (US) per minute - &#x60;5B&#x60;: batch - &#x60;5E&#x60;: MMSCF/day - &#x60;5J&#x60;: hydraulic horse power - &#x60;A10&#x60;: ampere square metre per joule second - &#x60;A11&#x60;: angstrom - &#x60;A12&#x60;: astronomical unit - &#x60;A13&#x60;: attojoule - &#x60;A14&#x60;: barn - &#x60;A15&#x60;: barn per electronvolt - &#x60;A16&#x60;: barn per steradian electronvolt - &#x60;A17&#x60;: barn per steradian - &#x60;A18&#x60;: becquerel per kilogram - &#x60;A19&#x60;: becquerel per cubic metre - &#x60;A2&#x60;: ampere per centimetre - &#x60;A20&#x60;: British thermal unit (international table) per second square foot degree Rankine - &#x60;A21&#x60;: British thermal unit (international table) per pound degree Rankine - &#x60;A22&#x60;: British thermal unit (international table) per second foot degree Rankine - &#x60;A23&#x60;: British thermal unit (international table) per hour square foot degree Rankine - &#x60;A24&#x60;: candela per square metre - &#x60;A26&#x60;: coulomb metre - &#x60;A27&#x60;: coulomb metre squared per volt - &#x60;A28&#x60;: coulomb per cubic centimetre - &#x60;A29&#x60;: coulomb per cubic metre - &#x60;A3&#x60;: ampere per millimetre - &#x60;A30&#x60;: coulomb per cubic millimetre - &#x60;A31&#x60;: coulomb per kilogram second - &#x60;A32&#x60;: coulomb per mole - &#x60;A33&#x60;: coulomb per square centimetre - &#x60;A34&#x60;: coulomb per square metre - &#x60;A35&#x60;: coulomb per square millimetre - &#x60;A36&#x60;: cubic centimetre per mole - &#x60;A37&#x60;: cubic decimetre per mole - &#x60;A38&#x60;: cubic metre per coulomb - &#x60;A39&#x60;: cubic metre per kilogram - &#x60;A4&#x60;: ampere per square centimetre - &#x60;A40&#x60;: cubic metre per mole - &#x60;A41&#x60;: ampere per square metre - &#x60;A42&#x60;: curie per kilogram - &#x60;A43&#x60;: deadweight tonnage - &#x60;A44&#x60;: decalitre - &#x60;A45&#x60;: decametre - &#x60;A47&#x60;: decitex - &#x60;A48&#x60;: degree Rankine - &#x60;A49&#x60;: denier - &#x60;A5&#x60;: ampere square metre - &#x60;A53&#x60;: electronvolt - &#x60;A54&#x60;: electronvolt per metre - &#x60;A55&#x60;: electronvolt square metre - &#x60;A56&#x60;: electronvolt square metre per kilogram - &#x60;A59&#x60;: 8-part cloud cover - &#x60;A6&#x60;: ampere per square metre kelvin squared - &#x60;A68&#x60;: exajoule - &#x60;A69&#x60;: farad per metre - &#x60;A7&#x60;: ampere per square millimetre - &#x60;A70&#x60;: femtojoule - &#x60;A71&#x60;: femtometre - &#x60;A73&#x60;: foot per second squared - &#x60;A74&#x60;: foot pound-force per second - &#x60;A75&#x60;: freight ton - &#x60;A76&#x60;: gal - &#x60;A8&#x60;: ampere second - &#x60;A84&#x60;: gigacoulomb per cubic metre - &#x60;A85&#x60;: gigaelectronvolt - &#x60;A86&#x60;: gigahertz - &#x60;A87&#x60;: gigaohm - &#x60;A88&#x60;: gigaohm metre - &#x60;A89&#x60;: gigapascal - &#x60;A9&#x60;: rate - &#x60;A90&#x60;: gigawatt - &#x60;A91&#x60;: gon - &#x60;A93&#x60;: gram per cubic metre - &#x60;A94&#x60;: gram per mole - &#x60;A95&#x60;: gray - &#x60;A96&#x60;: gray per second - &#x60;A97&#x60;: hectopascal - &#x60;A98&#x60;: henry per metre - &#x60;A99&#x60;: bit - &#x60;AA&#x60;: ball - &#x60;AB&#x60;: bulk pack - &#x60;ACR&#x60;: acre - &#x60;ACT&#x60;: activity - &#x60;AD&#x60;: byte - &#x60;AE&#x60;: ampere per metre - &#x60;AH&#x60;: additional minute - &#x60;AI&#x60;: average minute per call - &#x60;AK&#x60;: fathom - &#x60;AL&#x60;: access line - &#x60;AMH&#x60;: ampere hour - &#x60;AMP&#x60;: ampere - &#x60;ANN&#x60;: year - &#x60;APZ&#x60;: troy ounce or apothecary ounce - &#x60;AQ&#x60;: anti-hemophilic factor (AHF) unit - &#x60;AS&#x60;: assortment - &#x60;ASM&#x60;: alcoholic strength by mass - &#x60;ASU&#x60;: alcoholic strength by volume - &#x60;ATM&#x60;: standard atmosphere - &#x60;AWG&#x60;: american wire gauge - &#x60;AY&#x60;: assembly - &#x60;AZ&#x60;: British thermal unit (international table) per pound - &#x60;B1&#x60;: barrel (US) per day - &#x60;B10&#x60;: bit per second - &#x60;B11&#x60;: joule per kilogram kelvin - &#x60;B12&#x60;: joule per metre - &#x60;B13&#x60;: joule per square metre - &#x60;B14&#x60;: joule per metre to the fourth power - &#x60;B15&#x60;: joule per mole - &#x60;B16&#x60;: joule per mole kelvin - &#x60;B17&#x60;: credit - &#x60;B18&#x60;: joule second - &#x60;B19&#x60;: digit - &#x60;B20&#x60;: joule square metre per kilogram - &#x60;B21&#x60;: kelvin per watt - &#x60;B22&#x60;: kiloampere - &#x60;B23&#x60;: kiloampere per square metre - &#x60;B24&#x60;: kiloampere per metre - &#x60;B25&#x60;: kilobecquerel per kilogram - &#x60;B26&#x60;: kilocoulomb - &#x60;B27&#x60;: kilocoulomb per cubic metre - &#x60;B28&#x60;: kilocoulomb per square metre - &#x60;B29&#x60;: kiloelectronvolt - &#x60;B3&#x60;: batting pound - &#x60;B30&#x60;: gibibit - &#x60;B31&#x60;: kilogram metre per second - &#x60;B32&#x60;: kilogram metre squared - &#x60;B33&#x60;: kilogram metre squared per second - &#x60;B34&#x60;: kilogram per cubic decimetre - &#x60;B35&#x60;: kilogram per litre - &#x60;B4&#x60;: barrel, imperial - &#x60;B41&#x60;: kilojoule per kelvin - &#x60;B42&#x60;: kilojoule per kilogram - &#x60;B43&#x60;: kilojoule per kilogram kelvin - &#x60;B44&#x60;: kilojoule per mole - &#x60;B45&#x60;: kilomole - &#x60;B46&#x60;: kilomole per cubic metre - &#x60;B47&#x60;: kilonewton - &#x60;B48&#x60;: kilonewton metre - &#x60;B49&#x60;: kiloohm - &#x60;B50&#x60;: kiloohm metre - &#x60;B52&#x60;: kilosecond - &#x60;B53&#x60;: kilosiemens - &#x60;B54&#x60;: kilosiemens per metre - &#x60;B55&#x60;: kilovolt per metre - &#x60;B56&#x60;: kiloweber per metre - &#x60;B57&#x60;: light year - &#x60;B58&#x60;: litre per mole - &#x60;B59&#x60;: lumen hour - &#x60;B60&#x60;: lumen per square metre - &#x60;B61&#x60;: lumen per watt - &#x60;B62&#x60;: lumen second - &#x60;B63&#x60;: lux hour - &#x60;B64&#x60;: lux second - &#x60;B66&#x60;: megaampere per square metre - &#x60;B67&#x60;: megabecquerel per kilogram - &#x60;B68&#x60;: gigabit - &#x60;B69&#x60;: megacoulomb per cubic metre - &#x60;B7&#x60;: cycle - &#x60;B70&#x60;: megacoulomb per square metre - &#x60;B71&#x60;: megaelectronvolt - &#x60;B72&#x60;: megagram per cubic metre - &#x60;B73&#x60;: meganewton - &#x60;B74&#x60;: meganewton metre - &#x60;B75&#x60;: megaohm - &#x60;B76&#x60;: megaohm metre - &#x60;B77&#x60;: megasiemens per metre - &#x60;B78&#x60;: megavolt - &#x60;B79&#x60;: megavolt per metre - &#x60;B8&#x60;: joule per cubic metre - &#x60;B80&#x60;: gigabit per second - &#x60;B81&#x60;: reciprocal metre squared reciprocal second - &#x60;B82&#x60;: inch per linear foot - &#x60;B83&#x60;: metre to the fourth power - &#x60;B84&#x60;: microampere - &#x60;B85&#x60;: microbar - &#x60;B86&#x60;: microcoulomb - &#x60;B87&#x60;: microcoulomb per cubic metre - &#x60;B88&#x60;: microcoulomb per square metre - &#x60;B89&#x60;: microfarad per metre - &#x60;B90&#x60;: microhenry - &#x60;B91&#x60;: microhenry per metre - &#x60;B92&#x60;: micronewton - &#x60;B93&#x60;: micronewton metre - &#x60;B94&#x60;: microohm - &#x60;B95&#x60;: microohm metre - &#x60;B96&#x60;: micropascal - &#x60;B97&#x60;: microradian - &#x60;B98&#x60;: microsecond - &#x60;B99&#x60;: microsiemens - &#x60;BAR&#x60;: bar [unit of pressure] - &#x60;BB&#x60;: base box - &#x60;BFT&#x60;: board foot - &#x60;BHP&#x60;: brake horse power - &#x60;BIL&#x60;: billion (EUR) - &#x60;BLD&#x60;: dry barrel (US) - &#x60;BLL&#x60;: barrel (US) - &#x60;BP&#x60;: hundred board foot - &#x60;BPM&#x60;: beats per minute - &#x60;BQL&#x60;: becquerel - &#x60;BTU&#x60;: British thermal unit (international table) - &#x60;BUA&#x60;: bushel (US) - &#x60;BUI&#x60;: bushel (UK) - &#x60;C0&#x60;: call - &#x60;C10&#x60;: millifarad - &#x60;C11&#x60;: milligal - &#x60;C12&#x60;: milligram per metre - &#x60;C13&#x60;: milligray - &#x60;C14&#x60;: millihenry - &#x60;C15&#x60;: millijoule - &#x60;C16&#x60;: millimetre per second - &#x60;C17&#x60;: millimetre squared per second - &#x60;C18&#x60;: millimole - &#x60;C19&#x60;: mole per kilogram - &#x60;C20&#x60;: millinewton - &#x60;C21&#x60;: kibibit - &#x60;C22&#x60;: millinewton per metre - &#x60;C23&#x60;: milliohm metre - &#x60;C24&#x60;: millipascal second - &#x60;C25&#x60;: milliradian - &#x60;C26&#x60;: millisecond - &#x60;C27&#x60;: millisiemens - &#x60;C28&#x60;: millisievert - &#x60;C29&#x60;: millitesla - &#x60;C3&#x60;: microvolt per metre - &#x60;C30&#x60;: millivolt per metre - &#x60;C31&#x60;: milliwatt - &#x60;C32&#x60;: milliwatt per square metre - &#x60;C33&#x60;: milliweber - &#x60;C34&#x60;: mole - &#x60;C35&#x60;: mole per cubic decimetre - &#x60;C36&#x60;: mole per cubic metre - &#x60;C37&#x60;: kilobit - &#x60;C38&#x60;: mole per litre - &#x60;C39&#x60;: nanoampere - &#x60;C40&#x60;: nanocoulomb - &#x60;C41&#x60;: nanofarad - &#x60;C42&#x60;: nanofarad per metre - &#x60;C43&#x60;: nanohenry - &#x60;C44&#x60;: nanohenry per metre - &#x60;C45&#x60;: nanometre - &#x60;C46&#x60;: nanoohm metre - &#x60;C47&#x60;: nanosecond - &#x60;C48&#x60;: nanotesla - &#x60;C49&#x60;: nanowatt - &#x60;C50&#x60;: neper - &#x60;C51&#x60;: neper per second - &#x60;C52&#x60;: picometre - &#x60;C53&#x60;: newton metre second - &#x60;C54&#x60;: newton metre squared per kilogram squared - &#x60;C55&#x60;: newton per square metre - &#x60;C56&#x60;: newton per square millimetre - &#x60;C57&#x60;: newton second - &#x60;C58&#x60;: newton second per metre - &#x60;C59&#x60;: octave - &#x60;C60&#x60;: ohm centimetre - &#x60;C61&#x60;: ohm metre - &#x60;C62&#x60;: one - &#x60;C63&#x60;: parsec - &#x60;C64&#x60;: pascal per kelvin - &#x60;C65&#x60;: pascal second - &#x60;C66&#x60;: pascal second per cubic metre - &#x60;C67&#x60;: pascal second per metre - &#x60;C68&#x60;: petajoule - &#x60;C69&#x60;: phon - &#x60;C7&#x60;: centipoise - &#x60;C70&#x60;: picoampere - &#x60;C71&#x60;: picocoulomb - &#x60;C72&#x60;: picofarad per metre - &#x60;C73&#x60;: picohenry - &#x60;C74&#x60;: kilobit per second - &#x60;C75&#x60;: picowatt - &#x60;C76&#x60;: picowatt per square metre - &#x60;C78&#x60;: pound-force - &#x60;C79&#x60;: kilovolt ampere hour - &#x60;C8&#x60;: millicoulomb per kilogram - &#x60;C80&#x60;: rad - &#x60;C81&#x60;: radian - &#x60;C82&#x60;: radian square metre per mole - &#x60;C83&#x60;: radian square metre per kilogram - &#x60;C84&#x60;: radian per metre - &#x60;C85&#x60;: reciprocal angstrom - &#x60;C86&#x60;: reciprocal cubic metre - &#x60;C87&#x60;: reciprocal cubic metre per second - &#x60;C88&#x60;: reciprocal electron volt per cubic metre - &#x60;C89&#x60;: reciprocal henry - &#x60;C9&#x60;: coil group - &#x60;C90&#x60;: reciprocal joule per cubic metre - &#x60;C91&#x60;: reciprocal kelvin or kelvin to the power minus one - &#x60;C92&#x60;: reciprocal metre - &#x60;C93&#x60;: reciprocal square metre - &#x60;C94&#x60;: reciprocal minute - &#x60;C95&#x60;: reciprocal mole - &#x60;C96&#x60;: reciprocal pascal or pascal to the power minus one - &#x60;C97&#x60;: reciprocal second - &#x60;C99&#x60;: reciprocal second per metre squared - &#x60;CCT&#x60;: carrying capacity in metric ton - &#x60;CDL&#x60;: candela - &#x60;CEL&#x60;: degree Celsius - &#x60;CEN&#x60;: hundred - &#x60;CG&#x60;: card - &#x60;CGM&#x60;: centigram - &#x60;CKG&#x60;: coulomb per kilogram - &#x60;CLF&#x60;: hundred leave - &#x60;CLT&#x60;: centilitre - &#x60;CMK&#x60;: square centimetre - &#x60;CMQ&#x60;: Kubikzentimeter - &#x60;CMT&#x60;: Zentimeter - &#x60;CNP&#x60;: hundred pack - &#x60;CNT&#x60;: cental (UK) - &#x60;COU&#x60;: coulomb - &#x60;CTG&#x60;: content gram - &#x60;CTM&#x60;: metric carat - &#x60;CTN&#x60;: content ton (metric) - &#x60;CUR&#x60;: curie - &#x60;CWA&#x60;: hundred pound (cwt) / hundred weight (US) - &#x60;CWI&#x60;: hundred weight (UK) - &#x60;D03&#x60;: kilowatt hour per hour - &#x60;D04&#x60;: lot [unit of weight] - &#x60;D1&#x60;: reciprocal second per steradian - &#x60;D10&#x60;: siemens per metre - &#x60;D11&#x60;: mebibit - &#x60;D12&#x60;: siemens square metre per mole - &#x60;D13&#x60;: sievert - &#x60;D15&#x60;: sone - &#x60;D16&#x60;: square centimetre per erg - &#x60;D17&#x60;: square centimetre per steradian erg - &#x60;D18&#x60;: metre kelvin - &#x60;D19&#x60;: square metre kelvin per watt - &#x60;D2&#x60;: reciprocal second per steradian metre squared - &#x60;D20&#x60;: square metre per joule - &#x60;D21&#x60;: square metre per kilogram - &#x60;D22&#x60;: square metre per mole - &#x60;D23&#x60;: pen gram (protein) - &#x60;D24&#x60;: square metre per steradian - &#x60;D25&#x60;: square metre per steradian joule - &#x60;D26&#x60;: square metre per volt second - &#x60;D27&#x60;: steradian - &#x60;D29&#x60;: terahertz - &#x60;D30&#x60;: terajoule - &#x60;D31&#x60;: terawatt - &#x60;D32&#x60;: terawatt hour - &#x60;D33&#x60;: tesla - &#x60;D34&#x60;: tex - &#x60;D36&#x60;: megabit - &#x60;D41&#x60;: tonne per cubic metre - &#x60;D42&#x60;: tropical year - &#x60;D43&#x60;: unified atomic mass unit - &#x60;D44&#x60;: var - &#x60;D45&#x60;: volt squared per kelvin squared - &#x60;D46&#x60;: volt - ampere - &#x60;D47&#x60;: volt per centimetre - &#x60;D48&#x60;: volt per kelvin - &#x60;D49&#x60;: millivolt per kelvin - &#x60;D5&#x60;: kilogram per square centimetre - &#x60;D50&#x60;: volt per metre - &#x60;D51&#x60;: volt per millimetre - &#x60;D52&#x60;: watt per kelvin - &#x60;D53&#x60;: watt per metre kelvin - &#x60;D54&#x60;: watt per square metre - &#x60;D55&#x60;: watt per square metre kelvin - &#x60;D56&#x60;: watt per square metre kelvin to the fourth power - &#x60;D57&#x60;: watt per steradian - &#x60;D58&#x60;: watt per steradian square metre - &#x60;D59&#x60;: weber per metre - &#x60;D6&#x60;: roentgen per second - &#x60;D60&#x60;: weber per millimetre - &#x60;D61&#x60;: minute [unit of angle] - &#x60;D62&#x60;: second [unit of angle] - &#x60;D63&#x60;: book - &#x60;D65&#x60;: round - &#x60;D68&#x60;: number of words - &#x60;D69&#x60;: inch to the fourth power - &#x60;D73&#x60;: joule square metre - &#x60;D74&#x60;: kilogram per mole - &#x60;D77&#x60;: megacoulomb - &#x60;D78&#x60;: megajoule per second - &#x60;D80&#x60;: microwatt - &#x60;D81&#x60;: microtesla - &#x60;D82&#x60;: microvolt - &#x60;D83&#x60;: millinewton metre - &#x60;D85&#x60;: microwatt per square metre - &#x60;D86&#x60;: millicoulomb - &#x60;D87&#x60;: millimole per kilogram - &#x60;D88&#x60;: millicoulomb per cubic metre - &#x60;D89&#x60;: millicoulomb per square metre - &#x60;D91&#x60;: rem - &#x60;D93&#x60;: second per cubic metre - &#x60;D94&#x60;: second per cubic metre radian - &#x60;D95&#x60;: joule per gram - &#x60;DAA&#x60;: decare - &#x60;DAD&#x60;: ten day - &#x60;DAY&#x60;: Tag - &#x60;DB&#x60;: dry pound - &#x60;DD&#x60;: degree [unit of angle] - &#x60;DEC&#x60;: decade - &#x60;DG&#x60;: decigram - &#x60;DJ&#x60;: decagram - &#x60;DLT&#x60;: decilitre - &#x60;DMA&#x60;: cubic decametre - &#x60;DMK&#x60;: square decimetre - &#x60;DMO&#x60;: standard kilolitre - &#x60;DMQ&#x60;: cubic decimetre - &#x60;DMT&#x60;: decimetre - &#x60;DN&#x60;: decinewton metre - &#x60;DPC&#x60;: Dutzend St�ck - &#x60;DPR&#x60;: Dutzend Paar - &#x60;DPT&#x60;: displacement tonnage - &#x60;DRA&#x60;: dram (US) - &#x60;DRI&#x60;: dram (UK) - &#x60;DRL&#x60;: dozen roll - &#x60;DT&#x60;: dry ton - &#x60;DTN&#x60;: decitonne - &#x60;DWT&#x60;: pennyweight - &#x60;DZN&#x60;: dozen - &#x60;DZP&#x60;: dozen pack - &#x60;E01&#x60;: Newton pro Quadratzentimeter - &#x60;E07&#x60;: megawatt hour per hour - &#x60;E08&#x60;: megawatt per hertz - &#x60;E09&#x60;: milliampere hour - &#x60;E10&#x60;: degree day - &#x60;E12&#x60;: mille - &#x60;E14&#x60;: kilocalorie (international table) - &#x60;E15&#x60;: kilocalorie (thermochemical) per hour - &#x60;E16&#x60;: million Btu(IT) per hour - &#x60;E17&#x60;: cubic foot per second - &#x60;E18&#x60;: tonne per hour - &#x60;E19&#x60;: ping - &#x60;E20&#x60;: megabit per second - &#x60;E21&#x60;: shares - &#x60;E22&#x60;: TEU - &#x60;E23&#x60;: tyre - &#x60;E25&#x60;: active unit - &#x60;E27&#x60;: dose - &#x60;E28&#x60;: air dry ton - &#x60;E30&#x60;: strand - &#x60;E31&#x60;: Quadratmeter pro Liter - &#x60;E32&#x60;: litre per hour - &#x60;E33&#x60;: foot per thousand - &#x60;E34&#x60;: gigabyte - &#x60;E35&#x60;: terabyte - &#x60;E36&#x60;: petabyte - &#x60;E37&#x60;: pixel - &#x60;E38&#x60;: megapixel - &#x60;E39&#x60;: dots per inch - &#x60;E4&#x60;: gross kilogram - &#x60;E40&#x60;: part per hundred thousand - &#x60;E41&#x60;: kilogram-force per square millimetre - &#x60;E42&#x60;: kilogram-force per square centimetre - &#x60;E43&#x60;: joule per square centimetre - &#x60;E44&#x60;: kilogram-force metre per square centimetre - &#x60;E45&#x60;: milliohm - &#x60;E46&#x60;: kilowatt hour per cubic metre - &#x60;E47&#x60;: kilowatt hour per kelvin - &#x60;E48&#x60;: service unit - &#x60;E49&#x60;: working day - &#x60;E50&#x60;: accounting unit - &#x60;E51&#x60;: job - &#x60;E52&#x60;: run foot - &#x60;E53&#x60;: test - &#x60;E54&#x60;: trip - &#x60;E55&#x60;: use - &#x60;E56&#x60;: well - &#x60;E57&#x60;: zone - &#x60;E58&#x60;: exabit per second - &#x60;E59&#x60;: exbibyte - &#x60;E60&#x60;: pebibyte - &#x60;E61&#x60;: tebibyte - &#x60;E62&#x60;: gibibyte - &#x60;E63&#x60;: mebibyte - &#x60;E64&#x60;: kibibyte - &#x60;E65&#x60;: exbibit per metre - &#x60;E66&#x60;: exbibit per square metre - &#x60;E67&#x60;: exbibit per cubic metre - &#x60;E68&#x60;: gigabyte per second - &#x60;E69&#x60;: gibibit per metre - &#x60;E70&#x60;: gibibit per square metre - &#x60;E71&#x60;: gibibit per cubic metre - &#x60;E72&#x60;: kibibit per metre - &#x60;E73&#x60;: kibibit per square metre - &#x60;E74&#x60;: kibibit per cubic metre - &#x60;E75&#x60;: mebibit per metre - &#x60;E76&#x60;: mebibit per square metre - &#x60;E77&#x60;: mebibit per cubic metre - &#x60;E78&#x60;: petabit - &#x60;E79&#x60;: petabit per second - &#x60;E80&#x60;: pebibit per metre - &#x60;E81&#x60;: pebibit per square metre - &#x60;E82&#x60;: pebibit per cubic metre - &#x60;E83&#x60;: terabit - &#x60;E84&#x60;: terabit per second - &#x60;E85&#x60;: tebibit per metre - &#x60;E86&#x60;: tebibit per cubic metre - &#x60;E87&#x60;: tebibit per square metre - &#x60;E88&#x60;: bit per metre - &#x60;E89&#x60;: bit per square metre - &#x60;E90&#x60;: reciprocal centimetre - &#x60;E91&#x60;: reciprocal day - &#x60;E92&#x60;: cubic decimetre per hour - &#x60;E93&#x60;: kilogram per hour - &#x60;E94&#x60;: kilomole per second - &#x60;E95&#x60;: mole per second - &#x60;E96&#x60;: degree per second - &#x60;E97&#x60;: millimetre per degree Celcius metre - &#x60;E98&#x60;: degree Celsius per kelvin - &#x60;E99&#x60;: hectopascal per bar - &#x60;EA&#x60;: each - &#x60;EB&#x60;: electronic mail box - &#x60;EQ&#x60;: equivalent gallon - &#x60;F01&#x60;: bit per cubic metre - &#x60;F02&#x60;: kelvin per kelvin - &#x60;F03&#x60;: kilopascal per bar - &#x60;F04&#x60;: millibar per bar - &#x60;F05&#x60;: megapascal per bar - &#x60;F06&#x60;: poise per bar - &#x60;F07&#x60;: pascal per bar - &#x60;F08&#x60;: milliampere per inch - &#x60;F10&#x60;: kelvin per hour - &#x60;F11&#x60;: kelvin per minute - &#x60;F12&#x60;: kelvin per second - &#x60;F13&#x60;: slug - &#x60;F14&#x60;: gram per kelvin - &#x60;F15&#x60;: kilogram per kelvin - &#x60;F16&#x60;: milligram per kelvin - &#x60;F17&#x60;: pound-force per foot - &#x60;F18&#x60;: kilogram square centimetre - &#x60;F19&#x60;: kilogram square millimetre - &#x60;F20&#x60;: pound inch squared - &#x60;F21&#x60;: pound-force inch - &#x60;F22&#x60;: pound-force foot per ampere - &#x60;F23&#x60;: gram per cubic decimetre - &#x60;F24&#x60;: kilogram per kilomol - &#x60;F25&#x60;: gram per hertz - &#x60;F26&#x60;: gram per day - &#x60;F27&#x60;: gram per hour - &#x60;F28&#x60;: gram per minute - &#x60;F29&#x60;: gram per second - &#x60;F30&#x60;: kilogram per day - &#x60;F31&#x60;: kilogram per minute - &#x60;F32&#x60;: milligram per day - &#x60;F33&#x60;: milligram per minute - &#x60;F34&#x60;: milligram per second - &#x60;F35&#x60;: gram per day kelvin - &#x60;F36&#x60;: gram per hour kelvin - &#x60;F37&#x60;: gram per minute kelvin - &#x60;F38&#x60;: gram per second kelvin - &#x60;F39&#x60;: kilogram per day kelvin - &#x60;F40&#x60;: kilogram per hour kelvin - &#x60;F41&#x60;: kilogram per minute kelvin - &#x60;F42&#x60;: kilogram per second kelvin - &#x60;F43&#x60;: milligram per day kelvin - &#x60;F44&#x60;: milligram per hour kelvin - &#x60;F45&#x60;: milligram per minute kelvin - &#x60;F46&#x60;: milligram per second kelvin - &#x60;F47&#x60;: newton per millimetre - &#x60;F48&#x60;: pound-force per inch - &#x60;F49&#x60;: rod [unit of distance] - &#x60;F50&#x60;: micrometre per kelvin - &#x60;F51&#x60;: centimetre per kelvin - &#x60;F52&#x60;: metre per kelvin - &#x60;F53&#x60;: millimetre per kelvin - &#x60;F54&#x60;: milliohm per metre - &#x60;F55&#x60;: ohm per mile (statute mile) - &#x60;F56&#x60;: Ohm pro Kilometer - &#x60;F57&#x60;: milliampere per pound-force per square inch - &#x60;F58&#x60;: reciprocal bar - &#x60;F59&#x60;: milliampere per bar - &#x60;F60&#x60;: degree Celsius per bar - &#x60;F61&#x60;: kelvin per bar - &#x60;F62&#x60;: gram per day bar - &#x60;F63&#x60;: gram per hour bar - &#x60;F64&#x60;: gram per minute bar - &#x60;F65&#x60;: gram per second bar - &#x60;F66&#x60;: kilogram per day bar - &#x60;F67&#x60;: kilogram per hour bar - &#x60;F68&#x60;: kilogram per minute bar - &#x60;F69&#x60;: kilogram per second bar - &#x60;F70&#x60;: milligram per day bar - &#x60;F71&#x60;: milligram per hour bar - &#x60;F72&#x60;: milligram per minute bar - &#x60;F73&#x60;: milligram per second bar - &#x60;F74&#x60;: gram per bar - &#x60;F75&#x60;: milligram per bar - &#x60;F76&#x60;: milliampere per millimetre - &#x60;F77&#x60;: pascal second per kelvin - &#x60;F78&#x60;: inch of water - &#x60;F79&#x60;: inch of mercury - &#x60;F80&#x60;: water horse power - &#x60;F81&#x60;: bar per kelvin - &#x60;F82&#x60;: hectopascal per kelvin - &#x60;F83&#x60;: kilopascal per kelvin - &#x60;F84&#x60;: millibar per kelvin - &#x60;F85&#x60;: megapascal per kelvin - &#x60;F86&#x60;: poise per kelvin - &#x60;F87&#x60;: volt per litre minute - &#x60;F88&#x60;: newton centimetre - &#x60;F89&#x60;: newton metre per degree - &#x60;F90&#x60;: newton metre per ampere - &#x60;F91&#x60;: bar litre per second - &#x60;F92&#x60;: bar cubic metre per second - &#x60;F93&#x60;: hectopascal litre per second - &#x60;F94&#x60;: hectopascal cubic metre per second - &#x60;F95&#x60;: millibar litre per second - &#x60;F96&#x60;: millibar cubic metre per second - &#x60;F97&#x60;: megapascal litre per second - &#x60;F98&#x60;: megapascal cubic metre per second - &#x60;F99&#x60;: pascal litre per second - &#x60;FAH&#x60;: degree Fahrenheit - &#x60;FAR&#x60;: farad - &#x60;FBM&#x60;: fibre metre - &#x60;FC&#x60;: thousand cubic foot - &#x60;FF&#x60;: hundred cubic metre - &#x60;FH&#x60;: micromole - &#x60;FIT&#x60;: failures in time - &#x60;FL&#x60;: flake ton - &#x60;FOT&#x60;: foot - &#x60;FP&#x60;: pound per square foot - &#x60;FR&#x60;: foot per minute - &#x60;FS&#x60;: foot per second - &#x60;FTK&#x60;: square foot - &#x60;FTQ&#x60;: cubic foot - &#x60;G01&#x60;: pascal cubic metre per second - &#x60;G04&#x60;: centimetre per bar - &#x60;G05&#x60;: metre per bar - &#x60;G06&#x60;: millimetre per bar - &#x60;G08&#x60;: square inch per second - &#x60;G09&#x60;: Quadratmeter pro Sekunde Kelvin - &#x60;G10&#x60;: stokes per kelvin - &#x60;G11&#x60;: gram per cubic centimetre bar - &#x60;G12&#x60;: gram per cubic decimetre bar - &#x60;G13&#x60;: gram per litre bar - &#x60;G14&#x60;: gram per cubic metre bar - &#x60;G15&#x60;: gram per millilitre bar - &#x60;G16&#x60;: kilogram per cubic centimetre bar - &#x60;G17&#x60;: kilogram per litre bar - &#x60;G18&#x60;: kilogram per cubic metre bar - &#x60;G19&#x60;: newton metre per kilogram - &#x60;G2&#x60;: US gallon per minute - &#x60;G20&#x60;: pound-force foot per pound - &#x60;G21&#x60;: cup [unit of volume] - &#x60;G23&#x60;: peck - &#x60;G24&#x60;: tablespoon (US) - &#x60;G25&#x60;: teaspoon (US) - &#x60;G26&#x60;: stere - &#x60;G27&#x60;: cubic centimetre per kelvin - &#x60;G28&#x60;: litre per kelvin - &#x60;G29&#x60;: cubic metre per kelvin - &#x60;G3&#x60;: Imperial gallon per minute - &#x60;G30&#x60;: millilitre per kelvin - &#x60;G31&#x60;: kilogram per cubic centimetre - &#x60;G32&#x60;: ounce (avoirdupois) per cubic yard - &#x60;G33&#x60;: gram per cubic centimetre kelvin - &#x60;G34&#x60;: gram per cubic decimetre kelvin - &#x60;G35&#x60;: gram per litre kelvin - &#x60;G36&#x60;: gram per cubic metre kelvin - &#x60;G37&#x60;: gram per millilitre kelvin - &#x60;G38&#x60;: kilogram per cubic centimetre kelvin - &#x60;G39&#x60;: kilogram per litre kelvin - &#x60;G40&#x60;: kilogram per cubic metre kelvin - &#x60;G41&#x60;: square metre per second bar - &#x60;G42&#x60;: microsiemens per centimetre - &#x60;G43&#x60;: microsiemens per metre - &#x60;G44&#x60;: nanosiemens per centimetre - &#x60;G45&#x60;: nanosiemens per metre - &#x60;G46&#x60;: stokes per bar - &#x60;G47&#x60;: cubic centimetre per day - &#x60;G48&#x60;: cubic centimetre per hour - &#x60;G49&#x60;: cubic centimetre per minute - &#x60;G50&#x60;: gallon (US) per hour - &#x60;G51&#x60;: litre per second - &#x60;G52&#x60;: cubic metre per day - &#x60;G53&#x60;: cubic metre per minute - &#x60;G54&#x60;: millilitre per day - &#x60;G55&#x60;: millilitre per hour - &#x60;G56&#x60;: cubic inch per hour - &#x60;G57&#x60;: cubic inch per minute - &#x60;G58&#x60;: cubic inch per second - &#x60;G59&#x60;: milliampere per litre minute - &#x60;G60&#x60;: volt per bar - &#x60;G61&#x60;: cubic centimetre per day kelvin - &#x60;G62&#x60;: cubic centimetre per hour kelvin - &#x60;G63&#x60;: cubic centimetre per minute kelvin - &#x60;G64&#x60;: cubic centimetre per second kelvin - &#x60;G65&#x60;: litre per day kelvin - &#x60;G66&#x60;: litre per hour kelvin - &#x60;G67&#x60;: litre per minute kelvin - &#x60;G68&#x60;: litre per second kelvin - &#x60;G69&#x60;: cubic metre per day kelvin - &#x60;G70&#x60;: cubic metre per hour kelvin - &#x60;G71&#x60;: cubic metre per minute kelvin - &#x60;G72&#x60;: cubic metre per second kelvin - &#x60;G73&#x60;: millilitre per day kelvin - &#x60;G74&#x60;: millilitre per hour kelvin - &#x60;G75&#x60;: Milliliter pro Minute Kelvin - &#x60;G76&#x60;: millilitre per second kelvin - &#x60;G77&#x60;: millimetre to the fourth power - &#x60;G78&#x60;: cubic centimetre per day bar - &#x60;G79&#x60;: cubic centimetre per hour bar - &#x60;G80&#x60;: cubic centimetre per minute bar - &#x60;G81&#x60;: cubic centimetre per second bar - &#x60;G82&#x60;: litre per day bar - &#x60;G83&#x60;: litre per hour bar - &#x60;G84&#x60;: litre per minute bar - &#x60;G85&#x60;: litre per second bar - &#x60;G86&#x60;: cubic metre per day bar - &#x60;G87&#x60;: cubic metre per hour bar - &#x60;G88&#x60;: Kubikmeter pro Minute bar - &#x60;G89&#x60;: cubic metre per second bar - &#x60;G90&#x60;: Milliliter pro Tag bar - &#x60;G91&#x60;: millilitre per hour bar - &#x60;G92&#x60;: millilitre per minute bar - &#x60;G93&#x60;: millilitre per second bar - &#x60;G94&#x60;: cubic centimetre per bar - &#x60;G95&#x60;: litre per bar - &#x60;G96&#x60;: cubic metre per bar - &#x60;G97&#x60;: millilitre per bar - &#x60;G98&#x60;: microhenry per kiloohm - &#x60;G99&#x60;: microhenry per ohm - &#x60;GB&#x60;: gallon (US) per day - &#x60;GBQ&#x60;: gigabecquerel - &#x60;GDW&#x60;: Gramm, Trockengewicht - &#x60;GE&#x60;: pound per gallon (US) - &#x60;GF&#x60;: gram per metre (gram per 100 centimetres) - &#x60;GFI&#x60;: gram of fissile isotope - &#x60;GGR&#x60;: great gross - &#x60;GIA&#x60;: gill (US) - &#x60;GIC&#x60;: gram, including container - &#x60;GII&#x60;: gill (UK) - &#x60;GIP&#x60;: gram, including inner packaging - &#x60;GJ&#x60;: gram per millilitre - &#x60;GL&#x60;: gram per litre - &#x60;GLD&#x60;: dry gallon (US) - &#x60;GLI&#x60;: gallon (UK) - &#x60;GLL&#x60;: gallon (US) - &#x60;GM&#x60;: gram per square metre - &#x60;GO&#x60;: milligram per square metre - &#x60;GP&#x60;: milligram per cubic metre - &#x60;GQ&#x60;: microgram per cubic metre - &#x60;GRM&#x60;: Gramm - &#x60;GRN&#x60;: grain - &#x60;GRO&#x60;: gross - &#x60;GV&#x60;: gigajoule - &#x60;GWH&#x60;: gigawatt hour - &#x60;H03&#x60;: henry per kiloohm - &#x60;H04&#x60;: henry per ohm - &#x60;H05&#x60;: millihenry per kiloohm - &#x60;H06&#x60;: millihenry per ohm - &#x60;H07&#x60;: pascal second per bar - &#x60;H08&#x60;: microbecquerel - &#x60;H09&#x60;: reciprocal year - &#x60;H10&#x60;: reciprocal hour - &#x60;H11&#x60;: reciprocal month - &#x60;H12&#x60;: degree Celsius per hour - &#x60;H13&#x60;: degree Celsius per minute - &#x60;H14&#x60;: degree Celsius per second - &#x60;H15&#x60;: square centimetre per gram - &#x60;H16&#x60;: square decametre - &#x60;H18&#x60;: square hectometre - &#x60;H19&#x60;: cubic hectometre - &#x60;H20&#x60;: cubic kilometre - &#x60;H21&#x60;: blank - &#x60;H22&#x60;: volt square inch per pound-force - &#x60;H23&#x60;: volt per inch - &#x60;H24&#x60;: volt per microsecond - &#x60;H25&#x60;: percent per kelvin - &#x60;H26&#x60;: ohm per metre - &#x60;H27&#x60;: degree per metre - &#x60;H28&#x60;: microfarad per kilometre - &#x60;H29&#x60;: microgram per litre - &#x60;H30&#x60;: square micrometre (square micron) - &#x60;H31&#x60;: Ampere pro Kilogramm - &#x60;H32&#x60;: ampere squared second - &#x60;H33&#x60;: farad per kilometre - &#x60;H34&#x60;: hertz metre - &#x60;H35&#x60;: kelvin metre per watt - &#x60;H36&#x60;: megaohm per kilometre - &#x60;H37&#x60;: megaohm per metre - &#x60;H38&#x60;: megaampere - &#x60;H39&#x60;: megahertz kilometre - &#x60;H40&#x60;: newton per ampere - &#x60;H41&#x60;: newton metre watt to the power minus 0,5 - &#x60;H42&#x60;: pascal per metre - &#x60;H43&#x60;: siemens per centimetre - &#x60;H44&#x60;: teraohm - &#x60;H45&#x60;: volt second per metre - &#x60;H46&#x60;: volt per second - &#x60;H47&#x60;: watt per cubic metre - &#x60;H48&#x60;: attofarad - &#x60;H49&#x60;: centimetre per hour - &#x60;H50&#x60;: reciprocal cubic centimetre - &#x60;H51&#x60;: decibel per kilometre - &#x60;H52&#x60;: decibel per metre - &#x60;H53&#x60;: kilogram per bar - &#x60;H54&#x60;: kilogram per cubic decimetre kelvin - &#x60;H55&#x60;: kilogram per cubic decimetre bar - &#x60;H56&#x60;: kilogram per square metre second - &#x60;H57&#x60;: inch per two pi radiant - &#x60;H58&#x60;: metre per volt second - &#x60;H59&#x60;: square metre per newton - &#x60;H60&#x60;: cubic metre per cubic metre - &#x60;H61&#x60;: millisiemens per centimetre - &#x60;H62&#x60;: millivolt per minute - &#x60;H63&#x60;: milligram per square centimetre - &#x60;H64&#x60;: milligram per gram - &#x60;H65&#x60;: millilitre per cubic metre - &#x60;H66&#x60;: millimetre per year - &#x60;H67&#x60;: millimetre per hour - &#x60;H68&#x60;: millimole per gram - &#x60;H69&#x60;: picopascal per kilometre - &#x60;H70&#x60;: picosecond - &#x60;H71&#x60;: percent per month - &#x60;H72&#x60;: percent per hectobar - &#x60;H73&#x60;: percent per decakelvin - &#x60;H74&#x60;: watt per metre - &#x60;H75&#x60;: decapascal - &#x60;H76&#x60;: gram per millimetre - &#x60;H77&#x60;: module width - &#x60;H79&#x60;: French gauge - &#x60;H80&#x60;: rack unit - &#x60;H81&#x60;: millimetre per minute - &#x60;H82&#x60;: big point - &#x60;H83&#x60;: litre per kilogram - &#x60;H84&#x60;: gram millimetre - &#x60;H85&#x60;: wechselseitige Woche - &#x60;H87&#x60;: St�ck - &#x60;H88&#x60;: megaohm kilometre - &#x60;H89&#x60;: percent per ohm - &#x60;H90&#x60;: percent per degree - &#x60;H91&#x60;: percent per ten thousand - &#x60;H92&#x60;: percent per one hundred thousand - &#x60;H93&#x60;: percent per hundred - &#x60;H94&#x60;: percent per thousand - &#x60;H95&#x60;: percent per volt - &#x60;H96&#x60;: percent per bar - &#x60;H98&#x60;: percent per inch - &#x60;H99&#x60;: percent per metre - &#x60;HA&#x60;: hank - &#x60;HBA&#x60;: hectobar - &#x60;HBX&#x60;: hundred boxes - &#x60;HC&#x60;: hundred count - &#x60;HDW&#x60;: hundred kilogram, dry weight - &#x60;HEA&#x60;: head - &#x60;HGM&#x60;: hectogram - &#x60;HH&#x60;: hundred cubic foot - &#x60;HIU&#x60;: hundred international unit - &#x60;HKM&#x60;: hundred kilogram, net mass - &#x60;HLT&#x60;: hectolitre - &#x60;HM&#x60;: mile per hour (statute mile) - &#x60;HMQ&#x60;: million cubic metre - &#x60;HMT&#x60;: hectometre - &#x60;HPA&#x60;: hectolitre of pure alcohol - &#x60;HTZ&#x60;: hertz - &#x60;HUR&#x60;: Stunde - &#x60;IA&#x60;: inch pound (pound inch) - &#x60;IE&#x60;: person - &#x60;INH&#x60;: inch - &#x60;INK&#x60;: square inch - &#x60;INQ&#x60;: cubic inch - &#x60;ISD&#x60;: international sugar degree - &#x60;IU&#x60;: inch per second - &#x60;IUG&#x60;: international unit per gram - &#x60;IV&#x60;: inch per second squared - &#x60;J10&#x60;: percent per millimetre - &#x60;J12&#x60;: per mille per psi - &#x60;J13&#x60;: degree API - &#x60;J14&#x60;: degree Baume (origin scale) - &#x60;J15&#x60;: degree Baume (US heavy) - &#x60;J16&#x60;: degree Baume (US light) - &#x60;J17&#x60;: degree Balling - &#x60;J18&#x60;: degree Brix - &#x60;J19&#x60;: degree Fahrenheit hour square foot per British thermal unit (thermochemical) - &#x60;J2&#x60;: joule per kilogram - &#x60;J20&#x60;: degree Fahrenheit per kelvin - &#x60;J21&#x60;: degree Fahrenheit per bar - &#x60;J22&#x60;: degree Fahrenheit hour square foot per British thermal unit (international table) - &#x60;J23&#x60;: degree Fahrenheit per hour - &#x60;J24&#x60;: degree Fahrenheit per minute - &#x60;J25&#x60;: degree Fahrenheit per second - &#x60;J26&#x60;: reciprocal degree Fahrenheit - &#x60;J27&#x60;: degree Oechsle - &#x60;J28&#x60;: degree Rankine per hour - &#x60;J29&#x60;: degree Rankine per minute - &#x60;J30&#x60;: degree Rankine per second - &#x60;J31&#x60;: degree Twaddell - &#x60;J32&#x60;: micropoise - &#x60;J33&#x60;: microgram per kilogram - &#x60;J34&#x60;: microgram per cubic metre kelvin - &#x60;J35&#x60;: microgram per cubic metre bar - &#x60;J36&#x60;: microlitre per litre - &#x60;J38&#x60;: baud - &#x60;J39&#x60;: British thermal unit (mean) - &#x60;J40&#x60;: British thermal unit (international table) foot per hour square foot degree Fahrenheit - &#x60;J41&#x60;: British thermal unit (international table) inch per hour square foot degree Fahrenheit - &#x60;J42&#x60;: British thermal unit (international table) inch per second square foot degree Fahrenheit - &#x60;J43&#x60;: British thermal unit (international table) per pound degree Fahrenheit - &#x60;J44&#x60;: British thermal unit (international table) per minute - &#x60;J45&#x60;: British thermal unit (international table) per second - &#x60;J46&#x60;: British thermal unit (thermochemical) foot per hour square foot degree Fahrenheit - &#x60;J47&#x60;: British thermal unit (thermochemical) per hour - &#x60;J48&#x60;: British thermal unit (thermochemical) inch per hour square foot degree Fahrenheit - &#x60;J49&#x60;: British thermal unit (thermochemical) inch per second square foot degree Fahrenheit - &#x60;J50&#x60;: British thermal unit (thermochemical) per pound degree Fahrenheit - &#x60;J51&#x60;: British thermal unit (thermochemical) per minute - &#x60;J52&#x60;: British thermal unit (thermochemical) per second - &#x60;J53&#x60;: coulomb square metre per kilogram - &#x60;J54&#x60;: megabaud - &#x60;J55&#x60;: watt second - &#x60;J56&#x60;: bar per bar - &#x60;J57&#x60;: barrel (UK petroleum) - &#x60;J58&#x60;: barrel (UK petroleum) per minute - &#x60;J59&#x60;: barrel (UK petroleum) per day - &#x60;J60&#x60;: barrel (UK petroleum) per hour - &#x60;J61&#x60;: barrel (UK petroleum) per second - &#x60;J62&#x60;: barrel (US petroleum) per hour - &#x60;J63&#x60;: barrel (US petroleum) per second - &#x60;J64&#x60;: bushel (UK) per day - &#x60;J65&#x60;: bushel (UK) per hour - &#x60;J66&#x60;: bushel (UK) per minute - &#x60;J67&#x60;: bushel (UK) per second - &#x60;J68&#x60;: bushel (US dry) per day - &#x60;J69&#x60;: bushel (US dry) per hour - &#x60;J70&#x60;: bushel (US dry) per minute - &#x60;J71&#x60;: bushel (US dry) per second - &#x60;J72&#x60;: centinewton metre - &#x60;J73&#x60;: centipoise per kelvin - &#x60;J74&#x60;: centipoise per bar - &#x60;J75&#x60;: calorie (mean) - &#x60;J76&#x60;: calorie (international table) per gram degree Celsius - &#x60;J78&#x60;: calorie (thermochemical) per centimetre second degree Celsius - &#x60;J79&#x60;: calorie (thermochemical) per gram degree Celsius - &#x60;J81&#x60;: calorie (thermochemical) per minute - &#x60;J82&#x60;: calorie (thermochemical) per second - &#x60;J83&#x60;: clo - &#x60;J84&#x60;: centimetre per second kelvin - &#x60;J85&#x60;: centimetre per second bar - &#x60;J87&#x60;: cubic centimetre per cubic metre - &#x60;J90&#x60;: cubic decimetre per day - &#x60;J91&#x60;: cubic decimetre per cubic metre - &#x60;J92&#x60;: cubic decimetre per minute - &#x60;J93&#x60;: cubic decimetre per second - &#x60;J95&#x60;: ounce (UK fluid) per day - &#x60;J96&#x60;: ounce (UK fluid) per hour - &#x60;J97&#x60;: ounce (UK fluid) per minute - &#x60;J98&#x60;: ounce (UK fluid) per second - &#x60;J99&#x60;: ounce (US fluid) per day - &#x60;JE&#x60;: joule per kelvin - &#x60;JK&#x60;: megajoule per kilogram - &#x60;JM&#x60;: megajoule per cubic metre - &#x60;JNT&#x60;: pipeline joint - &#x60;JOU&#x60;: joule - &#x60;JPS&#x60;: hundred metre - &#x60;JWL&#x60;: number of jewels - &#x60;K1&#x60;: kilowatt demand - &#x60;K10&#x60;: ounce (US fluid) per hour - &#x60;K11&#x60;: ounce (US fluid) per minute - &#x60;K12&#x60;: ounce (US fluid) per second - &#x60;K13&#x60;: foot per degree Fahrenheit - &#x60;K14&#x60;: foot per hour - &#x60;K15&#x60;: foot pound-force per hour - &#x60;K16&#x60;: foot pound-force per minute - &#x60;K17&#x60;: foot per psi - &#x60;K18&#x60;: foot per second degree Fahrenheit - &#x60;K19&#x60;: foot per second psi - &#x60;K2&#x60;: kilovolt ampere reactive demand - &#x60;K20&#x60;: reciprocal cubic foot - &#x60;K21&#x60;: cubic foot per degree Fahrenheit - &#x60;K22&#x60;: cubic foot per day - &#x60;K23&#x60;: cubic foot per psi - &#x60;K26&#x60;: gallon (UK) per day - &#x60;K27&#x60;: gallon (UK) per hour - &#x60;K28&#x60;: gallon (UK) per second - &#x60;K3&#x60;: kilovolt ampere reactive hour - &#x60;K30&#x60;: gallon (US liquid) per second - &#x60;K31&#x60;: gram-force per square centimetre - &#x60;K32&#x60;: gill (UK) per day - &#x60;K33&#x60;: gill (UK) per hour - &#x60;K34&#x60;: gill (UK) per minute - &#x60;K35&#x60;: gill (UK) per second - &#x60;K36&#x60;: gill (US) per day - &#x60;K37&#x60;: gill (US) per hour - &#x60;K38&#x60;: gill (US) per minute - &#x60;K39&#x60;: gill (US) per second - &#x60;K40&#x60;: standard acceleration of free fall - &#x60;K41&#x60;: grain per gallon (US) - &#x60;K42&#x60;: horsepower (boiler) - &#x60;K43&#x60;: horsepower (electric) - &#x60;K45&#x60;: inch per degree Fahrenheit - &#x60;K46&#x60;: inch per psi - &#x60;K47&#x60;: inch per second degree Fahrenheit - &#x60;K48&#x60;: inch per second psi - &#x60;K49&#x60;: reciprocal cubic inch - &#x60;K50&#x60;: kilobaud - &#x60;K51&#x60;: kilocalorie (mean) - &#x60;K52&#x60;: kilocalorie (international table) per hour metre degree Celsius - &#x60;K53&#x60;: kilocalorie (thermochemical) - &#x60;K54&#x60;: kilocalorie (thermochemical) per minute - &#x60;K55&#x60;: kilocalorie (thermochemical) per second - &#x60;K58&#x60;: kilomole per hour - &#x60;K59&#x60;: kilomole per cubic metre kelvin - &#x60;K6&#x60;: kilolitre - &#x60;K60&#x60;: kilomole per cubic metre bar - &#x60;K61&#x60;: kilomole per minute - &#x60;K62&#x60;: litre per litre - &#x60;K63&#x60;: reciprocal litre - &#x60;K64&#x60;: pound (avoirdupois) per degree Fahrenheit - &#x60;K65&#x60;: pound (avoirdupois) square foot - &#x60;K66&#x60;: pound (avoirdupois) per day - &#x60;K67&#x60;: pound per foot hour - &#x60;K68&#x60;: pound per foot second - &#x60;K69&#x60;: pound (avoirdupois) per cubic foot degree Fahrenheit - &#x60;K70&#x60;: pound (avoirdupois) per cubic foot psi - &#x60;K71&#x60;: pound (avoirdupois) per gallon (UK) - &#x60;K73&#x60;: pound (avoirdupois) per hour degree Fahrenheit - &#x60;K74&#x60;: pound (avoirdupois) per hour psi - &#x60;K75&#x60;: pound (avoirdupois) per cubic inch degree Fahrenheit - &#x60;K76&#x60;: pound (avoirdupois) per cubic inch psi - &#x60;K77&#x60;: pound (avoirdupois) per psi - &#x60;K78&#x60;: pound (avoirdupois) per minute - &#x60;K79&#x60;: pound (avoirdupois) per minute degree Fahrenheit - &#x60;K80&#x60;: pound (avoirdupois) per minute psi - &#x60;K81&#x60;: pound (avoirdupois) per second - &#x60;K82&#x60;: pound (avoirdupois) per second degree Fahrenheit - &#x60;K83&#x60;: pound (avoirdupois) per second psi - &#x60;K84&#x60;: pound per cubic yard - &#x60;K85&#x60;: pound-force per square foot - &#x60;K86&#x60;: pound-force per square inch degree Fahrenheit - &#x60;K87&#x60;: psi cubic inch per second - &#x60;K88&#x60;: psi litre per second - &#x60;K89&#x60;: psi cubic metre per second - &#x60;K90&#x60;: psi cubic yard per second - &#x60;K91&#x60;: pound-force second per square foot - &#x60;K92&#x60;: pound-force second per square inch - &#x60;K93&#x60;: reciprocal psi - &#x60;K94&#x60;: quart (UK liquid) per day - &#x60;K95&#x60;: quart (UK liquid) per hour - &#x60;K96&#x60;: quart (UK liquid) per minute - &#x60;K97&#x60;: quart (UK liquid) per second - &#x60;K98&#x60;: quart (US liquid) per day - &#x60;K99&#x60;: quart (US liquid) per hour - &#x60;KA&#x60;: cake - &#x60;KAT&#x60;: katal - &#x60;KB&#x60;: kilocharacter - &#x60;KBA&#x60;: kilobar - &#x60;KCC&#x60;: kilogram of choline chloride - &#x60;KDW&#x60;: kilogram drained net weight - &#x60;KEL&#x60;: kelvin - &#x60;KGM&#x60;: Kilogramm - &#x60;KGS&#x60;: kilogram per second - &#x60;KHY&#x60;: kilogram of hydrogen peroxide - &#x60;KHZ&#x60;: kilohertz - &#x60;KI&#x60;: kilogram per millimetre width - &#x60;KIC&#x60;: kilogram, including container - &#x60;KIP&#x60;: kilogram, including inner packaging - &#x60;KJ&#x60;: kilosegment - &#x60;KJO&#x60;: kilojoule - &#x60;KL&#x60;: kilogram per metre - &#x60;KLK&#x60;: lactic dry material percentage - &#x60;KLX&#x60;: kilolux - &#x60;KMA&#x60;: kilogram of methylamine - &#x60;KMH&#x60;: kilometre per hour - &#x60;KMK&#x60;: square kilometre - &#x60;KMQ&#x60;: kilogram per cubic metre - &#x60;KMT&#x60;: Kilometer - &#x60;KNI&#x60;: kilogram of nitrogen - &#x60;KNM&#x60;: kilonewton per square metre - &#x60;KNS&#x60;: kilogram named substance - &#x60;KNT&#x60;: knot - &#x60;KO&#x60;: milliequivalence caustic potash per gram of product - &#x60;KPA&#x60;: kilopascal - &#x60;KPH&#x60;: kilogram of potassium hydroxide (caustic potash) - &#x60;KPO&#x60;: kilogram of potassium oxide - &#x60;KPP&#x60;: kilogram of phosphorus pentoxide (phosphoric anhydride) - &#x60;KR&#x60;: kiloroentgen - &#x60;KSD&#x60;: kilogram of substance 90 % dry - &#x60;KSH&#x60;: kilogram of sodium hydroxide (caustic soda) - &#x60;KT&#x60;: kit - &#x60;KTN&#x60;: Kilotonne - &#x60;KUR&#x60;: kilogram of uranium - &#x60;KVA&#x60;: kilovolt - ampere - &#x60;KVR&#x60;: kilovar - &#x60;KVT&#x60;: kilovolt - &#x60;KW&#x60;: kilogram per millimetre - &#x60;KWH&#x60;: kilowatt hour - &#x60;KWN&#x60;: Kilowatt hour per normalized cubic metre - &#x60;KWO&#x60;: kilogram of tungsten trioxide - &#x60;KWS&#x60;: Kilowattstunde pro Normkubikmeter - &#x60;KWT&#x60;: kilowatt - &#x60;KX&#x60;: millilitre per kilogram - &#x60;L10&#x60;: quart (US liquid) per minute - &#x60;L11&#x60;: quart (US liquid) per second - &#x60;L12&#x60;: metre per second kelvin - &#x60;L13&#x60;: metre per second bar - &#x60;L14&#x60;: square metre hour degree Celsius per kilocalorie (international table) - &#x60;L15&#x60;: millipascal second per kelvin - &#x60;L16&#x60;: millipascal second per bar - &#x60;L17&#x60;: milligram per cubic metre kelvin - &#x60;L18&#x60;: milligram per cubic metre bar - &#x60;L19&#x60;: millilitre per litre - &#x60;L2&#x60;: litre per minute - &#x60;L20&#x60;: reciprocal cubic millimetre - &#x60;L21&#x60;: cubic millimetre per cubic metre - &#x60;L23&#x60;: mole per hour - &#x60;L24&#x60;: mole per kilogram kelvin - &#x60;L25&#x60;: mole per kilogram bar - &#x60;L26&#x60;: mole per litre kelvin - &#x60;L27&#x60;: mole per litre bar - &#x60;L28&#x60;: mole per cubic metre kelvin - &#x60;L29&#x60;: mole per cubic metre bar - &#x60;L30&#x60;: mole per minute - &#x60;L31&#x60;: milliroentgen aequivalent men - &#x60;L32&#x60;: nanogram per kilogram - &#x60;L33&#x60;: Unze (avoirdupois) pro Tag - &#x60;L34&#x60;: ounce (avoirdupois) per hour - &#x60;L35&#x60;: ounce (avoirdupois) per minute - &#x60;L36&#x60;: ounce (avoirdupois) per second - &#x60;L37&#x60;: ounce (avoirdupois) per gallon (UK) - &#x60;L38&#x60;: ounce (avoirdupois) per gallon (US) - &#x60;L39&#x60;: ounce (avoirdupois) per cubic inch - &#x60;L40&#x60;: ounce (avoirdupois)-force - &#x60;L41&#x60;: ounce (avoirdupois)-force inch - &#x60;L42&#x60;: picosiemens per metre - &#x60;L43&#x60;: peck (UK) - &#x60;L44&#x60;: peck (UK) per day - &#x60;L45&#x60;: peck (UK) per hour - &#x60;L46&#x60;: peck (UK) per minute - &#x60;L47&#x60;: peck (UK) per second - &#x60;L48&#x60;: peck (US dry) per day - &#x60;L49&#x60;: peck (US dry) per hour - &#x60;L50&#x60;: peck (US dry) per minute - &#x60;L51&#x60;: peck (US dry) per second - &#x60;L52&#x60;: psi per psi - &#x60;L53&#x60;: pint (UK) per day - &#x60;L54&#x60;: pint (UK) per hour - &#x60;L55&#x60;: pint (UK) per minute - &#x60;L56&#x60;: pint (UK) per second - &#x60;L57&#x60;: pint (US liquid) per day - &#x60;L58&#x60;: pint (US liquid) per hour - &#x60;L59&#x60;: pint (US liquid) per minute - &#x60;L60&#x60;: pint (US liquid) per second - &#x60;L63&#x60;: slug per day - &#x60;L64&#x60;: slug per foot second - &#x60;L65&#x60;: slug per cubic foot - &#x60;L66&#x60;: slug per hour - &#x60;L67&#x60;: slug per minute - &#x60;L68&#x60;: slug per second - &#x60;L69&#x60;: tonne per kelvin - &#x60;L70&#x60;: tonne per bar - &#x60;L71&#x60;: tonne per day - &#x60;L72&#x60;: tonne per day kelvin - &#x60;L73&#x60;: tonne per day bar - &#x60;L74&#x60;: tonne per hour kelvin - &#x60;L75&#x60;: tonne per hour bar - &#x60;L76&#x60;: tonne per cubic metre kelvin - &#x60;L77&#x60;: tonne per cubic metre bar - &#x60;L78&#x60;: tonne per minute - &#x60;L79&#x60;: tonne per minute kelvin - &#x60;L80&#x60;: tonne per minute bar - &#x60;L81&#x60;: tonne per second - &#x60;L82&#x60;: tonne per second kelvin - &#x60;L83&#x60;: tonne per second bar - &#x60;L84&#x60;: ton (UK shipping) - &#x60;L85&#x60;: ton long per day - &#x60;L86&#x60;: ton (US shipping) - &#x60;L87&#x60;: ton short per degree Fahrenheit - &#x60;L88&#x60;: ton short per day - &#x60;L89&#x60;: ton short per hour degree Fahrenheit - &#x60;L90&#x60;: ton short per hour psi - &#x60;L91&#x60;: ton short per psi - &#x60;L92&#x60;: ton (UK long) per cubic yard - &#x60;L93&#x60;: ton (US short) per cubic yard - &#x60;L94&#x60;: ton-force (US short) - &#x60;L95&#x60;: common year - &#x60;L96&#x60;: sidereal year - &#x60;L98&#x60;: yard per degree Fahrenheit - &#x60;L99&#x60;: yard per psi - &#x60;LA&#x60;: pound per cubic inch - &#x60;LAC&#x60;: lactose excess percentage - &#x60;LBR&#x60;: pound - &#x60;LBT&#x60;: troy pound (US) - &#x60;LD&#x60;: litre per day - &#x60;LEF&#x60;: leaf - &#x60;LF&#x60;: linear foot - &#x60;LH&#x60;: labour hour - &#x60;LK&#x60;: link - &#x60;LM&#x60;: linear metre - &#x60;LN&#x60;: length - &#x60;LO&#x60;: lot [unit of procurement] - &#x60;LP&#x60;: liquid pound - &#x60;LPA&#x60;: litre of pure alcohol - &#x60;LR&#x60;: layer - &#x60;LS&#x60;: lump sum - &#x60;LTN&#x60;: ton (UK) or long ton (US) - &#x60;LTR&#x60;: Liter - &#x60;LUB&#x60;: metric ton, lubricating oil - &#x60;LUM&#x60;: lumen - &#x60;LUX&#x60;: lux - &#x60;LY&#x60;: linear yard - &#x60;M1&#x60;: milligram per litre - &#x60;M10&#x60;: reciprocal cubic yard - &#x60;M11&#x60;: cubic yard per degree Fahrenheit - &#x60;M12&#x60;: cubic yard per day - &#x60;M13&#x60;: cubic yard per hour - &#x60;M14&#x60;: cubic yard per psi - &#x60;M15&#x60;: cubic yard per minute - &#x60;M16&#x60;: cubic yard per second - &#x60;M17&#x60;: kilohertz metre - &#x60;M18&#x60;: gigahertz metre - &#x60;M19&#x60;: Beaufort - &#x60;M20&#x60;: reciprocal megakelvin or megakelvin to the power minus one - &#x60;M21&#x60;: reciprocal kilovolt - ampere reciprocal hour - &#x60;M22&#x60;: millilitre per square centimetre minute - &#x60;M23&#x60;: newton per centimetre - &#x60;M24&#x60;: ohm kilometre - &#x60;M25&#x60;: percent per degree Celsius - &#x60;M26&#x60;: gigaohm per metre - &#x60;M27&#x60;: megahertz metre - &#x60;M29&#x60;: kilogram per kilogram - &#x60;M30&#x60;: reciprocal volt - ampere reciprocal second - &#x60;M31&#x60;: kilogram per kilometre - &#x60;M32&#x60;: pascal second per litre - &#x60;M33&#x60;: millimole per litre - &#x60;M34&#x60;: newton metre per square metre - &#x60;M35&#x60;: millivolt - ampere - &#x60;M36&#x60;: 30-Tage-Monat - &#x60;M37&#x60;: actual/360 - &#x60;M38&#x60;: kilometre per second squared - &#x60;M39&#x60;: centimetre per second squared - &#x60;M4&#x60;: monetary value - &#x60;M40&#x60;: yard per second squared - &#x60;M41&#x60;: millimetre per second squared - &#x60;M42&#x60;: mile (statute mile) per second squared - &#x60;M43&#x60;: mil - &#x60;M44&#x60;: revolution - &#x60;M45&#x60;: degree [unit of angle] per second squared - &#x60;M46&#x60;: revolution per minute - &#x60;M47&#x60;: circular mil - &#x60;M48&#x60;: square mile (based on U.S. survey foot) - &#x60;M49&#x60;: chain (based on U.S. survey foot) - &#x60;M5&#x60;: microcurie - &#x60;M50&#x60;: furlong - &#x60;M51&#x60;: foot (U.S. survey) - &#x60;M52&#x60;: mile (based on U.S. survey foot) - &#x60;M53&#x60;: metre per pascal - &#x60;M55&#x60;: metre per radiant - &#x60;M56&#x60;: shake - &#x60;M57&#x60;: mile per minute - &#x60;M58&#x60;: mile per second - &#x60;M59&#x60;: metre per second pascal - &#x60;M60&#x60;: metre per hour - &#x60;M61&#x60;: inch per year - &#x60;M62&#x60;: kilometre per second - &#x60;M63&#x60;: inch per minute - &#x60;M64&#x60;: yard per second - &#x60;M65&#x60;: yard per minute - &#x60;M66&#x60;: yard per hour - &#x60;M67&#x60;: acre-foot (based on U.S. survey foot) - &#x60;M68&#x60;: cord (128 ft3) - &#x60;M69&#x60;: cubic mile (UK statute) - &#x60;M7&#x60;: micro-inch - &#x60;M70&#x60;: ton, register - &#x60;M71&#x60;: cubic metre per pascal - &#x60;M72&#x60;: bel - &#x60;M73&#x60;: kilogram per cubic metre pascal - &#x60;M74&#x60;: kilogram per pascal - &#x60;M75&#x60;: kilopound-force - &#x60;M76&#x60;: poundal - &#x60;M77&#x60;: kilogram metre per second squared - &#x60;M78&#x60;: pond - &#x60;M79&#x60;: square foot per hour - &#x60;M80&#x60;: stokes per pascal - &#x60;M81&#x60;: square centimetre per second - &#x60;M82&#x60;: square metre per second pascal - &#x60;M83&#x60;: denier - &#x60;M84&#x60;: pound per yard - &#x60;M85&#x60;: ton, assay - &#x60;M86&#x60;: pfund - &#x60;M87&#x60;: kilogram per second pascal - &#x60;M88&#x60;: tonne per month - &#x60;M89&#x60;: tonne per year - &#x60;M9&#x60;: million Btu per 1000 cubic foot - &#x60;M90&#x60;: kilopound per hour - &#x60;M91&#x60;: pound per pound - &#x60;M92&#x60;: pound-force foot - &#x60;M93&#x60;: newton metre per radian - &#x60;M94&#x60;: kilogram metre - &#x60;M95&#x60;: poundal foot - &#x60;M96&#x60;: poundal inch - &#x60;M97&#x60;: dyne metre - &#x60;M98&#x60;: kilogram centimetre per second - &#x60;M99&#x60;: gram centimetre per second - &#x60;MAH&#x60;: megavolt ampere reactive hour - &#x60;MAL&#x60;: megalitre - &#x60;MAM&#x60;: megametre - &#x60;MAR&#x60;: megavar - &#x60;MAW&#x60;: megawatt - &#x60;MBE&#x60;: thousand standard brick equivalent - &#x60;MBF&#x60;: thousand board foot - &#x60;MBR&#x60;: millibar - &#x60;MC&#x60;: microgram - &#x60;MCU&#x60;: millicurie - &#x60;MD&#x60;: air dry metric ton - &#x60;MGM&#x60;: milligram - &#x60;MHZ&#x60;: megahertz - &#x60;MIK&#x60;: square mile (statute mile) - &#x60;MIL&#x60;: thousand - &#x60;MIN&#x60;: minute [unit of time] - &#x60;MIO&#x60;: million - &#x60;MIU&#x60;: million international unit - &#x60;MLD&#x60;: milliard - &#x60;MLT&#x60;: millilitre - &#x60;MMK&#x60;: square millimetre - &#x60;MMQ&#x60;: cubic millimetre - &#x60;MMT&#x60;: millimetre - &#x60;MND&#x60;: kilogram, dry weight - &#x60;MON&#x60;: Monat - &#x60;MPA&#x60;: megapascal - &#x60;MQH&#x60;: cubic metre per hour - &#x60;MQS&#x60;: cubic metre per second - &#x60;MSK&#x60;: metre per second squared - &#x60;MTK&#x60;: Quadratmeter - &#x60;MTQ&#x60;: Kubikmeter - &#x60;MTR&#x60;: Meter - &#x60;MTS&#x60;: metre per second - &#x60;MVA&#x60;: megavolt - ampere - &#x60;MWH&#x60;: megawatt hour (1000 kW.h) - &#x60;N1&#x60;: pen calorie - &#x60;N10&#x60;: pound foot per second - &#x60;N11&#x60;: pound inch per second - &#x60;N12&#x60;: Pferdestaerke - &#x60;N13&#x60;: centimetre of mercury (0 �C) - &#x60;N14&#x60;: centimetre of water (4 �C) - &#x60;N15&#x60;: foot of water (39.2 �F) - &#x60;N16&#x60;: inch of mercury (32 �F) - &#x60;N17&#x60;: inch of mercury (60 �F) - &#x60;N18&#x60;: inch of water (39.2 �F) - &#x60;N19&#x60;: inch of water (60 �F) - &#x60;N20&#x60;: kip per square inch - &#x60;N21&#x60;: poundal per square foot - &#x60;N22&#x60;: ounce (avoirdupois) per square inch - &#x60;N23&#x60;: conventional metre of water - &#x60;N24&#x60;: gram per square millimetre - &#x60;N25&#x60;: pound per square yard - &#x60;N26&#x60;: poundal per square inch - &#x60;N27&#x60;: foot to the fourth power - &#x60;N28&#x60;: cubic decimetre per kilogram - &#x60;N29&#x60;: cubic foot per pound - &#x60;N3&#x60;: print point - &#x60;N30&#x60;: cubic inch per pound - &#x60;N31&#x60;: kilonewton per metre - &#x60;N32&#x60;: poundal per inch - &#x60;N33&#x60;: pound-force per yard - &#x60;N34&#x60;: poundal second per square foot - &#x60;N35&#x60;: poise per pascal - &#x60;N36&#x60;: newton second per square metre - &#x60;N37&#x60;: kilogram per metre second - &#x60;N38&#x60;: kilogram per metre minute - &#x60;N39&#x60;: kilogram per metre day - &#x60;N40&#x60;: kilogram per metre hour - &#x60;N41&#x60;: gram per centimetre second - &#x60;N42&#x60;: poundal second per square inch - &#x60;N43&#x60;: pound per foot minute - &#x60;N44&#x60;: pound per foot day - &#x60;N45&#x60;: cubic metre per second pascal - &#x60;N46&#x60;: foot poundal - &#x60;N47&#x60;: inch poundal - &#x60;N48&#x60;: watt per square centimetre - &#x60;N49&#x60;: watt per square inch - &#x60;N50&#x60;: British thermal unit (international table) per square foot hour - &#x60;N51&#x60;: British thermal unit (thermochemical) per square foot hour - &#x60;N52&#x60;: British thermal unit (thermochemical) per square foot minute - &#x60;N53&#x60;: British thermal unit (international table) per square foot second - &#x60;N54&#x60;: British thermal unit (thermochemical) per square foot second - &#x60;N55&#x60;: British thermal unit (international table) per square inch second - &#x60;N56&#x60;: calorie (thermochemical) per square centimetre minute - &#x60;N57&#x60;: calorie (thermochemical) per square centimetre second - &#x60;N58&#x60;: British thermal unit (international table) per cubic foot - &#x60;N59&#x60;: British thermal unit (thermochemical) per cubic foot - &#x60;N60&#x60;: British thermal unit (international table) per degree Fahrenheit - &#x60;N61&#x60;: British thermal unit (thermochemical) per degree Fahrenheit - &#x60;N62&#x60;: British thermal unit (international table) per degree Rankine - &#x60;N63&#x60;: British thermal unit (thermochemical) per degree Rankine - &#x60;N64&#x60;: British thermal unit (thermochemical) per pound degree Rankine - &#x60;N65&#x60;: kilocalorie (international table) per gram kelvin - &#x60;N66&#x60;: British thermal unit (39 �F) - &#x60;N67&#x60;: British thermal unit (59 �F) - &#x60;N68&#x60;: British thermal unit (60 �F) - &#x60;N69&#x60;: calorie (20 �C) - &#x60;N70&#x60;: quad (1015 BtuIT) - &#x60;N71&#x60;: therm (EC) - &#x60;N72&#x60;: therm (U.S.) - &#x60;N73&#x60;: British thermal unit (thermochemical) per pound - &#x60;N74&#x60;: British thermal unit (international table) per hour square foot degree Fahrenheit - &#x60;N75&#x60;: British thermal unit (thermochemical) per hour square foot degree Fahrenheit - &#x60;N76&#x60;: British thermal unit (international table) per second square foot degree Fahrenheit - &#x60;N77&#x60;: British thermal unit (thermochemical) per second square foot degree Fahrenheit - &#x60;N78&#x60;: kilowatt per square metre kelvin - &#x60;N79&#x60;: kelvin per pascal - &#x60;N80&#x60;: watt per metre degree Celsius - &#x60;N81&#x60;: kilowatt per metre kelvin - &#x60;N82&#x60;: kilowatt per metre degree Celsius - &#x60;N83&#x60;: metre per degree Celcius metre - &#x60;N84&#x60;: degree Fahrenheit hour per British thermal unit (international table) - &#x60;N85&#x60;: degree Fahrenheit hour per British thermal unit (thermochemical) - &#x60;N86&#x60;: degree Fahrenheit second per British thermal unit (international table) - &#x60;N87&#x60;: degree Fahrenheit second per British thermal unit (thermochemical) - &#x60;N88&#x60;: degree Fahrenheit hour square foot per British thermal unit (international table) inch - &#x60;N89&#x60;: degree Fahrenheit hour square foot per British thermal unit (thermochemical) inch - &#x60;N90&#x60;: kilofarad - &#x60;N91&#x60;: reciprocal joule - &#x60;N92&#x60;: picosiemens - &#x60;N93&#x60;: ampere per pascal - &#x60;N94&#x60;: franklin - &#x60;N95&#x60;: ampere minute - &#x60;N96&#x60;: biot - &#x60;N97&#x60;: gilbert - &#x60;N98&#x60;: volt per pascal - &#x60;N99&#x60;: picovolt - &#x60;NA&#x60;: milligram per kilogram - &#x60;NAR&#x60;: number of articles - &#x60;NCL&#x60;: number of cells - &#x60;NEW&#x60;: newton - &#x60;NF&#x60;: message - &#x60;NIL&#x60;: nil - &#x60;NIU&#x60;: number of international units - &#x60;NL&#x60;: load - &#x60;NM3&#x60;: Normalised cubic metre - &#x60;NMI&#x60;: nautical mile - &#x60;NMP&#x60;: number of packs - &#x60;NPT&#x60;: number of parts - &#x60;NT&#x60;: net ton - &#x60;NU&#x60;: newton metre - &#x60;NX&#x60;: part per thousand - &#x60;OA&#x60;: panel - &#x60;ODE&#x60;: ozone depletion equivalent - &#x60;ODG&#x60;: ODS Grams - &#x60;ODK&#x60;: ODS Kilograms - &#x60;ODM&#x60;: ODS Milligrams - &#x60;OHM&#x60;: ohm - &#x60;ON&#x60;: ounce per square yard - &#x60;ONZ&#x60;: ounce (avoirdupois) - &#x60;OPM&#x60;: oscillations per minute - &#x60;OT&#x60;: overtime hour - &#x60;OZA&#x60;: fluid ounce (US) - &#x60;OZI&#x60;: fluid ounce (UK) - &#x60;P1&#x60;: percent - &#x60;P10&#x60;: coulomb per metre - &#x60;P11&#x60;: kiloweber - &#x60;P12&#x60;: gamma - &#x60;P13&#x60;: kilotesla - &#x60;P14&#x60;: joule per second - &#x60;P15&#x60;: joule per minute - &#x60;P16&#x60;: joule per hour - &#x60;P17&#x60;: joule per day - &#x60;P18&#x60;: kilojoule per second - &#x60;P19&#x60;: kilojoule per minute - &#x60;P2&#x60;: pound per foot - &#x60;P20&#x60;: kilojoule per hour - &#x60;P21&#x60;: kilojoule per day - &#x60;P22&#x60;: nanoohm - &#x60;P23&#x60;: ohm circular-mil per foot - &#x60;P24&#x60;: kilohenry - &#x60;P25&#x60;: lumen per square foot - &#x60;P26&#x60;: phot - &#x60;P27&#x60;: footcandle - &#x60;P28&#x60;: candela per square inch - &#x60;P29&#x60;: footlambert - &#x60;P30&#x60;: lambert - &#x60;P31&#x60;: stilb - &#x60;P32&#x60;: candela per square foot - &#x60;P33&#x60;: kilocandela - &#x60;P34&#x60;: millicandela - &#x60;P35&#x60;: Hefner-Kerze - &#x60;P36&#x60;: international candle - &#x60;P37&#x60;: British thermal unit (international table) per square foot - &#x60;P38&#x60;: British thermal unit (thermochemical) per square foot - &#x60;P39&#x60;: calorie (thermochemical) per square centimetre - &#x60;P40&#x60;: langley - &#x60;P41&#x60;: decade (logarithmic) - &#x60;P42&#x60;: pascal squared second - &#x60;P43&#x60;: bel per metre - &#x60;P44&#x60;: pound mole - &#x60;P45&#x60;: pound mole per second - &#x60;P46&#x60;: pound mole per minute - &#x60;P47&#x60;: kilomole per kilogram - &#x60;P48&#x60;: pound mole per pound - &#x60;P49&#x60;: newton square metre per ampere - &#x60;P5&#x60;: five pack - &#x60;P50&#x60;: weber metre - &#x60;P51&#x60;: mol per kilogram pascal - &#x60;P52&#x60;: mol per cubic metre pascal - &#x60;P53&#x60;: unit pole - &#x60;P54&#x60;: milligray per second - &#x60;P55&#x60;: microgray per second - &#x60;P56&#x60;: nanogray per second - &#x60;P57&#x60;: gray per minute - &#x60;P58&#x60;: milligray per minute - &#x60;P59&#x60;: microgray per minute - &#x60;P60&#x60;: nanogray per minute - &#x60;P61&#x60;: gray per hour - &#x60;P62&#x60;: milligray per hour - &#x60;P63&#x60;: microgray per hour - &#x60;P64&#x60;: nanogray per hour - &#x60;P65&#x60;: sievert per second - &#x60;P66&#x60;: millisievert per second - &#x60;P67&#x60;: microsievert per second - &#x60;P68&#x60;: nanosievert per second - &#x60;P69&#x60;: rem per second - &#x60;P70&#x60;: sievert per hour - &#x60;P71&#x60;: millisievert per hour - &#x60;P72&#x60;: microsievert per hour - &#x60;P73&#x60;: nanosievert per hour - &#x60;P74&#x60;: sievert per minute - &#x60;P75&#x60;: millisievert per minute - &#x60;P76&#x60;: microsievert per minute - &#x60;P77&#x60;: nanosievert per minute - &#x60;P78&#x60;: reciprocal square inch - &#x60;P79&#x60;: pascal square metre per kilogram - &#x60;P80&#x60;: millipascal per metre - &#x60;P81&#x60;: kilopascal per metre - &#x60;P82&#x60;: hectopascal per metre - &#x60;P83&#x60;: standard atmosphere per metre - &#x60;P84&#x60;: technical atmosphere per metre - &#x60;P85&#x60;: torr per metre - &#x60;P86&#x60;: psi per inch - &#x60;P87&#x60;: cubic metre per second square metre - &#x60;P88&#x60;: rhe - &#x60;P89&#x60;: pound-force foot per inch - &#x60;P90&#x60;: pound-force inch per inch - &#x60;P91&#x60;: perm (0 �C) - &#x60;P92&#x60;: perm (23 �C) - &#x60;P93&#x60;: byte per second - &#x60;P94&#x60;: kilobyte per second - &#x60;P95&#x60;: megabyte per second - &#x60;P96&#x60;: reciprocal volt - &#x60;P97&#x60;: reciprocal radian - &#x60;P98&#x60;: pascal to the power sum of stoichiometric numbers - &#x60;P99&#x60;: mole per cubiv metre to the power sum of stoichiometric numbers - &#x60;PAL&#x60;: pascal - &#x60;PD&#x60;: pad - &#x60;PFL&#x60;: proof litre - &#x60;PGL&#x60;: proof gallon - &#x60;PI&#x60;: pitch - &#x60;PLA&#x60;: degree Plato - &#x60;PO&#x60;: pound per inch of length - &#x60;PQ&#x60;: page per inch - &#x60;PR&#x60;: Paar - &#x60;PS&#x60;: pound-force per square inch - &#x60;PTD&#x60;: dry pint (US) - &#x60;PTI&#x60;: pint (UK) - &#x60;PTL&#x60;: liquid pint (US) - &#x60;PTN&#x60;: portion - &#x60;Q10&#x60;: joule per tesla - &#x60;Q11&#x60;: erlang - &#x60;Q12&#x60;: octet - &#x60;Q13&#x60;: octet per second - &#x60;Q14&#x60;: shannon - &#x60;Q15&#x60;: hartley - &#x60;Q16&#x60;: natural unit of information - &#x60;Q17&#x60;: shannon per second - &#x60;Q18&#x60;: hartley per second - &#x60;Q19&#x60;: natural unit of information per second - &#x60;Q20&#x60;: second per kilogramm - &#x60;Q21&#x60;: watt square metre - &#x60;Q22&#x60;: second per radian cubic metre - &#x60;Q23&#x60;: weber to the power minus one - &#x60;Q24&#x60;: reciprocal inch - &#x60;Q25&#x60;: dioptre - &#x60;Q26&#x60;: one per one - &#x60;Q27&#x60;: newton metre per metre - &#x60;Q28&#x60;: kilogram per square metre pascal second - &#x60;Q29&#x60;: microgram per hectogram - &#x60;Q30&#x60;: pH (potential of Hydrogen) - &#x60;Q31&#x60;: kilojoule per gram - &#x60;Q32&#x60;: femtolitre - &#x60;Q33&#x60;: picolitre - &#x60;Q34&#x60;: nanolitre - &#x60;Q35&#x60;: megawatts per minute - &#x60;Q36&#x60;: square metre per cubic metre - &#x60;Q37&#x60;: Standard cubic metre per day - &#x60;Q38&#x60;: Standard cubic metre per hour - &#x60;Q39&#x60;: Normalized cubic metre per day - &#x60;Q40&#x60;: Normalized cubic metre per hour - &#x60;Q41&#x60;: Joule per normalised cubic metre - &#x60;Q42&#x60;: Joule per standard cubic metre - &#x60;Q3&#x60;: meal - &#x60;QA&#x60;: page - facsimile - &#x60;QAN&#x60;: quarter (of a year) - &#x60;QB&#x60;: page - hardcopy - &#x60;QR&#x60;: quire - &#x60;QTD&#x60;: dry quart (US) - &#x60;QTI&#x60;: quart (UK) - &#x60;QTL&#x60;: liquid quart (US) - &#x60;QTR&#x60;: quarter (UK) - &#x60;R1&#x60;: pica - &#x60;R9&#x60;: thousand cubic metre - &#x60;RH&#x60;: running or operating hour - &#x60;RM&#x60;: ream - &#x60;ROM&#x60;: room - &#x60;RP&#x60;: pound per ream - &#x60;RPM&#x60;: revolutions per minute - &#x60;RPS&#x60;: revolutions per second - &#x60;RT&#x60;: revenue ton mile - &#x60;S3&#x60;: square foot per second - &#x60;S4&#x60;: square metre per second - &#x60;SAN&#x60;: half year (6 months) - &#x60;SCO&#x60;: score - &#x60;SCR&#x60;: scruple - &#x60;SEC&#x60;: second [unit of time] - &#x60;SET&#x60;: set - &#x60;SG&#x60;: Segment - &#x60;SIE&#x60;: Siemens - &#x60;SM3&#x60;: Standard Kubikmeter - &#x60;SMI&#x60;: Meile (britische Meile) - &#x60;SQ&#x60;: Platz - &#x60;SQR&#x60;: quadratisch, �berdachung - &#x60;SR&#x60;: Streifen - &#x60;STC&#x60;: Stick - &#x60;STI&#x60;: Stein (UK) - &#x60;STK&#x60;: Stick, Zigarette - &#x60;STL&#x60;: Standardliter - &#x60;STN&#x60;: Tonne (US) oder kurze Tonne (UK/US) - &#x60;STW&#x60;: Stroh - &#x60;SW&#x60;: Strang - &#x60;SX&#x60;: Sendung - &#x60;SYR&#x60;: Spritze - &#x60;T0&#x60;: Telekommunikationsleitung in Betrieb - &#x60;T3&#x60;: Tausend St�ck - &#x60;TAH&#x60;: Kiloampere-Stunde (Tausend-Ampere-Stunde) - &#x60;TAN&#x60;: Gesamts�urezahl - &#x60;TI&#x60;: tausend Quadratzoll - &#x60;TIC&#x60;: metrische Tonne, einschlie�lich Container - &#x60;TIP&#x60;: metrische Tonne, einschlie�lich Innenverpackung - &#x60;TKM&#x60;: Tonnenkilometer - &#x60;TMS&#x60;: Kilogramm importiertes Fleisch, abz�glich Innereien - &#x60;TNE&#x60;: Tonne (metrische Tonne) - &#x60;TP&#x60;: Zehnerpack - &#x60;TPI&#x60;: Z�hne pro Zoll - &#x60;TPR&#x60;: zehn Paar - &#x60;TQD&#x60;: Tausend Kubikmeter pro Tag - &#x60;TRL&#x60;: Trillion (EUR) - &#x60;TST&#x60;: Zehnergruppe - &#x60;TTS&#x60;: zehntausend St�cke - &#x60;U1&#x60;: Behandlung - &#x60;U2&#x60;: Tablette - &#x60;UB&#x60;: Telekommunikationsleitung in Betrieb durchschnittlich - &#x60;UC&#x60;: Telekommunikationsanschluss - &#x60;VA&#x60;: Volt - Ampere pro Kilogram - &#x60;VLT&#x60;: Volt - &#x60;VP&#x60;: Prozent Volumen - &#x60;W2&#x60;: Kilogrammgesetz - &#x60;WA&#x60;: Watt pro Kilogramm - &#x60;WB&#x60;: nasses Pfund - &#x60;WCD&#x60;: Kabel - &#x60;WE&#x60;: Nasstonne - &#x60;WEB&#x60;: weber - &#x60;WEE&#x60;: Woche - &#x60;WG&#x60;: Weingallone - &#x60;WHR&#x60;: Arbeitsmonat - &#x60;WM&#x60;: Arbeitsmonat - &#x60;WSD&#x60;: Standard - &#x60;WTT&#x60;: Watt - &#x60;X1&#x60;: Gunter&#39;s Kette - &#x60;YDK&#x60;: Platz Yard - &#x60;YDQ&#x60;: kubisch Yard - &#x60;YRD&#x60;: Yard - &#x60;Z11&#x60;: H�ngebeh�lter - &#x60;ZP&#x60;: Seite - &#x60;ZZ&#x60;: gemeinsam definiert
        /// </summary>
        /// <value>Unit (BT-130)  - &#x60;11&#x60;: outfit - &#x60;13&#x60;: ration - &#x60;14&#x60;: shot - &#x60;15&#x60;: stick, military - &#x60;20&#x60;: twenty foot container - &#x60;21&#x60;: forty foot container - &#x60;22&#x60;: decilitre per gram - &#x60;23&#x60;: gram per cubic centimetre - &#x60;24&#x60;: theoretical pound - &#x60;25&#x60;: gram per square centimetre - &#x60;27&#x60;: theoretical ton - &#x60;28&#x60;: kilogram per square metre - &#x60;33&#x60;: kilopascal square metre per gram - &#x60;34&#x60;: kilopascal per millimetre - &#x60;35&#x60;: millilitre per square centimetre second - &#x60;37&#x60;: ounce per square foot - &#x60;38&#x60;: ounce per square foot per 0,01inch - &#x60;40&#x60;: millilitre per second - &#x60;41&#x60;: millilitre per minute - &#x60;56&#x60;: sitas - &#x60;57&#x60;: mesh - &#x60;58&#x60;: net kilogram - &#x60;59&#x60;: part per million - &#x60;60&#x60;: percent weight - &#x60;61&#x60;: part per billion (US) - &#x60;74&#x60;: millipascal - &#x60;77&#x60;: milli-inch - &#x60;80&#x60;: pound per square inch absolute - &#x60;81&#x60;: henry - &#x60;85&#x60;: foot pound-force - &#x60;87&#x60;: pound per cubic foot - &#x60;89&#x60;: poise - &#x60;91&#x60;: stokes - &#x60;1I&#x60;: Festpreis - &#x60;2A&#x60;: radian per second - &#x60;2B&#x60;: radian per second squared - &#x60;2C&#x60;: roentgen - &#x60;2G&#x60;: volt AC - &#x60;2H&#x60;: volt DC - &#x60;2I&#x60;: British thermal unit (international table) per hour - &#x60;2J&#x60;: cubic centimetre per second - &#x60;2K&#x60;: cubic foot per hour - &#x60;2L&#x60;: cubic foot per minute - &#x60;2M&#x60;: centimetre per second - &#x60;2N&#x60;: decibel - &#x60;2P&#x60;: kilobyte - &#x60;2Q&#x60;: kilobecquerel - &#x60;2R&#x60;: kilocurie - &#x60;2U&#x60;: megagram - &#x60;2X&#x60;: metre per minute - &#x60;2Y&#x60;: milliroentgen - &#x60;2Z&#x60;: millivolt - &#x60;3B&#x60;: megajoule - &#x60;3C&#x60;: manmonth - &#x60;4C&#x60;: centistokes - &#x60;4G&#x60;: microlitre - &#x60;4H&#x60;: micrometre (micron) - &#x60;4K&#x60;: milliampere - &#x60;4L&#x60;: megabyte - &#x60;4M&#x60;: milligram per hour - &#x60;4N&#x60;: megabecquerel - &#x60;4O&#x60;: microfarad - &#x60;4P&#x60;: newton per metre - &#x60;4Q&#x60;: ounce inch - &#x60;4R&#x60;: ounce foot - &#x60;4T&#x60;: picofarad - &#x60;4U&#x60;: pound per hour - &#x60;4W&#x60;: ton (US) per hour - &#x60;4X&#x60;: kilolitre per hour - &#x60;5A&#x60;: barrel (US) per minute - &#x60;5B&#x60;: batch - &#x60;5E&#x60;: MMSCF/day - &#x60;5J&#x60;: hydraulic horse power - &#x60;A10&#x60;: ampere square metre per joule second - &#x60;A11&#x60;: angstrom - &#x60;A12&#x60;: astronomical unit - &#x60;A13&#x60;: attojoule - &#x60;A14&#x60;: barn - &#x60;A15&#x60;: barn per electronvolt - &#x60;A16&#x60;: barn per steradian electronvolt - &#x60;A17&#x60;: barn per steradian - &#x60;A18&#x60;: becquerel per kilogram - &#x60;A19&#x60;: becquerel per cubic metre - &#x60;A2&#x60;: ampere per centimetre - &#x60;A20&#x60;: British thermal unit (international table) per second square foot degree Rankine - &#x60;A21&#x60;: British thermal unit (international table) per pound degree Rankine - &#x60;A22&#x60;: British thermal unit (international table) per second foot degree Rankine - &#x60;A23&#x60;: British thermal unit (international table) per hour square foot degree Rankine - &#x60;A24&#x60;: candela per square metre - &#x60;A26&#x60;: coulomb metre - &#x60;A27&#x60;: coulomb metre squared per volt - &#x60;A28&#x60;: coulomb per cubic centimetre - &#x60;A29&#x60;: coulomb per cubic metre - &#x60;A3&#x60;: ampere per millimetre - &#x60;A30&#x60;: coulomb per cubic millimetre - &#x60;A31&#x60;: coulomb per kilogram second - &#x60;A32&#x60;: coulomb per mole - &#x60;A33&#x60;: coulomb per square centimetre - &#x60;A34&#x60;: coulomb per square metre - &#x60;A35&#x60;: coulomb per square millimetre - &#x60;A36&#x60;: cubic centimetre per mole - &#x60;A37&#x60;: cubic decimetre per mole - &#x60;A38&#x60;: cubic metre per coulomb - &#x60;A39&#x60;: cubic metre per kilogram - &#x60;A4&#x60;: ampere per square centimetre - &#x60;A40&#x60;: cubic metre per mole - &#x60;A41&#x60;: ampere per square metre - &#x60;A42&#x60;: curie per kilogram - &#x60;A43&#x60;: deadweight tonnage - &#x60;A44&#x60;: decalitre - &#x60;A45&#x60;: decametre - &#x60;A47&#x60;: decitex - &#x60;A48&#x60;: degree Rankine - &#x60;A49&#x60;: denier - &#x60;A5&#x60;: ampere square metre - &#x60;A53&#x60;: electronvolt - &#x60;A54&#x60;: electronvolt per metre - &#x60;A55&#x60;: electronvolt square metre - &#x60;A56&#x60;: electronvolt square metre per kilogram - &#x60;A59&#x60;: 8-part cloud cover - &#x60;A6&#x60;: ampere per square metre kelvin squared - &#x60;A68&#x60;: exajoule - &#x60;A69&#x60;: farad per metre - &#x60;A7&#x60;: ampere per square millimetre - &#x60;A70&#x60;: femtojoule - &#x60;A71&#x60;: femtometre - &#x60;A73&#x60;: foot per second squared - &#x60;A74&#x60;: foot pound-force per second - &#x60;A75&#x60;: freight ton - &#x60;A76&#x60;: gal - &#x60;A8&#x60;: ampere second - &#x60;A84&#x60;: gigacoulomb per cubic metre - &#x60;A85&#x60;: gigaelectronvolt - &#x60;A86&#x60;: gigahertz - &#x60;A87&#x60;: gigaohm - &#x60;A88&#x60;: gigaohm metre - &#x60;A89&#x60;: gigapascal - &#x60;A9&#x60;: rate - &#x60;A90&#x60;: gigawatt - &#x60;A91&#x60;: gon - &#x60;A93&#x60;: gram per cubic metre - &#x60;A94&#x60;: gram per mole - &#x60;A95&#x60;: gray - &#x60;A96&#x60;: gray per second - &#x60;A97&#x60;: hectopascal - &#x60;A98&#x60;: henry per metre - &#x60;A99&#x60;: bit - &#x60;AA&#x60;: ball - &#x60;AB&#x60;: bulk pack - &#x60;ACR&#x60;: acre - &#x60;ACT&#x60;: activity - &#x60;AD&#x60;: byte - &#x60;AE&#x60;: ampere per metre - &#x60;AH&#x60;: additional minute - &#x60;AI&#x60;: average minute per call - &#x60;AK&#x60;: fathom - &#x60;AL&#x60;: access line - &#x60;AMH&#x60;: ampere hour - &#x60;AMP&#x60;: ampere - &#x60;ANN&#x60;: year - &#x60;APZ&#x60;: troy ounce or apothecary ounce - &#x60;AQ&#x60;: anti-hemophilic factor (AHF) unit - &#x60;AS&#x60;: assortment - &#x60;ASM&#x60;: alcoholic strength by mass - &#x60;ASU&#x60;: alcoholic strength by volume - &#x60;ATM&#x60;: standard atmosphere - &#x60;AWG&#x60;: american wire gauge - &#x60;AY&#x60;: assembly - &#x60;AZ&#x60;: British thermal unit (international table) per pound - &#x60;B1&#x60;: barrel (US) per day - &#x60;B10&#x60;: bit per second - &#x60;B11&#x60;: joule per kilogram kelvin - &#x60;B12&#x60;: joule per metre - &#x60;B13&#x60;: joule per square metre - &#x60;B14&#x60;: joule per metre to the fourth power - &#x60;B15&#x60;: joule per mole - &#x60;B16&#x60;: joule per mole kelvin - &#x60;B17&#x60;: credit - &#x60;B18&#x60;: joule second - &#x60;B19&#x60;: digit - &#x60;B20&#x60;: joule square metre per kilogram - &#x60;B21&#x60;: kelvin per watt - &#x60;B22&#x60;: kiloampere - &#x60;B23&#x60;: kiloampere per square metre - &#x60;B24&#x60;: kiloampere per metre - &#x60;B25&#x60;: kilobecquerel per kilogram - &#x60;B26&#x60;: kilocoulomb - &#x60;B27&#x60;: kilocoulomb per cubic metre - &#x60;B28&#x60;: kilocoulomb per square metre - &#x60;B29&#x60;: kiloelectronvolt - &#x60;B3&#x60;: batting pound - &#x60;B30&#x60;: gibibit - &#x60;B31&#x60;: kilogram metre per second - &#x60;B32&#x60;: kilogram metre squared - &#x60;B33&#x60;: kilogram metre squared per second - &#x60;B34&#x60;: kilogram per cubic decimetre - &#x60;B35&#x60;: kilogram per litre - &#x60;B4&#x60;: barrel, imperial - &#x60;B41&#x60;: kilojoule per kelvin - &#x60;B42&#x60;: kilojoule per kilogram - &#x60;B43&#x60;: kilojoule per kilogram kelvin - &#x60;B44&#x60;: kilojoule per mole - &#x60;B45&#x60;: kilomole - &#x60;B46&#x60;: kilomole per cubic metre - &#x60;B47&#x60;: kilonewton - &#x60;B48&#x60;: kilonewton metre - &#x60;B49&#x60;: kiloohm - &#x60;B50&#x60;: kiloohm metre - &#x60;B52&#x60;: kilosecond - &#x60;B53&#x60;: kilosiemens - &#x60;B54&#x60;: kilosiemens per metre - &#x60;B55&#x60;: kilovolt per metre - &#x60;B56&#x60;: kiloweber per metre - &#x60;B57&#x60;: light year - &#x60;B58&#x60;: litre per mole - &#x60;B59&#x60;: lumen hour - &#x60;B60&#x60;: lumen per square metre - &#x60;B61&#x60;: lumen per watt - &#x60;B62&#x60;: lumen second - &#x60;B63&#x60;: lux hour - &#x60;B64&#x60;: lux second - &#x60;B66&#x60;: megaampere per square metre - &#x60;B67&#x60;: megabecquerel per kilogram - &#x60;B68&#x60;: gigabit - &#x60;B69&#x60;: megacoulomb per cubic metre - &#x60;B7&#x60;: cycle - &#x60;B70&#x60;: megacoulomb per square metre - &#x60;B71&#x60;: megaelectronvolt - &#x60;B72&#x60;: megagram per cubic metre - &#x60;B73&#x60;: meganewton - &#x60;B74&#x60;: meganewton metre - &#x60;B75&#x60;: megaohm - &#x60;B76&#x60;: megaohm metre - &#x60;B77&#x60;: megasiemens per metre - &#x60;B78&#x60;: megavolt - &#x60;B79&#x60;: megavolt per metre - &#x60;B8&#x60;: joule per cubic metre - &#x60;B80&#x60;: gigabit per second - &#x60;B81&#x60;: reciprocal metre squared reciprocal second - &#x60;B82&#x60;: inch per linear foot - &#x60;B83&#x60;: metre to the fourth power - &#x60;B84&#x60;: microampere - &#x60;B85&#x60;: microbar - &#x60;B86&#x60;: microcoulomb - &#x60;B87&#x60;: microcoulomb per cubic metre - &#x60;B88&#x60;: microcoulomb per square metre - &#x60;B89&#x60;: microfarad per metre - &#x60;B90&#x60;: microhenry - &#x60;B91&#x60;: microhenry per metre - &#x60;B92&#x60;: micronewton - &#x60;B93&#x60;: micronewton metre - &#x60;B94&#x60;: microohm - &#x60;B95&#x60;: microohm metre - &#x60;B96&#x60;: micropascal - &#x60;B97&#x60;: microradian - &#x60;B98&#x60;: microsecond - &#x60;B99&#x60;: microsiemens - &#x60;BAR&#x60;: bar [unit of pressure] - &#x60;BB&#x60;: base box - &#x60;BFT&#x60;: board foot - &#x60;BHP&#x60;: brake horse power - &#x60;BIL&#x60;: billion (EUR) - &#x60;BLD&#x60;: dry barrel (US) - &#x60;BLL&#x60;: barrel (US) - &#x60;BP&#x60;: hundred board foot - &#x60;BPM&#x60;: beats per minute - &#x60;BQL&#x60;: becquerel - &#x60;BTU&#x60;: British thermal unit (international table) - &#x60;BUA&#x60;: bushel (US) - &#x60;BUI&#x60;: bushel (UK) - &#x60;C0&#x60;: call - &#x60;C10&#x60;: millifarad - &#x60;C11&#x60;: milligal - &#x60;C12&#x60;: milligram per metre - &#x60;C13&#x60;: milligray - &#x60;C14&#x60;: millihenry - &#x60;C15&#x60;: millijoule - &#x60;C16&#x60;: millimetre per second - &#x60;C17&#x60;: millimetre squared per second - &#x60;C18&#x60;: millimole - &#x60;C19&#x60;: mole per kilogram - &#x60;C20&#x60;: millinewton - &#x60;C21&#x60;: kibibit - &#x60;C22&#x60;: millinewton per metre - &#x60;C23&#x60;: milliohm metre - &#x60;C24&#x60;: millipascal second - &#x60;C25&#x60;: milliradian - &#x60;C26&#x60;: millisecond - &#x60;C27&#x60;: millisiemens - &#x60;C28&#x60;: millisievert - &#x60;C29&#x60;: millitesla - &#x60;C3&#x60;: microvolt per metre - &#x60;C30&#x60;: millivolt per metre - &#x60;C31&#x60;: milliwatt - &#x60;C32&#x60;: milliwatt per square metre - &#x60;C33&#x60;: milliweber - &#x60;C34&#x60;: mole - &#x60;C35&#x60;: mole per cubic decimetre - &#x60;C36&#x60;: mole per cubic metre - &#x60;C37&#x60;: kilobit - &#x60;C38&#x60;: mole per litre - &#x60;C39&#x60;: nanoampere - &#x60;C40&#x60;: nanocoulomb - &#x60;C41&#x60;: nanofarad - &#x60;C42&#x60;: nanofarad per metre - &#x60;C43&#x60;: nanohenry - &#x60;C44&#x60;: nanohenry per metre - &#x60;C45&#x60;: nanometre - &#x60;C46&#x60;: nanoohm metre - &#x60;C47&#x60;: nanosecond - &#x60;C48&#x60;: nanotesla - &#x60;C49&#x60;: nanowatt - &#x60;C50&#x60;: neper - &#x60;C51&#x60;: neper per second - &#x60;C52&#x60;: picometre - &#x60;C53&#x60;: newton metre second - &#x60;C54&#x60;: newton metre squared per kilogram squared - &#x60;C55&#x60;: newton per square metre - &#x60;C56&#x60;: newton per square millimetre - &#x60;C57&#x60;: newton second - &#x60;C58&#x60;: newton second per metre - &#x60;C59&#x60;: octave - &#x60;C60&#x60;: ohm centimetre - &#x60;C61&#x60;: ohm metre - &#x60;C62&#x60;: one - &#x60;C63&#x60;: parsec - &#x60;C64&#x60;: pascal per kelvin - &#x60;C65&#x60;: pascal second - &#x60;C66&#x60;: pascal second per cubic metre - &#x60;C67&#x60;: pascal second per metre - &#x60;C68&#x60;: petajoule - &#x60;C69&#x60;: phon - &#x60;C7&#x60;: centipoise - &#x60;C70&#x60;: picoampere - &#x60;C71&#x60;: picocoulomb - &#x60;C72&#x60;: picofarad per metre - &#x60;C73&#x60;: picohenry - &#x60;C74&#x60;: kilobit per second - &#x60;C75&#x60;: picowatt - &#x60;C76&#x60;: picowatt per square metre - &#x60;C78&#x60;: pound-force - &#x60;C79&#x60;: kilovolt ampere hour - &#x60;C8&#x60;: millicoulomb per kilogram - &#x60;C80&#x60;: rad - &#x60;C81&#x60;: radian - &#x60;C82&#x60;: radian square metre per mole - &#x60;C83&#x60;: radian square metre per kilogram - &#x60;C84&#x60;: radian per metre - &#x60;C85&#x60;: reciprocal angstrom - &#x60;C86&#x60;: reciprocal cubic metre - &#x60;C87&#x60;: reciprocal cubic metre per second - &#x60;C88&#x60;: reciprocal electron volt per cubic metre - &#x60;C89&#x60;: reciprocal henry - &#x60;C9&#x60;: coil group - &#x60;C90&#x60;: reciprocal joule per cubic metre - &#x60;C91&#x60;: reciprocal kelvin or kelvin to the power minus one - &#x60;C92&#x60;: reciprocal metre - &#x60;C93&#x60;: reciprocal square metre - &#x60;C94&#x60;: reciprocal minute - &#x60;C95&#x60;: reciprocal mole - &#x60;C96&#x60;: reciprocal pascal or pascal to the power minus one - &#x60;C97&#x60;: reciprocal second - &#x60;C99&#x60;: reciprocal second per metre squared - &#x60;CCT&#x60;: carrying capacity in metric ton - &#x60;CDL&#x60;: candela - &#x60;CEL&#x60;: degree Celsius - &#x60;CEN&#x60;: hundred - &#x60;CG&#x60;: card - &#x60;CGM&#x60;: centigram - &#x60;CKG&#x60;: coulomb per kilogram - &#x60;CLF&#x60;: hundred leave - &#x60;CLT&#x60;: centilitre - &#x60;CMK&#x60;: square centimetre - &#x60;CMQ&#x60;: Kubikzentimeter - &#x60;CMT&#x60;: Zentimeter - &#x60;CNP&#x60;: hundred pack - &#x60;CNT&#x60;: cental (UK) - &#x60;COU&#x60;: coulomb - &#x60;CTG&#x60;: content gram - &#x60;CTM&#x60;: metric carat - &#x60;CTN&#x60;: content ton (metric) - &#x60;CUR&#x60;: curie - &#x60;CWA&#x60;: hundred pound (cwt) / hundred weight (US) - &#x60;CWI&#x60;: hundred weight (UK) - &#x60;D03&#x60;: kilowatt hour per hour - &#x60;D04&#x60;: lot [unit of weight] - &#x60;D1&#x60;: reciprocal second per steradian - &#x60;D10&#x60;: siemens per metre - &#x60;D11&#x60;: mebibit - &#x60;D12&#x60;: siemens square metre per mole - &#x60;D13&#x60;: sievert - &#x60;D15&#x60;: sone - &#x60;D16&#x60;: square centimetre per erg - &#x60;D17&#x60;: square centimetre per steradian erg - &#x60;D18&#x60;: metre kelvin - &#x60;D19&#x60;: square metre kelvin per watt - &#x60;D2&#x60;: reciprocal second per steradian metre squared - &#x60;D20&#x60;: square metre per joule - &#x60;D21&#x60;: square metre per kilogram - &#x60;D22&#x60;: square metre per mole - &#x60;D23&#x60;: pen gram (protein) - &#x60;D24&#x60;: square metre per steradian - &#x60;D25&#x60;: square metre per steradian joule - &#x60;D26&#x60;: square metre per volt second - &#x60;D27&#x60;: steradian - &#x60;D29&#x60;: terahertz - &#x60;D30&#x60;: terajoule - &#x60;D31&#x60;: terawatt - &#x60;D32&#x60;: terawatt hour - &#x60;D33&#x60;: tesla - &#x60;D34&#x60;: tex - &#x60;D36&#x60;: megabit - &#x60;D41&#x60;: tonne per cubic metre - &#x60;D42&#x60;: tropical year - &#x60;D43&#x60;: unified atomic mass unit - &#x60;D44&#x60;: var - &#x60;D45&#x60;: volt squared per kelvin squared - &#x60;D46&#x60;: volt - ampere - &#x60;D47&#x60;: volt per centimetre - &#x60;D48&#x60;: volt per kelvin - &#x60;D49&#x60;: millivolt per kelvin - &#x60;D5&#x60;: kilogram per square centimetre - &#x60;D50&#x60;: volt per metre - &#x60;D51&#x60;: volt per millimetre - &#x60;D52&#x60;: watt per kelvin - &#x60;D53&#x60;: watt per metre kelvin - &#x60;D54&#x60;: watt per square metre - &#x60;D55&#x60;: watt per square metre kelvin - &#x60;D56&#x60;: watt per square metre kelvin to the fourth power - &#x60;D57&#x60;: watt per steradian - &#x60;D58&#x60;: watt per steradian square metre - &#x60;D59&#x60;: weber per metre - &#x60;D6&#x60;: roentgen per second - &#x60;D60&#x60;: weber per millimetre - &#x60;D61&#x60;: minute [unit of angle] - &#x60;D62&#x60;: second [unit of angle] - &#x60;D63&#x60;: book - &#x60;D65&#x60;: round - &#x60;D68&#x60;: number of words - &#x60;D69&#x60;: inch to the fourth power - &#x60;D73&#x60;: joule square metre - &#x60;D74&#x60;: kilogram per mole - &#x60;D77&#x60;: megacoulomb - &#x60;D78&#x60;: megajoule per second - &#x60;D80&#x60;: microwatt - &#x60;D81&#x60;: microtesla - &#x60;D82&#x60;: microvolt - &#x60;D83&#x60;: millinewton metre - &#x60;D85&#x60;: microwatt per square metre - &#x60;D86&#x60;: millicoulomb - &#x60;D87&#x60;: millimole per kilogram - &#x60;D88&#x60;: millicoulomb per cubic metre - &#x60;D89&#x60;: millicoulomb per square metre - &#x60;D91&#x60;: rem - &#x60;D93&#x60;: second per cubic metre - &#x60;D94&#x60;: second per cubic metre radian - &#x60;D95&#x60;: joule per gram - &#x60;DAA&#x60;: decare - &#x60;DAD&#x60;: ten day - &#x60;DAY&#x60;: Tag - &#x60;DB&#x60;: dry pound - &#x60;DD&#x60;: degree [unit of angle] - &#x60;DEC&#x60;: decade - &#x60;DG&#x60;: decigram - &#x60;DJ&#x60;: decagram - &#x60;DLT&#x60;: decilitre - &#x60;DMA&#x60;: cubic decametre - &#x60;DMK&#x60;: square decimetre - &#x60;DMO&#x60;: standard kilolitre - &#x60;DMQ&#x60;: cubic decimetre - &#x60;DMT&#x60;: decimetre - &#x60;DN&#x60;: decinewton metre - &#x60;DPC&#x60;: Dutzend St�ck - &#x60;DPR&#x60;: Dutzend Paar - &#x60;DPT&#x60;: displacement tonnage - &#x60;DRA&#x60;: dram (US) - &#x60;DRI&#x60;: dram (UK) - &#x60;DRL&#x60;: dozen roll - &#x60;DT&#x60;: dry ton - &#x60;DTN&#x60;: decitonne - &#x60;DWT&#x60;: pennyweight - &#x60;DZN&#x60;: dozen - &#x60;DZP&#x60;: dozen pack - &#x60;E01&#x60;: Newton pro Quadratzentimeter - &#x60;E07&#x60;: megawatt hour per hour - &#x60;E08&#x60;: megawatt per hertz - &#x60;E09&#x60;: milliampere hour - &#x60;E10&#x60;: degree day - &#x60;E12&#x60;: mille - &#x60;E14&#x60;: kilocalorie (international table) - &#x60;E15&#x60;: kilocalorie (thermochemical) per hour - &#x60;E16&#x60;: million Btu(IT) per hour - &#x60;E17&#x60;: cubic foot per second - &#x60;E18&#x60;: tonne per hour - &#x60;E19&#x60;: ping - &#x60;E20&#x60;: megabit per second - &#x60;E21&#x60;: shares - &#x60;E22&#x60;: TEU - &#x60;E23&#x60;: tyre - &#x60;E25&#x60;: active unit - &#x60;E27&#x60;: dose - &#x60;E28&#x60;: air dry ton - &#x60;E30&#x60;: strand - &#x60;E31&#x60;: Quadratmeter pro Liter - &#x60;E32&#x60;: litre per hour - &#x60;E33&#x60;: foot per thousand - &#x60;E34&#x60;: gigabyte - &#x60;E35&#x60;: terabyte - &#x60;E36&#x60;: petabyte - &#x60;E37&#x60;: pixel - &#x60;E38&#x60;: megapixel - &#x60;E39&#x60;: dots per inch - &#x60;E4&#x60;: gross kilogram - &#x60;E40&#x60;: part per hundred thousand - &#x60;E41&#x60;: kilogram-force per square millimetre - &#x60;E42&#x60;: kilogram-force per square centimetre - &#x60;E43&#x60;: joule per square centimetre - &#x60;E44&#x60;: kilogram-force metre per square centimetre - &#x60;E45&#x60;: milliohm - &#x60;E46&#x60;: kilowatt hour per cubic metre - &#x60;E47&#x60;: kilowatt hour per kelvin - &#x60;E48&#x60;: service unit - &#x60;E49&#x60;: working day - &#x60;E50&#x60;: accounting unit - &#x60;E51&#x60;: job - &#x60;E52&#x60;: run foot - &#x60;E53&#x60;: test - &#x60;E54&#x60;: trip - &#x60;E55&#x60;: use - &#x60;E56&#x60;: well - &#x60;E57&#x60;: zone - &#x60;E58&#x60;: exabit per second - &#x60;E59&#x60;: exbibyte - &#x60;E60&#x60;: pebibyte - &#x60;E61&#x60;: tebibyte - &#x60;E62&#x60;: gibibyte - &#x60;E63&#x60;: mebibyte - &#x60;E64&#x60;: kibibyte - &#x60;E65&#x60;: exbibit per metre - &#x60;E66&#x60;: exbibit per square metre - &#x60;E67&#x60;: exbibit per cubic metre - &#x60;E68&#x60;: gigabyte per second - &#x60;E69&#x60;: gibibit per metre - &#x60;E70&#x60;: gibibit per square metre - &#x60;E71&#x60;: gibibit per cubic metre - &#x60;E72&#x60;: kibibit per metre - &#x60;E73&#x60;: kibibit per square metre - &#x60;E74&#x60;: kibibit per cubic metre - &#x60;E75&#x60;: mebibit per metre - &#x60;E76&#x60;: mebibit per square metre - &#x60;E77&#x60;: mebibit per cubic metre - &#x60;E78&#x60;: petabit - &#x60;E79&#x60;: petabit per second - &#x60;E80&#x60;: pebibit per metre - &#x60;E81&#x60;: pebibit per square metre - &#x60;E82&#x60;: pebibit per cubic metre - &#x60;E83&#x60;: terabit - &#x60;E84&#x60;: terabit per second - &#x60;E85&#x60;: tebibit per metre - &#x60;E86&#x60;: tebibit per cubic metre - &#x60;E87&#x60;: tebibit per square metre - &#x60;E88&#x60;: bit per metre - &#x60;E89&#x60;: bit per square metre - &#x60;E90&#x60;: reciprocal centimetre - &#x60;E91&#x60;: reciprocal day - &#x60;E92&#x60;: cubic decimetre per hour - &#x60;E93&#x60;: kilogram per hour - &#x60;E94&#x60;: kilomole per second - &#x60;E95&#x60;: mole per second - &#x60;E96&#x60;: degree per second - &#x60;E97&#x60;: millimetre per degree Celcius metre - &#x60;E98&#x60;: degree Celsius per kelvin - &#x60;E99&#x60;: hectopascal per bar - &#x60;EA&#x60;: each - &#x60;EB&#x60;: electronic mail box - &#x60;EQ&#x60;: equivalent gallon - &#x60;F01&#x60;: bit per cubic metre - &#x60;F02&#x60;: kelvin per kelvin - &#x60;F03&#x60;: kilopascal per bar - &#x60;F04&#x60;: millibar per bar - &#x60;F05&#x60;: megapascal per bar - &#x60;F06&#x60;: poise per bar - &#x60;F07&#x60;: pascal per bar - &#x60;F08&#x60;: milliampere per inch - &#x60;F10&#x60;: kelvin per hour - &#x60;F11&#x60;: kelvin per minute - &#x60;F12&#x60;: kelvin per second - &#x60;F13&#x60;: slug - &#x60;F14&#x60;: gram per kelvin - &#x60;F15&#x60;: kilogram per kelvin - &#x60;F16&#x60;: milligram per kelvin - &#x60;F17&#x60;: pound-force per foot - &#x60;F18&#x60;: kilogram square centimetre - &#x60;F19&#x60;: kilogram square millimetre - &#x60;F20&#x60;: pound inch squared - &#x60;F21&#x60;: pound-force inch - &#x60;F22&#x60;: pound-force foot per ampere - &#x60;F23&#x60;: gram per cubic decimetre - &#x60;F24&#x60;: kilogram per kilomol - &#x60;F25&#x60;: gram per hertz - &#x60;F26&#x60;: gram per day - &#x60;F27&#x60;: gram per hour - &#x60;F28&#x60;: gram per minute - &#x60;F29&#x60;: gram per second - &#x60;F30&#x60;: kilogram per day - &#x60;F31&#x60;: kilogram per minute - &#x60;F32&#x60;: milligram per day - &#x60;F33&#x60;: milligram per minute - &#x60;F34&#x60;: milligram per second - &#x60;F35&#x60;: gram per day kelvin - &#x60;F36&#x60;: gram per hour kelvin - &#x60;F37&#x60;: gram per minute kelvin - &#x60;F38&#x60;: gram per second kelvin - &#x60;F39&#x60;: kilogram per day kelvin - &#x60;F40&#x60;: kilogram per hour kelvin - &#x60;F41&#x60;: kilogram per minute kelvin - &#x60;F42&#x60;: kilogram per second kelvin - &#x60;F43&#x60;: milligram per day kelvin - &#x60;F44&#x60;: milligram per hour kelvin - &#x60;F45&#x60;: milligram per minute kelvin - &#x60;F46&#x60;: milligram per second kelvin - &#x60;F47&#x60;: newton per millimetre - &#x60;F48&#x60;: pound-force per inch - &#x60;F49&#x60;: rod [unit of distance] - &#x60;F50&#x60;: micrometre per kelvin - &#x60;F51&#x60;: centimetre per kelvin - &#x60;F52&#x60;: metre per kelvin - &#x60;F53&#x60;: millimetre per kelvin - &#x60;F54&#x60;: milliohm per metre - &#x60;F55&#x60;: ohm per mile (statute mile) - &#x60;F56&#x60;: Ohm pro Kilometer - &#x60;F57&#x60;: milliampere per pound-force per square inch - &#x60;F58&#x60;: reciprocal bar - &#x60;F59&#x60;: milliampere per bar - &#x60;F60&#x60;: degree Celsius per bar - &#x60;F61&#x60;: kelvin per bar - &#x60;F62&#x60;: gram per day bar - &#x60;F63&#x60;: gram per hour bar - &#x60;F64&#x60;: gram per minute bar - &#x60;F65&#x60;: gram per second bar - &#x60;F66&#x60;: kilogram per day bar - &#x60;F67&#x60;: kilogram per hour bar - &#x60;F68&#x60;: kilogram per minute bar - &#x60;F69&#x60;: kilogram per second bar - &#x60;F70&#x60;: milligram per day bar - &#x60;F71&#x60;: milligram per hour bar - &#x60;F72&#x60;: milligram per minute bar - &#x60;F73&#x60;: milligram per second bar - &#x60;F74&#x60;: gram per bar - &#x60;F75&#x60;: milligram per bar - &#x60;F76&#x60;: milliampere per millimetre - &#x60;F77&#x60;: pascal second per kelvin - &#x60;F78&#x60;: inch of water - &#x60;F79&#x60;: inch of mercury - &#x60;F80&#x60;: water horse power - &#x60;F81&#x60;: bar per kelvin - &#x60;F82&#x60;: hectopascal per kelvin - &#x60;F83&#x60;: kilopascal per kelvin - &#x60;F84&#x60;: millibar per kelvin - &#x60;F85&#x60;: megapascal per kelvin - &#x60;F86&#x60;: poise per kelvin - &#x60;F87&#x60;: volt per litre minute - &#x60;F88&#x60;: newton centimetre - &#x60;F89&#x60;: newton metre per degree - &#x60;F90&#x60;: newton metre per ampere - &#x60;F91&#x60;: bar litre per second - &#x60;F92&#x60;: bar cubic metre per second - &#x60;F93&#x60;: hectopascal litre per second - &#x60;F94&#x60;: hectopascal cubic metre per second - &#x60;F95&#x60;: millibar litre per second - &#x60;F96&#x60;: millibar cubic metre per second - &#x60;F97&#x60;: megapascal litre per second - &#x60;F98&#x60;: megapascal cubic metre per second - &#x60;F99&#x60;: pascal litre per second - &#x60;FAH&#x60;: degree Fahrenheit - &#x60;FAR&#x60;: farad - &#x60;FBM&#x60;: fibre metre - &#x60;FC&#x60;: thousand cubic foot - &#x60;FF&#x60;: hundred cubic metre - &#x60;FH&#x60;: micromole - &#x60;FIT&#x60;: failures in time - &#x60;FL&#x60;: flake ton - &#x60;FOT&#x60;: foot - &#x60;FP&#x60;: pound per square foot - &#x60;FR&#x60;: foot per minute - &#x60;FS&#x60;: foot per second - &#x60;FTK&#x60;: square foot - &#x60;FTQ&#x60;: cubic foot - &#x60;G01&#x60;: pascal cubic metre per second - &#x60;G04&#x60;: centimetre per bar - &#x60;G05&#x60;: metre per bar - &#x60;G06&#x60;: millimetre per bar - &#x60;G08&#x60;: square inch per second - &#x60;G09&#x60;: Quadratmeter pro Sekunde Kelvin - &#x60;G10&#x60;: stokes per kelvin - &#x60;G11&#x60;: gram per cubic centimetre bar - &#x60;G12&#x60;: gram per cubic decimetre bar - &#x60;G13&#x60;: gram per litre bar - &#x60;G14&#x60;: gram per cubic metre bar - &#x60;G15&#x60;: gram per millilitre bar - &#x60;G16&#x60;: kilogram per cubic centimetre bar - &#x60;G17&#x60;: kilogram per litre bar - &#x60;G18&#x60;: kilogram per cubic metre bar - &#x60;G19&#x60;: newton metre per kilogram - &#x60;G2&#x60;: US gallon per minute - &#x60;G20&#x60;: pound-force foot per pound - &#x60;G21&#x60;: cup [unit of volume] - &#x60;G23&#x60;: peck - &#x60;G24&#x60;: tablespoon (US) - &#x60;G25&#x60;: teaspoon (US) - &#x60;G26&#x60;: stere - &#x60;G27&#x60;: cubic centimetre per kelvin - &#x60;G28&#x60;: litre per kelvin - &#x60;G29&#x60;: cubic metre per kelvin - &#x60;G3&#x60;: Imperial gallon per minute - &#x60;G30&#x60;: millilitre per kelvin - &#x60;G31&#x60;: kilogram per cubic centimetre - &#x60;G32&#x60;: ounce (avoirdupois) per cubic yard - &#x60;G33&#x60;: gram per cubic centimetre kelvin - &#x60;G34&#x60;: gram per cubic decimetre kelvin - &#x60;G35&#x60;: gram per litre kelvin - &#x60;G36&#x60;: gram per cubic metre kelvin - &#x60;G37&#x60;: gram per millilitre kelvin - &#x60;G38&#x60;: kilogram per cubic centimetre kelvin - &#x60;G39&#x60;: kilogram per litre kelvin - &#x60;G40&#x60;: kilogram per cubic metre kelvin - &#x60;G41&#x60;: square metre per second bar - &#x60;G42&#x60;: microsiemens per centimetre - &#x60;G43&#x60;: microsiemens per metre - &#x60;G44&#x60;: nanosiemens per centimetre - &#x60;G45&#x60;: nanosiemens per metre - &#x60;G46&#x60;: stokes per bar - &#x60;G47&#x60;: cubic centimetre per day - &#x60;G48&#x60;: cubic centimetre per hour - &#x60;G49&#x60;: cubic centimetre per minute - &#x60;G50&#x60;: gallon (US) per hour - &#x60;G51&#x60;: litre per second - &#x60;G52&#x60;: cubic metre per day - &#x60;G53&#x60;: cubic metre per minute - &#x60;G54&#x60;: millilitre per day - &#x60;G55&#x60;: millilitre per hour - &#x60;G56&#x60;: cubic inch per hour - &#x60;G57&#x60;: cubic inch per minute - &#x60;G58&#x60;: cubic inch per second - &#x60;G59&#x60;: milliampere per litre minute - &#x60;G60&#x60;: volt per bar - &#x60;G61&#x60;: cubic centimetre per day kelvin - &#x60;G62&#x60;: cubic centimetre per hour kelvin - &#x60;G63&#x60;: cubic centimetre per minute kelvin - &#x60;G64&#x60;: cubic centimetre per second kelvin - &#x60;G65&#x60;: litre per day kelvin - &#x60;G66&#x60;: litre per hour kelvin - &#x60;G67&#x60;: litre per minute kelvin - &#x60;G68&#x60;: litre per second kelvin - &#x60;G69&#x60;: cubic metre per day kelvin - &#x60;G70&#x60;: cubic metre per hour kelvin - &#x60;G71&#x60;: cubic metre per minute kelvin - &#x60;G72&#x60;: cubic metre per second kelvin - &#x60;G73&#x60;: millilitre per day kelvin - &#x60;G74&#x60;: millilitre per hour kelvin - &#x60;G75&#x60;: Milliliter pro Minute Kelvin - &#x60;G76&#x60;: millilitre per second kelvin - &#x60;G77&#x60;: millimetre to the fourth power - &#x60;G78&#x60;: cubic centimetre per day bar - &#x60;G79&#x60;: cubic centimetre per hour bar - &#x60;G80&#x60;: cubic centimetre per minute bar - &#x60;G81&#x60;: cubic centimetre per second bar - &#x60;G82&#x60;: litre per day bar - &#x60;G83&#x60;: litre per hour bar - &#x60;G84&#x60;: litre per minute bar - &#x60;G85&#x60;: litre per second bar - &#x60;G86&#x60;: cubic metre per day bar - &#x60;G87&#x60;: cubic metre per hour bar - &#x60;G88&#x60;: Kubikmeter pro Minute bar - &#x60;G89&#x60;: cubic metre per second bar - &#x60;G90&#x60;: Milliliter pro Tag bar - &#x60;G91&#x60;: millilitre per hour bar - &#x60;G92&#x60;: millilitre per minute bar - &#x60;G93&#x60;: millilitre per second bar - &#x60;G94&#x60;: cubic centimetre per bar - &#x60;G95&#x60;: litre per bar - &#x60;G96&#x60;: cubic metre per bar - &#x60;G97&#x60;: millilitre per bar - &#x60;G98&#x60;: microhenry per kiloohm - &#x60;G99&#x60;: microhenry per ohm - &#x60;GB&#x60;: gallon (US) per day - &#x60;GBQ&#x60;: gigabecquerel - &#x60;GDW&#x60;: Gramm, Trockengewicht - &#x60;GE&#x60;: pound per gallon (US) - &#x60;GF&#x60;: gram per metre (gram per 100 centimetres) - &#x60;GFI&#x60;: gram of fissile isotope - &#x60;GGR&#x60;: great gross - &#x60;GIA&#x60;: gill (US) - &#x60;GIC&#x60;: gram, including container - &#x60;GII&#x60;: gill (UK) - &#x60;GIP&#x60;: gram, including inner packaging - &#x60;GJ&#x60;: gram per millilitre - &#x60;GL&#x60;: gram per litre - &#x60;GLD&#x60;: dry gallon (US) - &#x60;GLI&#x60;: gallon (UK) - &#x60;GLL&#x60;: gallon (US) - &#x60;GM&#x60;: gram per square metre - &#x60;GO&#x60;: milligram per square metre - &#x60;GP&#x60;: milligram per cubic metre - &#x60;GQ&#x60;: microgram per cubic metre - &#x60;GRM&#x60;: Gramm - &#x60;GRN&#x60;: grain - &#x60;GRO&#x60;: gross - &#x60;GV&#x60;: gigajoule - &#x60;GWH&#x60;: gigawatt hour - &#x60;H03&#x60;: henry per kiloohm - &#x60;H04&#x60;: henry per ohm - &#x60;H05&#x60;: millihenry per kiloohm - &#x60;H06&#x60;: millihenry per ohm - &#x60;H07&#x60;: pascal second per bar - &#x60;H08&#x60;: microbecquerel - &#x60;H09&#x60;: reciprocal year - &#x60;H10&#x60;: reciprocal hour - &#x60;H11&#x60;: reciprocal month - &#x60;H12&#x60;: degree Celsius per hour - &#x60;H13&#x60;: degree Celsius per minute - &#x60;H14&#x60;: degree Celsius per second - &#x60;H15&#x60;: square centimetre per gram - &#x60;H16&#x60;: square decametre - &#x60;H18&#x60;: square hectometre - &#x60;H19&#x60;: cubic hectometre - &#x60;H20&#x60;: cubic kilometre - &#x60;H21&#x60;: blank - &#x60;H22&#x60;: volt square inch per pound-force - &#x60;H23&#x60;: volt per inch - &#x60;H24&#x60;: volt per microsecond - &#x60;H25&#x60;: percent per kelvin - &#x60;H26&#x60;: ohm per metre - &#x60;H27&#x60;: degree per metre - &#x60;H28&#x60;: microfarad per kilometre - &#x60;H29&#x60;: microgram per litre - &#x60;H30&#x60;: square micrometre (square micron) - &#x60;H31&#x60;: Ampere pro Kilogramm - &#x60;H32&#x60;: ampere squared second - &#x60;H33&#x60;: farad per kilometre - &#x60;H34&#x60;: hertz metre - &#x60;H35&#x60;: kelvin metre per watt - &#x60;H36&#x60;: megaohm per kilometre - &#x60;H37&#x60;: megaohm per metre - &#x60;H38&#x60;: megaampere - &#x60;H39&#x60;: megahertz kilometre - &#x60;H40&#x60;: newton per ampere - &#x60;H41&#x60;: newton metre watt to the power minus 0,5 - &#x60;H42&#x60;: pascal per metre - &#x60;H43&#x60;: siemens per centimetre - &#x60;H44&#x60;: teraohm - &#x60;H45&#x60;: volt second per metre - &#x60;H46&#x60;: volt per second - &#x60;H47&#x60;: watt per cubic metre - &#x60;H48&#x60;: attofarad - &#x60;H49&#x60;: centimetre per hour - &#x60;H50&#x60;: reciprocal cubic centimetre - &#x60;H51&#x60;: decibel per kilometre - &#x60;H52&#x60;: decibel per metre - &#x60;H53&#x60;: kilogram per bar - &#x60;H54&#x60;: kilogram per cubic decimetre kelvin - &#x60;H55&#x60;: kilogram per cubic decimetre bar - &#x60;H56&#x60;: kilogram per square metre second - &#x60;H57&#x60;: inch per two pi radiant - &#x60;H58&#x60;: metre per volt second - &#x60;H59&#x60;: square metre per newton - &#x60;H60&#x60;: cubic metre per cubic metre - &#x60;H61&#x60;: millisiemens per centimetre - &#x60;H62&#x60;: millivolt per minute - &#x60;H63&#x60;: milligram per square centimetre - &#x60;H64&#x60;: milligram per gram - &#x60;H65&#x60;: millilitre per cubic metre - &#x60;H66&#x60;: millimetre per year - &#x60;H67&#x60;: millimetre per hour - &#x60;H68&#x60;: millimole per gram - &#x60;H69&#x60;: picopascal per kilometre - &#x60;H70&#x60;: picosecond - &#x60;H71&#x60;: percent per month - &#x60;H72&#x60;: percent per hectobar - &#x60;H73&#x60;: percent per decakelvin - &#x60;H74&#x60;: watt per metre - &#x60;H75&#x60;: decapascal - &#x60;H76&#x60;: gram per millimetre - &#x60;H77&#x60;: module width - &#x60;H79&#x60;: French gauge - &#x60;H80&#x60;: rack unit - &#x60;H81&#x60;: millimetre per minute - &#x60;H82&#x60;: big point - &#x60;H83&#x60;: litre per kilogram - &#x60;H84&#x60;: gram millimetre - &#x60;H85&#x60;: wechselseitige Woche - &#x60;H87&#x60;: St�ck - &#x60;H88&#x60;: megaohm kilometre - &#x60;H89&#x60;: percent per ohm - &#x60;H90&#x60;: percent per degree - &#x60;H91&#x60;: percent per ten thousand - &#x60;H92&#x60;: percent per one hundred thousand - &#x60;H93&#x60;: percent per hundred - &#x60;H94&#x60;: percent per thousand - &#x60;H95&#x60;: percent per volt - &#x60;H96&#x60;: percent per bar - &#x60;H98&#x60;: percent per inch - &#x60;H99&#x60;: percent per metre - &#x60;HA&#x60;: hank - &#x60;HBA&#x60;: hectobar - &#x60;HBX&#x60;: hundred boxes - &#x60;HC&#x60;: hundred count - &#x60;HDW&#x60;: hundred kilogram, dry weight - &#x60;HEA&#x60;: head - &#x60;HGM&#x60;: hectogram - &#x60;HH&#x60;: hundred cubic foot - &#x60;HIU&#x60;: hundred international unit - &#x60;HKM&#x60;: hundred kilogram, net mass - &#x60;HLT&#x60;: hectolitre - &#x60;HM&#x60;: mile per hour (statute mile) - &#x60;HMQ&#x60;: million cubic metre - &#x60;HMT&#x60;: hectometre - &#x60;HPA&#x60;: hectolitre of pure alcohol - &#x60;HTZ&#x60;: hertz - &#x60;HUR&#x60;: Stunde - &#x60;IA&#x60;: inch pound (pound inch) - &#x60;IE&#x60;: person - &#x60;INH&#x60;: inch - &#x60;INK&#x60;: square inch - &#x60;INQ&#x60;: cubic inch - &#x60;ISD&#x60;: international sugar degree - &#x60;IU&#x60;: inch per second - &#x60;IUG&#x60;: international unit per gram - &#x60;IV&#x60;: inch per second squared - &#x60;J10&#x60;: percent per millimetre - &#x60;J12&#x60;: per mille per psi - &#x60;J13&#x60;: degree API - &#x60;J14&#x60;: degree Baume (origin scale) - &#x60;J15&#x60;: degree Baume (US heavy) - &#x60;J16&#x60;: degree Baume (US light) - &#x60;J17&#x60;: degree Balling - &#x60;J18&#x60;: degree Brix - &#x60;J19&#x60;: degree Fahrenheit hour square foot per British thermal unit (thermochemical) - &#x60;J2&#x60;: joule per kilogram - &#x60;J20&#x60;: degree Fahrenheit per kelvin - &#x60;J21&#x60;: degree Fahrenheit per bar - &#x60;J22&#x60;: degree Fahrenheit hour square foot per British thermal unit (international table) - &#x60;J23&#x60;: degree Fahrenheit per hour - &#x60;J24&#x60;: degree Fahrenheit per minute - &#x60;J25&#x60;: degree Fahrenheit per second - &#x60;J26&#x60;: reciprocal degree Fahrenheit - &#x60;J27&#x60;: degree Oechsle - &#x60;J28&#x60;: degree Rankine per hour - &#x60;J29&#x60;: degree Rankine per minute - &#x60;J30&#x60;: degree Rankine per second - &#x60;J31&#x60;: degree Twaddell - &#x60;J32&#x60;: micropoise - &#x60;J33&#x60;: microgram per kilogram - &#x60;J34&#x60;: microgram per cubic metre kelvin - &#x60;J35&#x60;: microgram per cubic metre bar - &#x60;J36&#x60;: microlitre per litre - &#x60;J38&#x60;: baud - &#x60;J39&#x60;: British thermal unit (mean) - &#x60;J40&#x60;: British thermal unit (international table) foot per hour square foot degree Fahrenheit - &#x60;J41&#x60;: British thermal unit (international table) inch per hour square foot degree Fahrenheit - &#x60;J42&#x60;: British thermal unit (international table) inch per second square foot degree Fahrenheit - &#x60;J43&#x60;: British thermal unit (international table) per pound degree Fahrenheit - &#x60;J44&#x60;: British thermal unit (international table) per minute - &#x60;J45&#x60;: British thermal unit (international table) per second - &#x60;J46&#x60;: British thermal unit (thermochemical) foot per hour square foot degree Fahrenheit - &#x60;J47&#x60;: British thermal unit (thermochemical) per hour - &#x60;J48&#x60;: British thermal unit (thermochemical) inch per hour square foot degree Fahrenheit - &#x60;J49&#x60;: British thermal unit (thermochemical) inch per second square foot degree Fahrenheit - &#x60;J50&#x60;: British thermal unit (thermochemical) per pound degree Fahrenheit - &#x60;J51&#x60;: British thermal unit (thermochemical) per minute - &#x60;J52&#x60;: British thermal unit (thermochemical) per second - &#x60;J53&#x60;: coulomb square metre per kilogram - &#x60;J54&#x60;: megabaud - &#x60;J55&#x60;: watt second - &#x60;J56&#x60;: bar per bar - &#x60;J57&#x60;: barrel (UK petroleum) - &#x60;J58&#x60;: barrel (UK petroleum) per minute - &#x60;J59&#x60;: barrel (UK petroleum) per day - &#x60;J60&#x60;: barrel (UK petroleum) per hour - &#x60;J61&#x60;: barrel (UK petroleum) per second - &#x60;J62&#x60;: barrel (US petroleum) per hour - &#x60;J63&#x60;: barrel (US petroleum) per second - &#x60;J64&#x60;: bushel (UK) per day - &#x60;J65&#x60;: bushel (UK) per hour - &#x60;J66&#x60;: bushel (UK) per minute - &#x60;J67&#x60;: bushel (UK) per second - &#x60;J68&#x60;: bushel (US dry) per day - &#x60;J69&#x60;: bushel (US dry) per hour - &#x60;J70&#x60;: bushel (US dry) per minute - &#x60;J71&#x60;: bushel (US dry) per second - &#x60;J72&#x60;: centinewton metre - &#x60;J73&#x60;: centipoise per kelvin - &#x60;J74&#x60;: centipoise per bar - &#x60;J75&#x60;: calorie (mean) - &#x60;J76&#x60;: calorie (international table) per gram degree Celsius - &#x60;J78&#x60;: calorie (thermochemical) per centimetre second degree Celsius - &#x60;J79&#x60;: calorie (thermochemical) per gram degree Celsius - &#x60;J81&#x60;: calorie (thermochemical) per minute - &#x60;J82&#x60;: calorie (thermochemical) per second - &#x60;J83&#x60;: clo - &#x60;J84&#x60;: centimetre per second kelvin - &#x60;J85&#x60;: centimetre per second bar - &#x60;J87&#x60;: cubic centimetre per cubic metre - &#x60;J90&#x60;: cubic decimetre per day - &#x60;J91&#x60;: cubic decimetre per cubic metre - &#x60;J92&#x60;: cubic decimetre per minute - &#x60;J93&#x60;: cubic decimetre per second - &#x60;J95&#x60;: ounce (UK fluid) per day - &#x60;J96&#x60;: ounce (UK fluid) per hour - &#x60;J97&#x60;: ounce (UK fluid) per minute - &#x60;J98&#x60;: ounce (UK fluid) per second - &#x60;J99&#x60;: ounce (US fluid) per day - &#x60;JE&#x60;: joule per kelvin - &#x60;JK&#x60;: megajoule per kilogram - &#x60;JM&#x60;: megajoule per cubic metre - &#x60;JNT&#x60;: pipeline joint - &#x60;JOU&#x60;: joule - &#x60;JPS&#x60;: hundred metre - &#x60;JWL&#x60;: number of jewels - &#x60;K1&#x60;: kilowatt demand - &#x60;K10&#x60;: ounce (US fluid) per hour - &#x60;K11&#x60;: ounce (US fluid) per minute - &#x60;K12&#x60;: ounce (US fluid) per second - &#x60;K13&#x60;: foot per degree Fahrenheit - &#x60;K14&#x60;: foot per hour - &#x60;K15&#x60;: foot pound-force per hour - &#x60;K16&#x60;: foot pound-force per minute - &#x60;K17&#x60;: foot per psi - &#x60;K18&#x60;: foot per second degree Fahrenheit - &#x60;K19&#x60;: foot per second psi - &#x60;K2&#x60;: kilovolt ampere reactive demand - &#x60;K20&#x60;: reciprocal cubic foot - &#x60;K21&#x60;: cubic foot per degree Fahrenheit - &#x60;K22&#x60;: cubic foot per day - &#x60;K23&#x60;: cubic foot per psi - &#x60;K26&#x60;: gallon (UK) per day - &#x60;K27&#x60;: gallon (UK) per hour - &#x60;K28&#x60;: gallon (UK) per second - &#x60;K3&#x60;: kilovolt ampere reactive hour - &#x60;K30&#x60;: gallon (US liquid) per second - &#x60;K31&#x60;: gram-force per square centimetre - &#x60;K32&#x60;: gill (UK) per day - &#x60;K33&#x60;: gill (UK) per hour - &#x60;K34&#x60;: gill (UK) per minute - &#x60;K35&#x60;: gill (UK) per second - &#x60;K36&#x60;: gill (US) per day - &#x60;K37&#x60;: gill (US) per hour - &#x60;K38&#x60;: gill (US) per minute - &#x60;K39&#x60;: gill (US) per second - &#x60;K40&#x60;: standard acceleration of free fall - &#x60;K41&#x60;: grain per gallon (US) - &#x60;K42&#x60;: horsepower (boiler) - &#x60;K43&#x60;: horsepower (electric) - &#x60;K45&#x60;: inch per degree Fahrenheit - &#x60;K46&#x60;: inch per psi - &#x60;K47&#x60;: inch per second degree Fahrenheit - &#x60;K48&#x60;: inch per second psi - &#x60;K49&#x60;: reciprocal cubic inch - &#x60;K50&#x60;: kilobaud - &#x60;K51&#x60;: kilocalorie (mean) - &#x60;K52&#x60;: kilocalorie (international table) per hour metre degree Celsius - &#x60;K53&#x60;: kilocalorie (thermochemical) - &#x60;K54&#x60;: kilocalorie (thermochemical) per minute - &#x60;K55&#x60;: kilocalorie (thermochemical) per second - &#x60;K58&#x60;: kilomole per hour - &#x60;K59&#x60;: kilomole per cubic metre kelvin - &#x60;K6&#x60;: kilolitre - &#x60;K60&#x60;: kilomole per cubic metre bar - &#x60;K61&#x60;: kilomole per minute - &#x60;K62&#x60;: litre per litre - &#x60;K63&#x60;: reciprocal litre - &#x60;K64&#x60;: pound (avoirdupois) per degree Fahrenheit - &#x60;K65&#x60;: pound (avoirdupois) square foot - &#x60;K66&#x60;: pound (avoirdupois) per day - &#x60;K67&#x60;: pound per foot hour - &#x60;K68&#x60;: pound per foot second - &#x60;K69&#x60;: pound (avoirdupois) per cubic foot degree Fahrenheit - &#x60;K70&#x60;: pound (avoirdupois) per cubic foot psi - &#x60;K71&#x60;: pound (avoirdupois) per gallon (UK) - &#x60;K73&#x60;: pound (avoirdupois) per hour degree Fahrenheit - &#x60;K74&#x60;: pound (avoirdupois) per hour psi - &#x60;K75&#x60;: pound (avoirdupois) per cubic inch degree Fahrenheit - &#x60;K76&#x60;: pound (avoirdupois) per cubic inch psi - &#x60;K77&#x60;: pound (avoirdupois) per psi - &#x60;K78&#x60;: pound (avoirdupois) per minute - &#x60;K79&#x60;: pound (avoirdupois) per minute degree Fahrenheit - &#x60;K80&#x60;: pound (avoirdupois) per minute psi - &#x60;K81&#x60;: pound (avoirdupois) per second - &#x60;K82&#x60;: pound (avoirdupois) per second degree Fahrenheit - &#x60;K83&#x60;: pound (avoirdupois) per second psi - &#x60;K84&#x60;: pound per cubic yard - &#x60;K85&#x60;: pound-force per square foot - &#x60;K86&#x60;: pound-force per square inch degree Fahrenheit - &#x60;K87&#x60;: psi cubic inch per second - &#x60;K88&#x60;: psi litre per second - &#x60;K89&#x60;: psi cubic metre per second - &#x60;K90&#x60;: psi cubic yard per second - &#x60;K91&#x60;: pound-force second per square foot - &#x60;K92&#x60;: pound-force second per square inch - &#x60;K93&#x60;: reciprocal psi - &#x60;K94&#x60;: quart (UK liquid) per day - &#x60;K95&#x60;: quart (UK liquid) per hour - &#x60;K96&#x60;: quart (UK liquid) per minute - &#x60;K97&#x60;: quart (UK liquid) per second - &#x60;K98&#x60;: quart (US liquid) per day - &#x60;K99&#x60;: quart (US liquid) per hour - &#x60;KA&#x60;: cake - &#x60;KAT&#x60;: katal - &#x60;KB&#x60;: kilocharacter - &#x60;KBA&#x60;: kilobar - &#x60;KCC&#x60;: kilogram of choline chloride - &#x60;KDW&#x60;: kilogram drained net weight - &#x60;KEL&#x60;: kelvin - &#x60;KGM&#x60;: Kilogramm - &#x60;KGS&#x60;: kilogram per second - &#x60;KHY&#x60;: kilogram of hydrogen peroxide - &#x60;KHZ&#x60;: kilohertz - &#x60;KI&#x60;: kilogram per millimetre width - &#x60;KIC&#x60;: kilogram, including container - &#x60;KIP&#x60;: kilogram, including inner packaging - &#x60;KJ&#x60;: kilosegment - &#x60;KJO&#x60;: kilojoule - &#x60;KL&#x60;: kilogram per metre - &#x60;KLK&#x60;: lactic dry material percentage - &#x60;KLX&#x60;: kilolux - &#x60;KMA&#x60;: kilogram of methylamine - &#x60;KMH&#x60;: kilometre per hour - &#x60;KMK&#x60;: square kilometre - &#x60;KMQ&#x60;: kilogram per cubic metre - &#x60;KMT&#x60;: Kilometer - &#x60;KNI&#x60;: kilogram of nitrogen - &#x60;KNM&#x60;: kilonewton per square metre - &#x60;KNS&#x60;: kilogram named substance - &#x60;KNT&#x60;: knot - &#x60;KO&#x60;: milliequivalence caustic potash per gram of product - &#x60;KPA&#x60;: kilopascal - &#x60;KPH&#x60;: kilogram of potassium hydroxide (caustic potash) - &#x60;KPO&#x60;: kilogram of potassium oxide - &#x60;KPP&#x60;: kilogram of phosphorus pentoxide (phosphoric anhydride) - &#x60;KR&#x60;: kiloroentgen - &#x60;KSD&#x60;: kilogram of substance 90 % dry - &#x60;KSH&#x60;: kilogram of sodium hydroxide (caustic soda) - &#x60;KT&#x60;: kit - &#x60;KTN&#x60;: Kilotonne - &#x60;KUR&#x60;: kilogram of uranium - &#x60;KVA&#x60;: kilovolt - ampere - &#x60;KVR&#x60;: kilovar - &#x60;KVT&#x60;: kilovolt - &#x60;KW&#x60;: kilogram per millimetre - &#x60;KWH&#x60;: kilowatt hour - &#x60;KWN&#x60;: Kilowatt hour per normalized cubic metre - &#x60;KWO&#x60;: kilogram of tungsten trioxide - &#x60;KWS&#x60;: Kilowattstunde pro Normkubikmeter - &#x60;KWT&#x60;: kilowatt - &#x60;KX&#x60;: millilitre per kilogram - &#x60;L10&#x60;: quart (US liquid) per minute - &#x60;L11&#x60;: quart (US liquid) per second - &#x60;L12&#x60;: metre per second kelvin - &#x60;L13&#x60;: metre per second bar - &#x60;L14&#x60;: square metre hour degree Celsius per kilocalorie (international table) - &#x60;L15&#x60;: millipascal second per kelvin - &#x60;L16&#x60;: millipascal second per bar - &#x60;L17&#x60;: milligram per cubic metre kelvin - &#x60;L18&#x60;: milligram per cubic metre bar - &#x60;L19&#x60;: millilitre per litre - &#x60;L2&#x60;: litre per minute - &#x60;L20&#x60;: reciprocal cubic millimetre - &#x60;L21&#x60;: cubic millimetre per cubic metre - &#x60;L23&#x60;: mole per hour - &#x60;L24&#x60;: mole per kilogram kelvin - &#x60;L25&#x60;: mole per kilogram bar - &#x60;L26&#x60;: mole per litre kelvin - &#x60;L27&#x60;: mole per litre bar - &#x60;L28&#x60;: mole per cubic metre kelvin - &#x60;L29&#x60;: mole per cubic metre bar - &#x60;L30&#x60;: mole per minute - &#x60;L31&#x60;: milliroentgen aequivalent men - &#x60;L32&#x60;: nanogram per kilogram - &#x60;L33&#x60;: Unze (avoirdupois) pro Tag - &#x60;L34&#x60;: ounce (avoirdupois) per hour - &#x60;L35&#x60;: ounce (avoirdupois) per minute - &#x60;L36&#x60;: ounce (avoirdupois) per second - &#x60;L37&#x60;: ounce (avoirdupois) per gallon (UK) - &#x60;L38&#x60;: ounce (avoirdupois) per gallon (US) - &#x60;L39&#x60;: ounce (avoirdupois) per cubic inch - &#x60;L40&#x60;: ounce (avoirdupois)-force - &#x60;L41&#x60;: ounce (avoirdupois)-force inch - &#x60;L42&#x60;: picosiemens per metre - &#x60;L43&#x60;: peck (UK) - &#x60;L44&#x60;: peck (UK) per day - &#x60;L45&#x60;: peck (UK) per hour - &#x60;L46&#x60;: peck (UK) per minute - &#x60;L47&#x60;: peck (UK) per second - &#x60;L48&#x60;: peck (US dry) per day - &#x60;L49&#x60;: peck (US dry) per hour - &#x60;L50&#x60;: peck (US dry) per minute - &#x60;L51&#x60;: peck (US dry) per second - &#x60;L52&#x60;: psi per psi - &#x60;L53&#x60;: pint (UK) per day - &#x60;L54&#x60;: pint (UK) per hour - &#x60;L55&#x60;: pint (UK) per minute - &#x60;L56&#x60;: pint (UK) per second - &#x60;L57&#x60;: pint (US liquid) per day - &#x60;L58&#x60;: pint (US liquid) per hour - &#x60;L59&#x60;: pint (US liquid) per minute - &#x60;L60&#x60;: pint (US liquid) per second - &#x60;L63&#x60;: slug per day - &#x60;L64&#x60;: slug per foot second - &#x60;L65&#x60;: slug per cubic foot - &#x60;L66&#x60;: slug per hour - &#x60;L67&#x60;: slug per minute - &#x60;L68&#x60;: slug per second - &#x60;L69&#x60;: tonne per kelvin - &#x60;L70&#x60;: tonne per bar - &#x60;L71&#x60;: tonne per day - &#x60;L72&#x60;: tonne per day kelvin - &#x60;L73&#x60;: tonne per day bar - &#x60;L74&#x60;: tonne per hour kelvin - &#x60;L75&#x60;: tonne per hour bar - &#x60;L76&#x60;: tonne per cubic metre kelvin - &#x60;L77&#x60;: tonne per cubic metre bar - &#x60;L78&#x60;: tonne per minute - &#x60;L79&#x60;: tonne per minute kelvin - &#x60;L80&#x60;: tonne per minute bar - &#x60;L81&#x60;: tonne per second - &#x60;L82&#x60;: tonne per second kelvin - &#x60;L83&#x60;: tonne per second bar - &#x60;L84&#x60;: ton (UK shipping) - &#x60;L85&#x60;: ton long per day - &#x60;L86&#x60;: ton (US shipping) - &#x60;L87&#x60;: ton short per degree Fahrenheit - &#x60;L88&#x60;: ton short per day - &#x60;L89&#x60;: ton short per hour degree Fahrenheit - &#x60;L90&#x60;: ton short per hour psi - &#x60;L91&#x60;: ton short per psi - &#x60;L92&#x60;: ton (UK long) per cubic yard - &#x60;L93&#x60;: ton (US short) per cubic yard - &#x60;L94&#x60;: ton-force (US short) - &#x60;L95&#x60;: common year - &#x60;L96&#x60;: sidereal year - &#x60;L98&#x60;: yard per degree Fahrenheit - &#x60;L99&#x60;: yard per psi - &#x60;LA&#x60;: pound per cubic inch - &#x60;LAC&#x60;: lactose excess percentage - &#x60;LBR&#x60;: pound - &#x60;LBT&#x60;: troy pound (US) - &#x60;LD&#x60;: litre per day - &#x60;LEF&#x60;: leaf - &#x60;LF&#x60;: linear foot - &#x60;LH&#x60;: labour hour - &#x60;LK&#x60;: link - &#x60;LM&#x60;: linear metre - &#x60;LN&#x60;: length - &#x60;LO&#x60;: lot [unit of procurement] - &#x60;LP&#x60;: liquid pound - &#x60;LPA&#x60;: litre of pure alcohol - &#x60;LR&#x60;: layer - &#x60;LS&#x60;: lump sum - &#x60;LTN&#x60;: ton (UK) or long ton (US) - &#x60;LTR&#x60;: Liter - &#x60;LUB&#x60;: metric ton, lubricating oil - &#x60;LUM&#x60;: lumen - &#x60;LUX&#x60;: lux - &#x60;LY&#x60;: linear yard - &#x60;M1&#x60;: milligram per litre - &#x60;M10&#x60;: reciprocal cubic yard - &#x60;M11&#x60;: cubic yard per degree Fahrenheit - &#x60;M12&#x60;: cubic yard per day - &#x60;M13&#x60;: cubic yard per hour - &#x60;M14&#x60;: cubic yard per psi - &#x60;M15&#x60;: cubic yard per minute - &#x60;M16&#x60;: cubic yard per second - &#x60;M17&#x60;: kilohertz metre - &#x60;M18&#x60;: gigahertz metre - &#x60;M19&#x60;: Beaufort - &#x60;M20&#x60;: reciprocal megakelvin or megakelvin to the power minus one - &#x60;M21&#x60;: reciprocal kilovolt - ampere reciprocal hour - &#x60;M22&#x60;: millilitre per square centimetre minute - &#x60;M23&#x60;: newton per centimetre - &#x60;M24&#x60;: ohm kilometre - &#x60;M25&#x60;: percent per degree Celsius - &#x60;M26&#x60;: gigaohm per metre - &#x60;M27&#x60;: megahertz metre - &#x60;M29&#x60;: kilogram per kilogram - &#x60;M30&#x60;: reciprocal volt - ampere reciprocal second - &#x60;M31&#x60;: kilogram per kilometre - &#x60;M32&#x60;: pascal second per litre - &#x60;M33&#x60;: millimole per litre - &#x60;M34&#x60;: newton metre per square metre - &#x60;M35&#x60;: millivolt - ampere - &#x60;M36&#x60;: 30-Tage-Monat - &#x60;M37&#x60;: actual/360 - &#x60;M38&#x60;: kilometre per second squared - &#x60;M39&#x60;: centimetre per second squared - &#x60;M4&#x60;: monetary value - &#x60;M40&#x60;: yard per second squared - &#x60;M41&#x60;: millimetre per second squared - &#x60;M42&#x60;: mile (statute mile) per second squared - &#x60;M43&#x60;: mil - &#x60;M44&#x60;: revolution - &#x60;M45&#x60;: degree [unit of angle] per second squared - &#x60;M46&#x60;: revolution per minute - &#x60;M47&#x60;: circular mil - &#x60;M48&#x60;: square mile (based on U.S. survey foot) - &#x60;M49&#x60;: chain (based on U.S. survey foot) - &#x60;M5&#x60;: microcurie - &#x60;M50&#x60;: furlong - &#x60;M51&#x60;: foot (U.S. survey) - &#x60;M52&#x60;: mile (based on U.S. survey foot) - &#x60;M53&#x60;: metre per pascal - &#x60;M55&#x60;: metre per radiant - &#x60;M56&#x60;: shake - &#x60;M57&#x60;: mile per minute - &#x60;M58&#x60;: mile per second - &#x60;M59&#x60;: metre per second pascal - &#x60;M60&#x60;: metre per hour - &#x60;M61&#x60;: inch per year - &#x60;M62&#x60;: kilometre per second - &#x60;M63&#x60;: inch per minute - &#x60;M64&#x60;: yard per second - &#x60;M65&#x60;: yard per minute - &#x60;M66&#x60;: yard per hour - &#x60;M67&#x60;: acre-foot (based on U.S. survey foot) - &#x60;M68&#x60;: cord (128 ft3) - &#x60;M69&#x60;: cubic mile (UK statute) - &#x60;M7&#x60;: micro-inch - &#x60;M70&#x60;: ton, register - &#x60;M71&#x60;: cubic metre per pascal - &#x60;M72&#x60;: bel - &#x60;M73&#x60;: kilogram per cubic metre pascal - &#x60;M74&#x60;: kilogram per pascal - &#x60;M75&#x60;: kilopound-force - &#x60;M76&#x60;: poundal - &#x60;M77&#x60;: kilogram metre per second squared - &#x60;M78&#x60;: pond - &#x60;M79&#x60;: square foot per hour - &#x60;M80&#x60;: stokes per pascal - &#x60;M81&#x60;: square centimetre per second - &#x60;M82&#x60;: square metre per second pascal - &#x60;M83&#x60;: denier - &#x60;M84&#x60;: pound per yard - &#x60;M85&#x60;: ton, assay - &#x60;M86&#x60;: pfund - &#x60;M87&#x60;: kilogram per second pascal - &#x60;M88&#x60;: tonne per month - &#x60;M89&#x60;: tonne per year - &#x60;M9&#x60;: million Btu per 1000 cubic foot - &#x60;M90&#x60;: kilopound per hour - &#x60;M91&#x60;: pound per pound - &#x60;M92&#x60;: pound-force foot - &#x60;M93&#x60;: newton metre per radian - &#x60;M94&#x60;: kilogram metre - &#x60;M95&#x60;: poundal foot - &#x60;M96&#x60;: poundal inch - &#x60;M97&#x60;: dyne metre - &#x60;M98&#x60;: kilogram centimetre per second - &#x60;M99&#x60;: gram centimetre per second - &#x60;MAH&#x60;: megavolt ampere reactive hour - &#x60;MAL&#x60;: megalitre - &#x60;MAM&#x60;: megametre - &#x60;MAR&#x60;: megavar - &#x60;MAW&#x60;: megawatt - &#x60;MBE&#x60;: thousand standard brick equivalent - &#x60;MBF&#x60;: thousand board foot - &#x60;MBR&#x60;: millibar - &#x60;MC&#x60;: microgram - &#x60;MCU&#x60;: millicurie - &#x60;MD&#x60;: air dry metric ton - &#x60;MGM&#x60;: milligram - &#x60;MHZ&#x60;: megahertz - &#x60;MIK&#x60;: square mile (statute mile) - &#x60;MIL&#x60;: thousand - &#x60;MIN&#x60;: minute [unit of time] - &#x60;MIO&#x60;: million - &#x60;MIU&#x60;: million international unit - &#x60;MLD&#x60;: milliard - &#x60;MLT&#x60;: millilitre - &#x60;MMK&#x60;: square millimetre - &#x60;MMQ&#x60;: cubic millimetre - &#x60;MMT&#x60;: millimetre - &#x60;MND&#x60;: kilogram, dry weight - &#x60;MON&#x60;: Monat - &#x60;MPA&#x60;: megapascal - &#x60;MQH&#x60;: cubic metre per hour - &#x60;MQS&#x60;: cubic metre per second - &#x60;MSK&#x60;: metre per second squared - &#x60;MTK&#x60;: Quadratmeter - &#x60;MTQ&#x60;: Kubikmeter - &#x60;MTR&#x60;: Meter - &#x60;MTS&#x60;: metre per second - &#x60;MVA&#x60;: megavolt - ampere - &#x60;MWH&#x60;: megawatt hour (1000 kW.h) - &#x60;N1&#x60;: pen calorie - &#x60;N10&#x60;: pound foot per second - &#x60;N11&#x60;: pound inch per second - &#x60;N12&#x60;: Pferdestaerke - &#x60;N13&#x60;: centimetre of mercury (0 �C) - &#x60;N14&#x60;: centimetre of water (4 �C) - &#x60;N15&#x60;: foot of water (39.2 �F) - &#x60;N16&#x60;: inch of mercury (32 �F) - &#x60;N17&#x60;: inch of mercury (60 �F) - &#x60;N18&#x60;: inch of water (39.2 �F) - &#x60;N19&#x60;: inch of water (60 �F) - &#x60;N20&#x60;: kip per square inch - &#x60;N21&#x60;: poundal per square foot - &#x60;N22&#x60;: ounce (avoirdupois) per square inch - &#x60;N23&#x60;: conventional metre of water - &#x60;N24&#x60;: gram per square millimetre - &#x60;N25&#x60;: pound per square yard - &#x60;N26&#x60;: poundal per square inch - &#x60;N27&#x60;: foot to the fourth power - &#x60;N28&#x60;: cubic decimetre per kilogram - &#x60;N29&#x60;: cubic foot per pound - &#x60;N3&#x60;: print point - &#x60;N30&#x60;: cubic inch per pound - &#x60;N31&#x60;: kilonewton per metre - &#x60;N32&#x60;: poundal per inch - &#x60;N33&#x60;: pound-force per yard - &#x60;N34&#x60;: poundal second per square foot - &#x60;N35&#x60;: poise per pascal - &#x60;N36&#x60;: newton second per square metre - &#x60;N37&#x60;: kilogram per metre second - &#x60;N38&#x60;: kilogram per metre minute - &#x60;N39&#x60;: kilogram per metre day - &#x60;N40&#x60;: kilogram per metre hour - &#x60;N41&#x60;: gram per centimetre second - &#x60;N42&#x60;: poundal second per square inch - &#x60;N43&#x60;: pound per foot minute - &#x60;N44&#x60;: pound per foot day - &#x60;N45&#x60;: cubic metre per second pascal - &#x60;N46&#x60;: foot poundal - &#x60;N47&#x60;: inch poundal - &#x60;N48&#x60;: watt per square centimetre - &#x60;N49&#x60;: watt per square inch - &#x60;N50&#x60;: British thermal unit (international table) per square foot hour - &#x60;N51&#x60;: British thermal unit (thermochemical) per square foot hour - &#x60;N52&#x60;: British thermal unit (thermochemical) per square foot minute - &#x60;N53&#x60;: British thermal unit (international table) per square foot second - &#x60;N54&#x60;: British thermal unit (thermochemical) per square foot second - &#x60;N55&#x60;: British thermal unit (international table) per square inch second - &#x60;N56&#x60;: calorie (thermochemical) per square centimetre minute - &#x60;N57&#x60;: calorie (thermochemical) per square centimetre second - &#x60;N58&#x60;: British thermal unit (international table) per cubic foot - &#x60;N59&#x60;: British thermal unit (thermochemical) per cubic foot - &#x60;N60&#x60;: British thermal unit (international table) per degree Fahrenheit - &#x60;N61&#x60;: British thermal unit (thermochemical) per degree Fahrenheit - &#x60;N62&#x60;: British thermal unit (international table) per degree Rankine - &#x60;N63&#x60;: British thermal unit (thermochemical) per degree Rankine - &#x60;N64&#x60;: British thermal unit (thermochemical) per pound degree Rankine - &#x60;N65&#x60;: kilocalorie (international table) per gram kelvin - &#x60;N66&#x60;: British thermal unit (39 �F) - &#x60;N67&#x60;: British thermal unit (59 �F) - &#x60;N68&#x60;: British thermal unit (60 �F) - &#x60;N69&#x60;: calorie (20 �C) - &#x60;N70&#x60;: quad (1015 BtuIT) - &#x60;N71&#x60;: therm (EC) - &#x60;N72&#x60;: therm (U.S.) - &#x60;N73&#x60;: British thermal unit (thermochemical) per pound - &#x60;N74&#x60;: British thermal unit (international table) per hour square foot degree Fahrenheit - &#x60;N75&#x60;: British thermal unit (thermochemical) per hour square foot degree Fahrenheit - &#x60;N76&#x60;: British thermal unit (international table) per second square foot degree Fahrenheit - &#x60;N77&#x60;: British thermal unit (thermochemical) per second square foot degree Fahrenheit - &#x60;N78&#x60;: kilowatt per square metre kelvin - &#x60;N79&#x60;: kelvin per pascal - &#x60;N80&#x60;: watt per metre degree Celsius - &#x60;N81&#x60;: kilowatt per metre kelvin - &#x60;N82&#x60;: kilowatt per metre degree Celsius - &#x60;N83&#x60;: metre per degree Celcius metre - &#x60;N84&#x60;: degree Fahrenheit hour per British thermal unit (international table) - &#x60;N85&#x60;: degree Fahrenheit hour per British thermal unit (thermochemical) - &#x60;N86&#x60;: degree Fahrenheit second per British thermal unit (international table) - &#x60;N87&#x60;: degree Fahrenheit second per British thermal unit (thermochemical) - &#x60;N88&#x60;: degree Fahrenheit hour square foot per British thermal unit (international table) inch - &#x60;N89&#x60;: degree Fahrenheit hour square foot per British thermal unit (thermochemical) inch - &#x60;N90&#x60;: kilofarad - &#x60;N91&#x60;: reciprocal joule - &#x60;N92&#x60;: picosiemens - &#x60;N93&#x60;: ampere per pascal - &#x60;N94&#x60;: franklin - &#x60;N95&#x60;: ampere minute - &#x60;N96&#x60;: biot - &#x60;N97&#x60;: gilbert - &#x60;N98&#x60;: volt per pascal - &#x60;N99&#x60;: picovolt - &#x60;NA&#x60;: milligram per kilogram - &#x60;NAR&#x60;: number of articles - &#x60;NCL&#x60;: number of cells - &#x60;NEW&#x60;: newton - &#x60;NF&#x60;: message - &#x60;NIL&#x60;: nil - &#x60;NIU&#x60;: number of international units - &#x60;NL&#x60;: load - &#x60;NM3&#x60;: Normalised cubic metre - &#x60;NMI&#x60;: nautical mile - &#x60;NMP&#x60;: number of packs - &#x60;NPT&#x60;: number of parts - &#x60;NT&#x60;: net ton - &#x60;NU&#x60;: newton metre - &#x60;NX&#x60;: part per thousand - &#x60;OA&#x60;: panel - &#x60;ODE&#x60;: ozone depletion equivalent - &#x60;ODG&#x60;: ODS Grams - &#x60;ODK&#x60;: ODS Kilograms - &#x60;ODM&#x60;: ODS Milligrams - &#x60;OHM&#x60;: ohm - &#x60;ON&#x60;: ounce per square yard - &#x60;ONZ&#x60;: ounce (avoirdupois) - &#x60;OPM&#x60;: oscillations per minute - &#x60;OT&#x60;: overtime hour - &#x60;OZA&#x60;: fluid ounce (US) - &#x60;OZI&#x60;: fluid ounce (UK) - &#x60;P1&#x60;: percent - &#x60;P10&#x60;: coulomb per metre - &#x60;P11&#x60;: kiloweber - &#x60;P12&#x60;: gamma - &#x60;P13&#x60;: kilotesla - &#x60;P14&#x60;: joule per second - &#x60;P15&#x60;: joule per minute - &#x60;P16&#x60;: joule per hour - &#x60;P17&#x60;: joule per day - &#x60;P18&#x60;: kilojoule per second - &#x60;P19&#x60;: kilojoule per minute - &#x60;P2&#x60;: pound per foot - &#x60;P20&#x60;: kilojoule per hour - &#x60;P21&#x60;: kilojoule per day - &#x60;P22&#x60;: nanoohm - &#x60;P23&#x60;: ohm circular-mil per foot - &#x60;P24&#x60;: kilohenry - &#x60;P25&#x60;: lumen per square foot - &#x60;P26&#x60;: phot - &#x60;P27&#x60;: footcandle - &#x60;P28&#x60;: candela per square inch - &#x60;P29&#x60;: footlambert - &#x60;P30&#x60;: lambert - &#x60;P31&#x60;: stilb - &#x60;P32&#x60;: candela per square foot - &#x60;P33&#x60;: kilocandela - &#x60;P34&#x60;: millicandela - &#x60;P35&#x60;: Hefner-Kerze - &#x60;P36&#x60;: international candle - &#x60;P37&#x60;: British thermal unit (international table) per square foot - &#x60;P38&#x60;: British thermal unit (thermochemical) per square foot - &#x60;P39&#x60;: calorie (thermochemical) per square centimetre - &#x60;P40&#x60;: langley - &#x60;P41&#x60;: decade (logarithmic) - &#x60;P42&#x60;: pascal squared second - &#x60;P43&#x60;: bel per metre - &#x60;P44&#x60;: pound mole - &#x60;P45&#x60;: pound mole per second - &#x60;P46&#x60;: pound mole per minute - &#x60;P47&#x60;: kilomole per kilogram - &#x60;P48&#x60;: pound mole per pound - &#x60;P49&#x60;: newton square metre per ampere - &#x60;P5&#x60;: five pack - &#x60;P50&#x60;: weber metre - &#x60;P51&#x60;: mol per kilogram pascal - &#x60;P52&#x60;: mol per cubic metre pascal - &#x60;P53&#x60;: unit pole - &#x60;P54&#x60;: milligray per second - &#x60;P55&#x60;: microgray per second - &#x60;P56&#x60;: nanogray per second - &#x60;P57&#x60;: gray per minute - &#x60;P58&#x60;: milligray per minute - &#x60;P59&#x60;: microgray per minute - &#x60;P60&#x60;: nanogray per minute - &#x60;P61&#x60;: gray per hour - &#x60;P62&#x60;: milligray per hour - &#x60;P63&#x60;: microgray per hour - &#x60;P64&#x60;: nanogray per hour - &#x60;P65&#x60;: sievert per second - &#x60;P66&#x60;: millisievert per second - &#x60;P67&#x60;: microsievert per second - &#x60;P68&#x60;: nanosievert per second - &#x60;P69&#x60;: rem per second - &#x60;P70&#x60;: sievert per hour - &#x60;P71&#x60;: millisievert per hour - &#x60;P72&#x60;: microsievert per hour - &#x60;P73&#x60;: nanosievert per hour - &#x60;P74&#x60;: sievert per minute - &#x60;P75&#x60;: millisievert per minute - &#x60;P76&#x60;: microsievert per minute - &#x60;P77&#x60;: nanosievert per minute - &#x60;P78&#x60;: reciprocal square inch - &#x60;P79&#x60;: pascal square metre per kilogram - &#x60;P80&#x60;: millipascal per metre - &#x60;P81&#x60;: kilopascal per metre - &#x60;P82&#x60;: hectopascal per metre - &#x60;P83&#x60;: standard atmosphere per metre - &#x60;P84&#x60;: technical atmosphere per metre - &#x60;P85&#x60;: torr per metre - &#x60;P86&#x60;: psi per inch - &#x60;P87&#x60;: cubic metre per second square metre - &#x60;P88&#x60;: rhe - &#x60;P89&#x60;: pound-force foot per inch - &#x60;P90&#x60;: pound-force inch per inch - &#x60;P91&#x60;: perm (0 �C) - &#x60;P92&#x60;: perm (23 �C) - &#x60;P93&#x60;: byte per second - &#x60;P94&#x60;: kilobyte per second - &#x60;P95&#x60;: megabyte per second - &#x60;P96&#x60;: reciprocal volt - &#x60;P97&#x60;: reciprocal radian - &#x60;P98&#x60;: pascal to the power sum of stoichiometric numbers - &#x60;P99&#x60;: mole per cubiv metre to the power sum of stoichiometric numbers - &#x60;PAL&#x60;: pascal - &#x60;PD&#x60;: pad - &#x60;PFL&#x60;: proof litre - &#x60;PGL&#x60;: proof gallon - &#x60;PI&#x60;: pitch - &#x60;PLA&#x60;: degree Plato - &#x60;PO&#x60;: pound per inch of length - &#x60;PQ&#x60;: page per inch - &#x60;PR&#x60;: Paar - &#x60;PS&#x60;: pound-force per square inch - &#x60;PTD&#x60;: dry pint (US) - &#x60;PTI&#x60;: pint (UK) - &#x60;PTL&#x60;: liquid pint (US) - &#x60;PTN&#x60;: portion - &#x60;Q10&#x60;: joule per tesla - &#x60;Q11&#x60;: erlang - &#x60;Q12&#x60;: octet - &#x60;Q13&#x60;: octet per second - &#x60;Q14&#x60;: shannon - &#x60;Q15&#x60;: hartley - &#x60;Q16&#x60;: natural unit of information - &#x60;Q17&#x60;: shannon per second - &#x60;Q18&#x60;: hartley per second - &#x60;Q19&#x60;: natural unit of information per second - &#x60;Q20&#x60;: second per kilogramm - &#x60;Q21&#x60;: watt square metre - &#x60;Q22&#x60;: second per radian cubic metre - &#x60;Q23&#x60;: weber to the power minus one - &#x60;Q24&#x60;: reciprocal inch - &#x60;Q25&#x60;: dioptre - &#x60;Q26&#x60;: one per one - &#x60;Q27&#x60;: newton metre per metre - &#x60;Q28&#x60;: kilogram per square metre pascal second - &#x60;Q29&#x60;: microgram per hectogram - &#x60;Q30&#x60;: pH (potential of Hydrogen) - &#x60;Q31&#x60;: kilojoule per gram - &#x60;Q32&#x60;: femtolitre - &#x60;Q33&#x60;: picolitre - &#x60;Q34&#x60;: nanolitre - &#x60;Q35&#x60;: megawatts per minute - &#x60;Q36&#x60;: square metre per cubic metre - &#x60;Q37&#x60;: Standard cubic metre per day - &#x60;Q38&#x60;: Standard cubic metre per hour - &#x60;Q39&#x60;: Normalized cubic metre per day - &#x60;Q40&#x60;: Normalized cubic metre per hour - &#x60;Q41&#x60;: Joule per normalised cubic metre - &#x60;Q42&#x60;: Joule per standard cubic metre - &#x60;Q3&#x60;: meal - &#x60;QA&#x60;: page - facsimile - &#x60;QAN&#x60;: quarter (of a year) - &#x60;QB&#x60;: page - hardcopy - &#x60;QR&#x60;: quire - &#x60;QTD&#x60;: dry quart (US) - &#x60;QTI&#x60;: quart (UK) - &#x60;QTL&#x60;: liquid quart (US) - &#x60;QTR&#x60;: quarter (UK) - &#x60;R1&#x60;: pica - &#x60;R9&#x60;: thousand cubic metre - &#x60;RH&#x60;: running or operating hour - &#x60;RM&#x60;: ream - &#x60;ROM&#x60;: room - &#x60;RP&#x60;: pound per ream - &#x60;RPM&#x60;: revolutions per minute - &#x60;RPS&#x60;: revolutions per second - &#x60;RT&#x60;: revenue ton mile - &#x60;S3&#x60;: square foot per second - &#x60;S4&#x60;: square metre per second - &#x60;SAN&#x60;: half year (6 months) - &#x60;SCO&#x60;: score - &#x60;SCR&#x60;: scruple - &#x60;SEC&#x60;: second [unit of time] - &#x60;SET&#x60;: set - &#x60;SG&#x60;: Segment - &#x60;SIE&#x60;: Siemens - &#x60;SM3&#x60;: Standard Kubikmeter - &#x60;SMI&#x60;: Meile (britische Meile) - &#x60;SQ&#x60;: Platz - &#x60;SQR&#x60;: quadratisch, �berdachung - &#x60;SR&#x60;: Streifen - &#x60;STC&#x60;: Stick - &#x60;STI&#x60;: Stein (UK) - &#x60;STK&#x60;: Stick, Zigarette - &#x60;STL&#x60;: Standardliter - &#x60;STN&#x60;: Tonne (US) oder kurze Tonne (UK/US) - &#x60;STW&#x60;: Stroh - &#x60;SW&#x60;: Strang - &#x60;SX&#x60;: Sendung - &#x60;SYR&#x60;: Spritze - &#x60;T0&#x60;: Telekommunikationsleitung in Betrieb - &#x60;T3&#x60;: Tausend St�ck - &#x60;TAH&#x60;: Kiloampere-Stunde (Tausend-Ampere-Stunde) - &#x60;TAN&#x60;: Gesamts�urezahl - &#x60;TI&#x60;: tausend Quadratzoll - &#x60;TIC&#x60;: metrische Tonne, einschlie�lich Container - &#x60;TIP&#x60;: metrische Tonne, einschlie�lich Innenverpackung - &#x60;TKM&#x60;: Tonnenkilometer - &#x60;TMS&#x60;: Kilogramm importiertes Fleisch, abz�glich Innereien - &#x60;TNE&#x60;: Tonne (metrische Tonne) - &#x60;TP&#x60;: Zehnerpack - &#x60;TPI&#x60;: Z�hne pro Zoll - &#x60;TPR&#x60;: zehn Paar - &#x60;TQD&#x60;: Tausend Kubikmeter pro Tag - &#x60;TRL&#x60;: Trillion (EUR) - &#x60;TST&#x60;: Zehnergruppe - &#x60;TTS&#x60;: zehntausend St�cke - &#x60;U1&#x60;: Behandlung - &#x60;U2&#x60;: Tablette - &#x60;UB&#x60;: Telekommunikationsleitung in Betrieb durchschnittlich - &#x60;UC&#x60;: Telekommunikationsanschluss - &#x60;VA&#x60;: Volt - Ampere pro Kilogram - &#x60;VLT&#x60;: Volt - &#x60;VP&#x60;: Prozent Volumen - &#x60;W2&#x60;: Kilogrammgesetz - &#x60;WA&#x60;: Watt pro Kilogramm - &#x60;WB&#x60;: nasses Pfund - &#x60;WCD&#x60;: Kabel - &#x60;WE&#x60;: Nasstonne - &#x60;WEB&#x60;: weber - &#x60;WEE&#x60;: Woche - &#x60;WG&#x60;: Weingallone - &#x60;WHR&#x60;: Arbeitsmonat - &#x60;WM&#x60;: Arbeitsmonat - &#x60;WSD&#x60;: Standard - &#x60;WTT&#x60;: Watt - &#x60;X1&#x60;: Gunter&#39;s Kette - &#x60;YDK&#x60;: Platz Yard - &#x60;YDQ&#x60;: kubisch Yard - &#x60;YRD&#x60;: Yard - &#x60;Z11&#x60;: H�ngebeh�lter - &#x60;ZP&#x60;: Seite - &#x60;ZZ&#x60;: gemeinsam definiert</value>
        [DataMember(Name="unit", EmitDefaultValue=false)]
        public UnitEnum Unit { get; set; }

        /// <summary>
        /// Gross price (BT-146)  &#x3D; NET - DISCOUNT  __NOTE__: Actually this value is required, but may be auto-completed, if the net is given.
        /// </summary>
        /// <value>Gross price (BT-146)  &#x3D; NET - DISCOUNT  __NOTE__: Actually this value is required, but may be auto-completed, if the net is given.</value>
        [DataMember(Name="gross", EmitDefaultValue=false)]
        public decimal Gross { get; set; }

        /// <summary>
        /// Discount net amount (BT-147)
        /// </summary>
        /// <value>Discount net amount (BT-147)</value>
        [DataMember(Name="discount", EmitDefaultValue=false)]
        public decimal Discount { get; set; }

        /// <summary>
        /// Net price (BT-147)  __NOTE__: Actually this value is required, but may be auto-completed, if the gross is given.
        /// </summary>
        /// <value>Net price (BT-147)  __NOTE__: Actually this value is required, but may be auto-completed, if the gross is given.</value>
        [DataMember(Name="net", EmitDefaultValue=false)]
        public decimal Net { get; set; }

        /// <summary>
        /// VAT percent (BT-152)  __NOTE__: Actually this value is required, but may be auto-completed from the first VAT record that matches the vat category.
        /// </summary>
        /// <value>VAT percent (BT-152)  __NOTE__: Actually this value is required, but may be auto-completed from the first VAT record that matches the vat category.</value>
        [DataMember(Name="vat", EmitDefaultValue=false)]
        public decimal Vat { get; set; }


        /// <summary>
        /// VAT category (BT-151)  - `S`: Default - `Z`: Item without tax - `E`: Exempted from tax - `AE`: Reversal of tax liability - `K`: Exemption from VAT for intra-EEA supply of goods and services - `G`: Free export position, without tax - `O`: Non-tax services - `L`: Canary Islands general indirect tax - `M`: Tax on production, services and imports in Ceuta and Melilla  __NOTE__: Actually this value is required, but may be auto-completed from the first VAT record that matches the VAT.
        /// </summary>
        /// <value>VAT category (BT-151)  - `S`: Default - `Z`: Item without tax - `E`: Exempted from tax - `AE`: Reversal of tax liability - `K`: Exemption from VAT for intra-EEA supply of goods and services - `G`: Free export position, without tax - `O`: Non-tax services - `L`: Canary Islands general indirect tax - `M`: Tax on production, services and imports in Ceuta and Melilla  __NOTE__: Actually this value is required, but may be auto-completed from the first VAT record that matches the VAT.</value>
        [TypeConverter(typeof(CustomEnumConverter<VatCategoryEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum VatCategoryEnum
        {
            
            /// <summary>
            /// Enum SEnum for S
            /// </summary>
            [EnumMember(Value = "S")]
            SEnum = 1,
            
            /// <summary>
            /// Enum ZEnum for Z
            /// </summary>
            [EnumMember(Value = "Z")]
            ZEnum = 2,
            
            /// <summary>
            /// Enum EEnum for E
            /// </summary>
            [EnumMember(Value = "E")]
            EEnum = 3,
            
            /// <summary>
            /// Enum AEEnum for AE
            /// </summary>
            [EnumMember(Value = "AE")]
            AEEnum = 4,
            
            /// <summary>
            /// Enum KEnum for K
            /// </summary>
            [EnumMember(Value = "K")]
            KEnum = 5,
            
            /// <summary>
            /// Enum GEnum for G
            /// </summary>
            [EnumMember(Value = "G")]
            GEnum = 6,
            
            /// <summary>
            /// Enum OEnum for O
            /// </summary>
            [EnumMember(Value = "O")]
            OEnum = 7,
            
            /// <summary>
            /// Enum LEnum for L
            /// </summary>
            [EnumMember(Value = "L")]
            LEnum = 8,
            
            /// <summary>
            /// Enum MEnum for M
            /// </summary>
            [EnumMember(Value = "M")]
            MEnum = 9
        }

        /// <summary>
        /// VAT category (BT-151)  - &#x60;S&#x60;: Default - &#x60;Z&#x60;: Item without tax - &#x60;E&#x60;: Exempted from tax - &#x60;AE&#x60;: Reversal of tax liability - &#x60;K&#x60;: Exemption from VAT for intra-EEA supply of goods and services - &#x60;G&#x60;: Free export position, without tax - &#x60;O&#x60;: Non-tax services - &#x60;L&#x60;: Canary Islands general indirect tax - &#x60;M&#x60;: Tax on production, services and imports in Ceuta and Melilla  __NOTE__: Actually this value is required, but may be auto-completed from the first VAT record that matches the VAT.
        /// </summary>
        /// <value>VAT category (BT-151)  - &#x60;S&#x60;: Default - &#x60;Z&#x60;: Item without tax - &#x60;E&#x60;: Exempted from tax - &#x60;AE&#x60;: Reversal of tax liability - &#x60;K&#x60;: Exemption from VAT for intra-EEA supply of goods and services - &#x60;G&#x60;: Free export position, without tax - &#x60;O&#x60;: Non-tax services - &#x60;L&#x60;: Canary Islands general indirect tax - &#x60;M&#x60;: Tax on production, services and imports in Ceuta and Melilla  __NOTE__: Actually this value is required, but may be auto-completed from the first VAT record that matches the VAT.</value>
        [DataMember(Name="vatCategory", EmitDefaultValue=false)]
        public VatCategoryEnum VatCategory { get; set; }

        /// <summary>
        /// Note (BT-127)
        /// </summary>
        /// <value>Note (BT-127)</value>
        [MinLength(1)]
        [DataMember(Name="note", EmitDefaultValue=false)]
        public string Note { get; set; }

        /// <summary>
        /// Period start date (BT-134)
        /// </summary>
        /// <value>Period start date (BT-134)</value>
        [DataMember(Name="periodStart", EmitDefaultValue=false)]
        public DateOnly PeriodStart { get; set; }

        /// <summary>
        /// Period end date (BT-135)
        /// </summary>
        /// <value>Period end date (BT-135)</value>
        [DataMember(Name="periodEnd", EmitDefaultValue=false)]
        public DateOnly PeriodEnd { get; set; }

        /// <summary>
        /// Total amount (BT-131)  &#x3D; GROSS * (QUANTITY / BASE_QUANTITY)  __NOTE__: Actually this value is required, but may be auto-completed from the other values.
        /// </summary>
        /// <value>Total amount (BT-131)  &#x3D; GROSS * (QUANTITY / BASE_QUANTITY)  __NOTE__: Actually this value is required, but may be auto-completed from the other values.</value>
        [DataMember(Name="total", EmitDefaultValue=false)]
        public decimal Total { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GotomaxxJsonDocumentItem {\n");
            sb.Append("  LineId: ").Append(LineId).Append("\n");
            sb.Append("  ReferenceLineId: ").Append(ReferenceLineId).Append("\n");
            sb.Append("  SellerId: ").Append(SellerId).Append("\n");
            sb.Append("  BuyerId: ").Append(BuyerId).Append("\n");
            sb.Append("  Object: ").Append(Object).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  BaseQuantity: ").Append(BaseQuantity).Append("\n");
            sb.Append("  Unit: ").Append(Unit).Append("\n");
            sb.Append("  Gross: ").Append(Gross).Append("\n");
            sb.Append("  Discount: ").Append(Discount).Append("\n");
            sb.Append("  Net: ").Append(Net).Append("\n");
            sb.Append("  Vat: ").Append(Vat).Append("\n");
            sb.Append("  VatCategory: ").Append(VatCategory).Append("\n");
            sb.Append("  Note: ").Append(Note).Append("\n");
            sb.Append("  PeriodStart: ").Append(PeriodStart).Append("\n");
            sb.Append("  PeriodEnd: ").Append(PeriodEnd).Append("\n");
            sb.Append("  Total: ").Append(Total).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((GotomaxxJsonDocumentItem)obj);
        }

        /// <summary>
        /// Returns true if GotomaxxJsonDocumentItem instances are equal
        /// </summary>
        /// <param name="other">Instance of GotomaxxJsonDocumentItem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GotomaxxJsonDocumentItem other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    LineId == other.LineId ||
                    LineId != null &&
                    LineId.Equals(other.LineId)
                ) && 
                (
                    ReferenceLineId == other.ReferenceLineId ||
                    ReferenceLineId != null &&
                    ReferenceLineId.Equals(other.ReferenceLineId)
                ) && 
                (
                    SellerId == other.SellerId ||
                    SellerId != null &&
                    SellerId.Equals(other.SellerId)
                ) && 
                (
                    BuyerId == other.BuyerId ||
                    BuyerId != null &&
                    BuyerId.Equals(other.BuyerId)
                ) && 
                (
                    Object == other.Object ||
                    Object != null &&
                    Object.Equals(other.Object)
                ) && 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    Quantity == other.Quantity ||
                    
                    Quantity.Equals(other.Quantity)
                ) && 
                (
                    BaseQuantity == other.BaseQuantity ||
                    
                    BaseQuantity.Equals(other.BaseQuantity)
                ) && 
                (
                    Unit == other.Unit ||
                    
                    Unit.Equals(other.Unit)
                ) && 
                (
                    Gross == other.Gross ||
                    
                    Gross.Equals(other.Gross)
                ) && 
                (
                    Discount == other.Discount ||
                    
                    Discount.Equals(other.Discount)
                ) && 
                (
                    Net == other.Net ||
                    
                    Net.Equals(other.Net)
                ) && 
                (
                    Vat == other.Vat ||
                    
                    Vat.Equals(other.Vat)
                ) && 
                (
                    VatCategory == other.VatCategory ||
                    
                    VatCategory.Equals(other.VatCategory)
                ) && 
                (
                    Note == other.Note ||
                    Note != null &&
                    Note.Equals(other.Note)
                ) && 
                (
                    PeriodStart == other.PeriodStart ||
                    PeriodStart != null &&
                    PeriodStart.Equals(other.PeriodStart)
                ) && 
                (
                    PeriodEnd == other.PeriodEnd ||
                    PeriodEnd != null &&
                    PeriodEnd.Equals(other.PeriodEnd)
                ) && 
                (
                    Total == other.Total ||
                    
                    Total.Equals(other.Total)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (LineId != null)
                    hashCode = hashCode * 59 + LineId.GetHashCode();
                    if (ReferenceLineId != null)
                    hashCode = hashCode * 59 + ReferenceLineId.GetHashCode();
                    if (SellerId != null)
                    hashCode = hashCode * 59 + SellerId.GetHashCode();
                    if (BuyerId != null)
                    hashCode = hashCode * 59 + BuyerId.GetHashCode();
                    if (Object != null)
                    hashCode = hashCode * 59 + Object.GetHashCode();
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    
                    hashCode = hashCode * 59 + Quantity.GetHashCode();
                    
                    hashCode = hashCode * 59 + BaseQuantity.GetHashCode();
                    
                    hashCode = hashCode * 59 + Unit.GetHashCode();
                    
                    hashCode = hashCode * 59 + Gross.GetHashCode();
                    
                    hashCode = hashCode * 59 + Discount.GetHashCode();
                    
                    hashCode = hashCode * 59 + Net.GetHashCode();
                    
                    hashCode = hashCode * 59 + Vat.GetHashCode();
                    
                    hashCode = hashCode * 59 + VatCategory.GetHashCode();
                    if (Note != null)
                    hashCode = hashCode * 59 + Note.GetHashCode();
                    if (PeriodStart != null)
                    hashCode = hashCode * 59 + PeriodStart.GetHashCode();
                    if (PeriodEnd != null)
                    hashCode = hashCode * 59 + PeriodEnd.GetHashCode();
                    
                    hashCode = hashCode * 59 + Total.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(GotomaxxJsonDocumentItem left, GotomaxxJsonDocumentItem right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(GotomaxxJsonDocumentItem left, GotomaxxJsonDocumentItem right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
